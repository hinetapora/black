{
  "title": "Snippet",
  "description": "Snippet is a component that can be used to display inline or multiline code snippets.",
  "body": {
    "raw": "\nimport {snippetContent} from \"@/content/components/snippet\";\n\n# Snippet\n\nSnippet is a component that can be used to display inline or multiline code snippets.\n\n<ComponentLinks component=\"snippet\" />\n\n---\n\n<CarbonAd/>\n\n## Installation\n\n<PackageManagers\n  showGlobalInstallWarning\n  commands={{\n    cli: \"npx nextui-cli@latest add snippet\",\n    npm: \"npm install @nextui-org/snippet\",\n    yarn: \"yarn add @nextui-org/snippet\",\n    pnpm: \"pnpm add @nextui-org/snippet\",\n    bun: \"bun add @nextui-org/snippet\"\n  }}\n/>\n\n\n## Import\n\n<ImportTabs\n  commands={{\n    main: 'import {Snippet} from \"@nextui-org/react\";',\n    individual: 'import {Snippet} from \"@nextui-org/snippet\";',\n  }}\n/>\n\n## Usage\n\n<CodeDemo title=\"Snippet\" files={snippetContent.usage} />\n\n### Sizes\n\n<CodeDemo title=\"Sizes\" files={snippetContent.sizes} />\n\n### Colors\n\n<CodeDemo title=\"Colors\" files={snippetContent.colors} />\n\n### Variants\n\n<CodeDemo title=\"Variants\" files={snippetContent.variants} />\n\n### Custom Symbol\n\n<CodeDemo title=\"Custom Symbol\" files={snippetContent.symbol} />\n\n### Without Copy\n\nYou can hide the copy button by setting the `hideCopyButton` property to `true`.\n\n<CodeDemo title=\"Without Copy\" files={snippetContent.withoutCopy} />\n\n### Custom Tooltip\n\nYou can customize the tooltip by using the `tooltipProps` property.\n\n<CodeDemo title=\"Custom Tooltip\" highlightedLines=\"7-10\" files={snippetContent.customTooltip} />\n\n> **Note**: For more information about the `Tooltip` props, please visit the [Tooltip](/docs/components/tooltip) page.\n\n### Multiline\n\n<CodeDemo title=\"Multiline\" files={snippetContent.multiline} />\n\n### Custom Icons\n\nYou can customize the copy and copied icons by using the `copyIcon` and `checkIcon` properties.\n\n<CodeDemo title=\"Custom Icons\" highlightedLines=\"9-10\" files={snippetContent.customIcons} />\n\n## Slots\n\n- **base**: The base slot of the snippet, it is the main container.\n- **content**: This is the wrapper of the `<pre/>` slot.\n- **pre**: The `<pre/>` slot of the snippet. It is used to wrap the code.\n- **symbol**: The symbol wrapper slot.\n- **copyButton**: The copy button slot.\n- **copyIcon**: The copy icon slot.\n- **checkIcon**: The check icon slot.\n\n<Spacer y={4} />\n\n## API\n\n### Snippet Props\n\n| Attribute        | Type                                                                            | Description                                                                                    | Default |\n| ---------------- | ------------------------------------------------------------------------------- | ---------------------------------------------------------------------------------------------- | ------- |\n| children         | `ReactNode` \\| `ReactNode[]`                                                    | The content of the snippet.                                                                    | -       |\n| size             | `sm` \\| `md` \\| `lg`                                                            | The size of the snippet.                                                                       | `md`    |\n| radius           | `none` \\| `sm` \\| `md` \\| `lg`                                                  | The radius of the snippet.                                                                     | `lg`    |\n| symbol           | `string` \\| `ReactNode`                                                         | The symbol to show before the snippet.                                                         | `$`     |\n| timeout          | `number`                                                                        | The time in milliseconds to wait before resetting the clipboard.                                | `2000`  |\n| codeString       | `string`                                                                        | The code string to copy. if `codeString` is passed, it will be copied instead of the children. | -       |\n| tooltipProps     | [TooltipProps](/docs/components/tooltip#tooltip-props)                          | The props of the tooltip.                                                                      | -       |\n| copyIcon         | `ReactNode`                                                                     | The copy icon.                                                                                 | -       |\n| checkIcon        | `ReactNode`                                                                     | The check icon.                                                                                | -       |\n| disableTooltip   | `boolean`                                                                       | Whether to disable the tooltip.                                                                | `false` |\n| disableCopy      | `boolean`                                                                       | Whether to disable the copy button.                                                            | `false` |\n| hideCopyButton   | `boolean`                                                                       | Whether to hide the copy button.                                                               | `false` |\n| hideSymbol       | `boolean`                                                                       | Whether to hide the symbol.                                                                    | `false` |\n| copyButtonProps  | [ButtonProps](/docs/components/button#button-props)                             | The props of the copy button.                                                                  | -       |\n| disableAnimation | `boolean`                                                                       | Whether to disable the animations.                                                             | `false` |\n| classNames       | `Record<\"base\"｜\"content\"｜\"pre\"｜\"symbol\"｜\"copyButton\"｜\"checkIcon\", string>` | Allows to set custom class names for the snippet slots.                                        | -       |\n\n### Snippet Events\n\n| Attribute | Type                                   | Description                                     |\n| --------- | -------------------------------------- | ----------------------------------------------- |\n| onCopy    | `(value: string ｜ string[]) => void;` | Handler that is called when the code is copied. |\n",
    "code": "var Component=(()=>{var T=Object.create;var p=Object.defineProperty;var k=Object.getOwnPropertyDescriptor;var j=Object.getOwnPropertyNames;var z=Object.getPrototypeOf,P=Object.prototype.hasOwnProperty;var M=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),N=(n,e)=>{for(var o in e)p(n,o,{get:e[o],enumerable:!0})},a=(n,e,o,i)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let c of j(e))!P.call(n,c)&&c!==o&&p(n,c,{get:()=>e[c],enumerable:!(i=k(e,c))||i.enumerable});return n};var B=(n,e,o)=>(o=n!=null?T(z(n)):{},a(e||!n||!n.__esModule?p(o,\"default\",{value:n,enumerable:!0}):o,n)),D=n=>a(p({},\"__esModule\",{value:!0}),n);var m=M((oe,u)=>{u.exports=_jsx_runtime});var ne={};N(ne,{default:()=>v,frontmatter:()=>te});var t=B(m());var W=`import {Snippet} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <Snippet>npm install @nextui-org/react</Snippet>\n  );\n}`,_={\"/App.jsx\":W},f={..._};var R=`import {Snippet} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <div className=\"flex flex-wrap gap-4\">\n      <Snippet size=\"sm\">npm install @nextui-org/react</Snippet>\n      <Snippet size=\"md\">npm install @nextui-org/react</Snippet>\n      <Snippet size=\"lg\">npm install @nextui-org/react</Snippet>\n    </div>  \n  );\n}`,L={\"/App.jsx\":R},g={...L};var V=`import {Snippet} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <div className=\"flex flex-wrap gap-4\">\n      <Snippet color=\"default\">npm install @nextui-org/react</Snippet>\n      <Snippet color=\"primary\">npm install @nextui-org/react</Snippet>\n      <Snippet color=\"secondary\">npm install @nextui-org/react</Snippet>\n      <Snippet color=\"success\">npm install @nextui-org/react</Snippet>\n      <Snippet color=\"warning\">npm install @nextui-org/react</Snippet>\n      <Snippet color=\"danger\">npm install @nextui-org/react</Snippet>\n    </div> \n  );\n}`,H={\"/App.jsx\":V},x={...H};var q=`import {Snippet} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <div className=\"flex flex-wrap gap-4\">\n      <Snippet variant=\"bordered\">npm install @nextui-org/react</Snippet>\n      <Snippet variant=\"flat\" color=\"warning\">npm install @nextui-org/react</Snippet>\n      <Snippet variant=\"solid\" color=\"primary\">npm install @nextui-org/react</Snippet>\n      <Snippet variant=\"shadow\" color=\"secondary\">npm install @nextui-org/react</Snippet>\n    </div> \n  );\n}`,E={\"/App.jsx\":q},y={...E};var F=`import {Snippet} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <Snippet symbol=\"#\" variant=\"bordered\">npm install @nextui-org/react</Snippet>\n  );\n}`,Y={\"/App.jsx\":F},b={...Y};var X=`import {Snippet} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <Snippet hideCopyButton color=\"primary\" variant=\"solid\">\n      npm install @nextui-org/react\n    </Snippet>\n  );\n}`,G={\"/App.jsx\":X},S={...G};var U=`import {Snippet} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <Snippet\n      tooltipProps={{\n        color: \"foreground\",\n        content: \"Copy this snippet\",\n        disableAnimation: true,\n        placement: \"right\",\n        closeDelay: 0\n      }}\n    >\n      npm install @nextui-org/react\n    </Snippet>\n  );\n}`,Z={\"/App.jsx\":U},C={...Z};var $=`import {Snippet} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <Snippet>\n      <span>npm install @nextui-org/react</span>\n      <span>yarn add @nextui-org/react</span>\n      <span>pnpm add @nextui-org/react</span>\n    </Snippet>\n  );\n}`,J={\"/App.jsx\":$},A={...J};var K=`export const CopyIcon = ({ size, height, width, ...props }) => {\n  return (\n    <svg\n      fill=\"none\"\n      height={height || 20}\n      shape-rendering=\"geometricPrecision\"\n      stroke=\"currentColor\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n      stroke-width=\"1.5\"\n      viewBox=\"0 0 24 24\"\n      width={width || 20}\n      {...props}\n    >\n      <path d=\"M6 17C4.89543 17 4 16.1046 4 15V5C4 3.89543 4.89543 3 6 3H13C13.7403 3 14.3866 3.4022 14.7324 4M11 21H18C19.1046 21 20 20.1046 20 19V9C20 7.89543 19.1046 7 18 7H11C9.89543 7 9 7.89543 9 9V19C9 20.1046 9.89543 21 11 21Z\" />\n    </svg>\n  );\n};`,O=`export const CheckIcon = ({\n  size,\n  height,\n  width,\n  ...props\n}) => {\n  return (\n    <svg\n      width={size || width || 24}\n      height={size || height || 24}\n      viewBox=\"0 0 24 24\"\n      fill=\"currentColor\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path d=\"m2.394 13.742 4.743 3.62 7.616-8.704-1.506-1.316-6.384 7.296-3.257-2.486zm19.359-5.084-1.506-1.316-6.369 7.279-.753-.602-1.25 1.562 2.247 1.798z\"/>\n    </svg>\n  );\n};`,Q=`import {Snippet} from \"@nextui-org/react\";\nimport {CopyIcon} from \"./CopyIcon\";\nimport {CheckIcon} from \"./CheckIcon\";\n\nexport default function App() {\n  return (\n    <Snippet\n      variant=\"bordered\"\n      copyIcon={<CopyIcon />}\n      checkIcon={<CheckIcon />}\n    >\n      npm install @nextui-org/react\n    </Snippet>\n  );\n}`,ee={\"/App.jsx\":Q,\"/CopyIcon.jsx\":K,\"/CheckIcon.jsx\":O},w={...ee};var r={usage:f,sizes:g,colors:x,variants:y,symbol:b,withoutCopy:S,customTooltip:C,multiline:A,customIcons:w};var te={title:\"Snippet\",description:\"Snippet is a component that can be used to display inline or multiline code snippets.\"};function I(n){let e={a:\"a\",blockquote:\"blockquote\",code:\"code\",h1:\"h1\",h2:\"h2\",h3:\"h3\",hr:\"hr\",li:\"li\",p:\"p\",strong:\"strong\",table:\"table\",tbody:\"tbody\",td:\"td\",th:\"th\",thead:\"thead\",tr:\"tr\",ul:\"ul\",...n.components},{CarbonAd:o,CodeDemo:i,ComponentLinks:c,ImportTabs:l,PackageManagers:h,Spacer:s}=e;return o||d(\"CarbonAd\",!0),i||d(\"CodeDemo\",!0),c||d(\"ComponentLinks\",!0),l||d(\"ImportTabs\",!0),h||d(\"PackageManagers\",!0),s||d(\"Spacer\",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h1,{id:\"snippet\",children:\"Snippet\"}),`\n`,(0,t.jsx)(e.p,{children:\"Snippet is a component that can be used to display inline or multiline code snippets.\"}),`\n`,(0,t.jsx)(c,{component:\"snippet\"}),`\n`,(0,t.jsx)(e.hr,{}),`\n`,(0,t.jsx)(o,{}),`\n`,(0,t.jsx)(e.h2,{id:\"installation\",children:\"Installation\"}),`\n`,(0,t.jsx)(h,{showGlobalInstallWarning:!0,commands:{cli:\"npx nextui-cli@latest add snippet\",npm:\"npm install @nextui-org/snippet\",yarn:\"yarn add @nextui-org/snippet\",pnpm:\"pnpm add @nextui-org/snippet\",bun:\"bun add @nextui-org/snippet\"}}),`\n`,(0,t.jsx)(e.h2,{id:\"import\",children:\"Import\"}),`\n`,(0,t.jsx)(l,{commands:{main:'import {Snippet} from \"@nextui-org/react\";',individual:'import {Snippet} from \"@nextui-org/snippet\";'}}),`\n`,(0,t.jsx)(e.h2,{id:\"usage\",children:\"Usage\"}),`\n`,(0,t.jsx)(i,{title:\"Snippet\",files:r.usage}),`\n`,(0,t.jsx)(e.h3,{id:\"sizes\",children:\"Sizes\"}),`\n`,(0,t.jsx)(i,{title:\"Sizes\",files:r.sizes}),`\n`,(0,t.jsx)(e.h3,{id:\"colors\",children:\"Colors\"}),`\n`,(0,t.jsx)(i,{title:\"Colors\",files:r.colors}),`\n`,(0,t.jsx)(e.h3,{id:\"variants\",children:\"Variants\"}),`\n`,(0,t.jsx)(i,{title:\"Variants\",files:r.variants}),`\n`,(0,t.jsx)(e.h3,{id:\"custom-symbol\",children:\"Custom Symbol\"}),`\n`,(0,t.jsx)(i,{title:\"Custom Symbol\",files:r.symbol}),`\n`,(0,t.jsx)(e.h3,{id:\"without-copy\",children:\"Without Copy\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"You can hide the copy button by setting the \",(0,t.jsx)(e.code,{children:\"hideCopyButton\"}),\" property to \",(0,t.jsx)(e.code,{children:\"true\"}),\".\"]}),`\n`,(0,t.jsx)(i,{title:\"Without Copy\",files:r.withoutCopy}),`\n`,(0,t.jsx)(e.h3,{id:\"custom-tooltip\",children:\"Custom Tooltip\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"You can customize the tooltip by using the \",(0,t.jsx)(e.code,{children:\"tooltipProps\"}),\" property.\"]}),`\n`,(0,t.jsx)(i,{title:\"Custom Tooltip\",highlightedLines:\"7-10\",files:r.customTooltip}),`\n`,(0,t.jsxs)(e.blockquote,{children:[`\n`,(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:\"Note\"}),\": For more information about the \",(0,t.jsx)(e.code,{children:\"Tooltip\"}),\" props, please visit the \",(0,t.jsx)(e.a,{href:\"/docs/components/tooltip\",children:\"Tooltip\"}),\" page.\"]}),`\n`]}),`\n`,(0,t.jsx)(e.h3,{id:\"multiline\",children:\"Multiline\"}),`\n`,(0,t.jsx)(i,{title:\"Multiline\",files:r.multiline}),`\n`,(0,t.jsx)(e.h3,{id:\"custom-icons\",children:\"Custom Icons\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"You can customize the copy and copied icons by using the \",(0,t.jsx)(e.code,{children:\"copyIcon\"}),\" and \",(0,t.jsx)(e.code,{children:\"checkIcon\"}),\" properties.\"]}),`\n`,(0,t.jsx)(i,{title:\"Custom Icons\",highlightedLines:\"9-10\",files:r.customIcons}),`\n`,(0,t.jsx)(e.h2,{id:\"slots\",children:\"Slots\"}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:\"base\"}),\": The base slot of the snippet, it is the main container.\"]}),`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:\"content\"}),\": This is the wrapper of the \",(0,t.jsx)(e.code,{children:\"<pre/>\"}),\" slot.\"]}),`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:\"pre\"}),\": The \",(0,t.jsx)(e.code,{children:\"<pre/>\"}),\" slot of the snippet. It is used to wrap the code.\"]}),`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:\"symbol\"}),\": The symbol wrapper slot.\"]}),`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:\"copyButton\"}),\": The copy button slot.\"]}),`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:\"copyIcon\"}),\": The copy icon slot.\"]}),`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:\"checkIcon\"}),\": The check icon slot.\"]}),`\n`]}),`\n`,(0,t.jsx)(s,{y:4}),`\n`,(0,t.jsx)(e.h2,{id:\"api\",children:\"API\"}),`\n`,(0,t.jsx)(e.h3,{id:\"snippet-props\",children:\"Snippet Props\"}),`\n`,(0,t.jsxs)(e.table,{children:[(0,t.jsx)(e.thead,{children:(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.th,{children:\"Attribute\"}),(0,t.jsx)(e.th,{children:\"Type\"}),(0,t.jsx)(e.th,{children:\"Description\"}),(0,t.jsx)(e.th,{children:\"Default\"})]})}),(0,t.jsxs)(e.tbody,{children:[(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:\"children\"}),(0,t.jsxs)(e.td,{children:[(0,t.jsx)(e.code,{children:\"ReactNode\"}),\" | \",(0,t.jsx)(e.code,{children:\"ReactNode[]\"})]}),(0,t.jsx)(e.td,{children:\"The content of the snippet.\"}),(0,t.jsx)(e.td,{children:\"-\"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:\"size\"}),(0,t.jsxs)(e.td,{children:[(0,t.jsx)(e.code,{children:\"sm\"}),\" | \",(0,t.jsx)(e.code,{children:\"md\"}),\" | \",(0,t.jsx)(e.code,{children:\"lg\"})]}),(0,t.jsx)(e.td,{children:\"The size of the snippet.\"}),(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:\"md\"})})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:\"radius\"}),(0,t.jsxs)(e.td,{children:[(0,t.jsx)(e.code,{children:\"none\"}),\" | \",(0,t.jsx)(e.code,{children:\"sm\"}),\" | \",(0,t.jsx)(e.code,{children:\"md\"}),\" | \",(0,t.jsx)(e.code,{children:\"lg\"})]}),(0,t.jsx)(e.td,{children:\"The radius of the snippet.\"}),(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:\"lg\"})})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:\"symbol\"}),(0,t.jsxs)(e.td,{children:[(0,t.jsx)(e.code,{children:\"string\"}),\" | \",(0,t.jsx)(e.code,{children:\"ReactNode\"})]}),(0,t.jsx)(e.td,{children:\"The symbol to show before the snippet.\"}),(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:\"$\"})})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:\"timeout\"}),(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:\"number\"})}),(0,t.jsx)(e.td,{children:\"The time in milliseconds to wait before resetting the clipboard.\"}),(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:\"2000\"})})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:\"codeString\"}),(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:\"string\"})}),(0,t.jsxs)(e.td,{children:[\"The code string to copy. if \",(0,t.jsx)(e.code,{children:\"codeString\"}),\" is passed, it will be copied instead of the children.\"]}),(0,t.jsx)(e.td,{children:\"-\"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:\"tooltipProps\"}),(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:\"/docs/components/tooltip#tooltip-props\",children:\"TooltipProps\"})}),(0,t.jsx)(e.td,{children:\"The props of the tooltip.\"}),(0,t.jsx)(e.td,{children:\"-\"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:\"copyIcon\"}),(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:\"ReactNode\"})}),(0,t.jsx)(e.td,{children:\"The copy icon.\"}),(0,t.jsx)(e.td,{children:\"-\"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:\"checkIcon\"}),(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:\"ReactNode\"})}),(0,t.jsx)(e.td,{children:\"The check icon.\"}),(0,t.jsx)(e.td,{children:\"-\"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:\"disableTooltip\"}),(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:\"boolean\"})}),(0,t.jsx)(e.td,{children:\"Whether to disable the tooltip.\"}),(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:\"false\"})})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:\"disableCopy\"}),(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:\"boolean\"})}),(0,t.jsx)(e.td,{children:\"Whether to disable the copy button.\"}),(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:\"false\"})})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:\"hideCopyButton\"}),(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:\"boolean\"})}),(0,t.jsx)(e.td,{children:\"Whether to hide the copy button.\"}),(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:\"false\"})})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:\"hideSymbol\"}),(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:\"boolean\"})}),(0,t.jsx)(e.td,{children:\"Whether to hide the symbol.\"}),(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:\"false\"})})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:\"copyButtonProps\"}),(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:\"/docs/components/button#button-props\",children:\"ButtonProps\"})}),(0,t.jsx)(e.td,{children:\"The props of the copy button.\"}),(0,t.jsx)(e.td,{children:\"-\"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:\"disableAnimation\"}),(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:\"boolean\"})}),(0,t.jsx)(e.td,{children:\"Whether to disable the animations.\"}),(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:\"false\"})})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:\"classNames\"}),(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:'Record<\"base\"\\uFF5C\"content\"\\uFF5C\"pre\"\\uFF5C\"symbol\"\\uFF5C\"copyButton\"\\uFF5C\"checkIcon\", string>'})}),(0,t.jsx)(e.td,{children:\"Allows to set custom class names for the snippet slots.\"}),(0,t.jsx)(e.td,{children:\"-\"})]})]})]}),`\n`,(0,t.jsx)(e.h3,{id:\"snippet-events\",children:\"Snippet Events\"}),`\n`,(0,t.jsxs)(e.table,{children:[(0,t.jsx)(e.thead,{children:(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.th,{children:\"Attribute\"}),(0,t.jsx)(e.th,{children:\"Type\"}),(0,t.jsx)(e.th,{children:\"Description\"})]})}),(0,t.jsx)(e.tbody,{children:(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:\"onCopy\"}),(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:\"(value: string \\uFF5C string[]) => void;\"})}),(0,t.jsx)(e.td,{children:\"Handler that is called when the code is copied.\"})]})})]})]})}function v(n={}){let{wrapper:e}=n.components||{};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(I,{...n})}):I(n)}function d(n,e){throw new Error(\"Expected \"+(e?\"component\":\"object\")+\" `\"+n+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return D(ne);})();\n;return Component;"
  },
  "_id": "docs/components/snippet.mdx",
  "_raw": {
    "sourceFilePath": "docs/components/snippet.mdx",
    "sourceFileName": "snippet.mdx",
    "sourceFileDir": "docs/components",
    "contentType": "mdx",
    "flattenedPath": "docs/components/snippet"
  },
  "type": "Doc",
  "slug": "/docs/components/snippet",
  "slugAsParams": "components/snippet",
  "url": "/docs/components/snippet"
}