{
  "title": "Accordion",
  "description": "Accordion display a list of high-level options that can expand/collapse to reveal more information.",
  "body": {
    "raw": "\nimport {accordionContent} from \"@/content/components/accordion\";\n\n# Accordion\n\nAccordion display a list of high-level options that can expand/collapse to reveal more information.\n\n<ComponentLinks component=\"accordion\" />\n\n---\n\n<CarbonAd/>\n\n## Installation\n\n<PackageManagers\n  showGlobalInstallWarning\n  commands={{\n    cli: \"npx nextui-cli@latest add accordion\",\n    npm: \"npm install @nextui-org/accordion\",\n    yarn: \"yarn add @nextui-org/accordion\",\n    pnpm: \"pnpm add @nextui-org/accordion\",\n    bun: \"bun add @nextui-org/accordion\"\n  }}\n/>\n\n## Import\n\nNextUI exports 2 accordion-related components:\n\n- **Accordion**: The main component to display a list of accordion items.\n- **AccordionItem**: The item component to display a single accordion item.\n\n<ImportTabs\n  commands={{\n    main: 'import {Accordion, AccordionItem} from \"@nextui-org/react\";',\n    individual: 'import {Accordion, AccordionItem} from \"@nextui-org/accordion\";',\n  }}\n/>\n\n## Usage\n\n<CodeDemo title=\"Usage\" files={accordionContent.usage} />\n\n### With Subtitle\n\n<CodeDemo title=\"With subtitle\" files={accordionContent.subtitle} />\n\n### Expand multiple items\n\nIf you set `selectionMode` to `multiple`, then the `Accordion` will allow multiple items to be expanded at the same time.\n\n<CodeDemo title=\"Expand multiple items\" files={accordionContent.multiple} />\n\n### Compact\n\nIf you set `isCompact` to `true`, the `Accordion` will be displayed in a compact style.\n\n<CodeDemo title=\"Compact\" files={accordionContent.compact} />\n\n### Variants\n\nAccordion has 4 variants: `light`, `shadow`, `bordered` and `splitted`.\n\n#### Light variant\n\n<CodeDemo title=\"Light variant\" files={accordionContent.lightVariant} />\n\n#### Shadow variant\n\n<CodeDemo title=\"Shadow variant\" files={accordionContent.shadowVariant} />\n\n#### Bordered variant\n\n<CodeDemo title=\"Bordered variant\" files={accordionContent.borderedVariant} />\n\n#### Splitted variant\n\n<CodeDemo title=\"Splitted variant\" files={accordionContent.splittedVariant} />\n\n### Default expanded keys\n\nIf you want to expand some items by default, you can set the `defaultExpandedKeys` property to an array of keys.\n\n<CodeDemo title=\"Default expanded keys\" files={accordionContent.defaultExpandedKeys} />\n\n### Disabled keys\n\nIf you want to disable some items, you can set the `disabledKeys` property to an array of keys.\n\n<CodeDemo title=\"Disabled keys\" files={accordionContent.disabledKeys} />\n\n### Start content\n\nIf you want to display some content before the accordion items, you can set the `startContent` property.\n\n<CodeDemo title=\"Start content\" files={accordionContent.startContent} />\n\n### Custom Indicator\n\nAccordion items have a property called `indicator`. You can use it to customize the open/close indicator.\n\n<CodeDemo title=\"Custom Open/Close Indicator\" files={accordionContent.indicator} />\n\nThe indicator can be also a `function`, which receives the `isOpen`, `isDisabled` and the default `indicator` as parameters.\n\n<CodeDemo\n  title=\"Custom Open/Close Indicator Function\"\n  highlightedLines=\"15\"\n  files={accordionContent.indicatorFunction}\n/>\n\n### Custom Motion\n\nAccordion offers a `motionProps` property to customize the `enter` / `exit` animation.\n\n<CodeDemo title=\"Custom Motion\" files={accordionContent.customMotion} />\n\n> Learn more about Framer motion variants [here](https://www.framer.com/motion/animation/#variants).\n\n### Controlled\n\nAccordion is a controlled component, which means you need to control the `selectedKeys` property by yourself.\n\n<CodeDemo title=\"Controlled\" files={accordionContent.controlled} />\n\n## Accordion Item Slots\n\n- **base**: The accordion item wrapper.\n- **heading**: The accordion item heading. It contains the `indicator` and the `title`.\n- **trigger**: The button that open/close the accordion item.\n- **titleWrapper**: The wrapper of the `title` and `subtitle`.\n- **title**: The accordion item title.\n- **subtitle**: The accordion item subtitle.\n- **startContent**: The content before the accordion item.\n- **indicator**: The element that indicates the open/close state of the accordion item.\n- **content**: The accordion item content.\n\n### Custom Accordion Styles\n\nYou can customize the accordion and accordion items styles by using any of the following properties:\n\n- `className`: The class name of the accordion. Modify the accordion wrapper styles.(Accordion)\n- `itemClasses`: The class names of the accordion items. Modify all accordion items styles at once. (Accordion)\n- `classNames`: The class names of the accordion items. Modify each accordion item styles separately. (AccordionItem)\n\nHere's an example of how to customize the accordion styles:\n\n<CodeDemo title=\"Custom Accordion Styles\" files={accordionContent.customStyles} />\n\n<Spacer y={4} />\n\n## Data Attributes\n\n`AccordionItem` has the following attributes on the `base` element:\n\n- **data-open**:\n  Whether the accordion item is open.\n- **data-disabled**:\n  When the accordion item is disabled.\n- **data-hover**:\n  When the accordion item is being hovered. Based on [useHover](https://react-spectrum.adobe.com/react-aria/useHover.html).\n- **data-focus**:\n  When the accordion item is being focused. Based on [useFocusRing](https://react-spectrum.adobe.com/react-aria/useFocusRing.html).\n- **data-focus-visible**:\n  When the accordion item is being focused with the keyboard. Based on [useFocusRing](https://react-spectrum.adobe.com/react-aria/useFocusRing.html).\n- **data-disabled**:\n  When the accordion item is disabled. Based on `isDisabled` prop.\n- **data-pressed**:\n  When the accordion item is pressed. Based on [usePress](https://react-spectrum.adobe.com/react-aria/usePress.html).\n\n<Spacer y={4} />\n\n## Accessibility\n\n- Keyboard event support for <Kbd>Space</Kbd>, <Kbd>Enter</Kbd>, <Kbd>Arrow Up</Kbd>, <Kbd>Arrow Down</Kbd> and <Kbd>Home</Kbd> / <Kbd>End</Kbd> keys.\n- Keyboard focus management and cross browser normalization.\n- `aria-expanded` attribute for the accordion item.\n- `aria-disabled` attribute for the accordion item.\n- `aria-controls` attribute for the accordion item.\n\n<Spacer y={4} />\n\n## API\n\n### Accordion Props\n\n| Attribute                 | Type                                            | Description                                                                                             | Default  |\n| ------------------------- | ----------------------------------------------- | ------------------------------------------------------------------------------------------------------- | -------- |\n| children                  | `ReactNode` \\| `ReactNode[]`                    | The contents of the collection. Usually the array of `AccordionItem`                                    |          |\n| variant                   | `light` \\| `shadow` \\| `bordered` \\| `splitted` | The accordion appearance style.                                                                         | `light`  |\n| selectionMode             | `none` \\| `single` \\| `multiple`                | The type of selection that is allowed in the collection.                                                |          |\n| selectionBehavior         | `toggle` \\| `replace`                           | The accordion selection behavior.                                                                       | `toggle` |\n| isCompact                 | `boolean`                                       | Whether all Accordion items should be smaller.                                                          | `false`  |\n| isDisabled                | `boolean`                                       | Whether the Accordion items are disabled.                                                               |          |\n| showDivider               | `boolean`                                       | Whether to display a divider at the bottom of the each accordion item.                                  | `true`   |\n| dividerProps              | [DividerProps](/docs/components/divider)        | The divider component props.                                                                            | -        |\n| hideIndicator             | `boolean`                                       | Whether the Accordion items indicator is hidden.                                                        |          |\n| disableAnimation          | `boolean`                                       | Whether the Accordion items open/close animation is disabled.                                           |          |\n| disableIndicatorAnimation | `boolean`                                       | Whether the Accordion items indicator animation is disabled.                                            |          |\n| disallowEmptySelection    | `boolean`                                       | Whether the collection allows empty selection.                                                          |          |\n| keepContentMounted        | `boolean`                                       | Whether the Accordion items content should be always mounted.                                           | `false`  |\n| fullWidth                 | `boolean`                                       | Whether the accordion should take up the full width of its parent container.                            | `true`   |\n| motionProps               | `MotionProps`                                   | The motion properties of the Accordion.                                                                 |          |\n| disabledKeys              | `React.Key[]`                                   | The item keys that are disabled. These items cannot be selected, focused, or otherwise interacted with. |          |\n| itemClasses               | [Classnames](#accordion-item-classnames)        | The accordion items classNames.                                                                         |          |\n| selectedKeys              | `all` \\| `React.Key[]`                          | The currently selected keys in the collection (controlled).                                             |          |\n| defaultSelectedKeys       | `all` \\| `React.Key[]`                          | The initial selected keys in the collection (uncontrolled).                                             |          |\n| disabledKeys              | `React.Key[]`                                   | The currently disabled keys in the collection (controlled).                                             |          |\n\n### Accordion Events\n\n| Attribute         | Type                                     | Description                                        |\n| ----------------- | ---------------------------------------- | -------------------------------------------------- |\n| onSelectionChange | `(keys: \"all\" ｜ Set<React.Key>) => any` | Handler that is called when the selection changes. |\n\n### Accordion Item Props\n\n| Attribute                 | Type                                              | Description                                                                                                                  | Default |\n|---------------------------|---------------------------------------------------|------------------------------------------------------------------------------------------------------------------------------|---------|\n| children                  | `ReactNode` \\| `string`                           | The content of the component.                                                                                                |         |\n| title                     | `ReactNode` \\| `string`                           | The accordion item title.                                                                                                    |         |\n| subtitle                  | `ReactNode` \\| `string`                           | The accordion item subtitle.                                                                                                 |         |\n| indicator                 | [IndicatorProps](#accordion-item-indicator-props) | The accordion item `expanded` indicator, usually an arrow icon.                                                              |         |\n| startContent              | `ReactNode`                                       | The accordion item start content, usually an icon or avatar.                                                                 |         |\n| motionProps               | [MotionProps](#motion-props)                      | The props to modify the framer motion animation. Use the `variants` API to create your own animation.                        |         |\n| isCompact                 | `boolean`                                         | Whether the AccordionItem is compact.                                                                                        | `false` |\n| isDisabled                | `boolean`                                         | The current disabled status.                                                                                                 | `false` |\n| keepContentMounted        | `boolean`                                         | Whether the AccordionItem content is kept mounted when closed.                                                               | `false` |\n| hideIndicator             | `boolean`                                         | Whether the AccordionItem indicator is hidden.                                                                               | `false` |\n| disableAnimation          | `boolean`                                         | Whether the AccordionItem animation is disabled.                                                                             | `false` |\n| disableIndicatorAnimation | `boolean`                                         | Whether the AccordionItem indicator animation is disabled.                                                                   | `false` |\n| HeadingComponent          | `React.ElementType`                               | Customizable heading tag for Web accessibility. Use headings to describe content and use them consistently and semantically. | `h2`    |\n| classNames                | [Classnames](#accordion-item-classnames)          | Allows to set custom class names for the accordion item slots.                                                               | -       |\n\n### Accordion Item Events\n\n| Attribute     | Type                           | Description                                                                                                     |\n| ------------- | ------------------------------ | --------------------------------------------------------------------------------------------------------------- |\n| onFocus       | `(e: FocusEvent) => void`      | Handler that is called when the element receives focus.                                                         |\n| onBlur        | `(e: FocusEvent) => void`      | Handler that is called when the element loses focus.                                                            |\n| onFocusChange | `(isFocused: boolean) => void` | Handler that is called when the element's focus status changes.                                                 |\n| onKeyDown     | `(e: KeyboardEvent) => void`   | Handler that is called when a key is pressed.                                                                   |\n| onKeyUp       | `(e: KeyboardEvent) => void`   | Handler that is called when a key is released.                                                                  |\n| onPress       | `(e: PressEvent) => void`      | Handler called when the press is released over the target.                                                      |\n| onPressStart  | `(e: PressEvent) => void`      | Handler called when a press interaction starts.                                                                 |\n| onPressEnd    | `(e: PressEvent) => void`      | Handler called when a press interaction ends, either over the target or when the pointer leaves the target.     |\n| onPressChange | `(isPressed: boolean) => void` | Handler called when the press state changes.                                                                    |\n| onPressUp     | `(e: PressEvent) => void`      | Handler called when a press is released over the target, regardless of whether it started on the target or not. |\n| onClick       | `MouseEventHandler`            | The native button click event handler (**Deprecated**) use **onPress** instead.                                 |\n\n---\n\n### Types\n\n#### Accordion Item Indicator Props\n\n```ts\nexport type AccordionItemIndicatorProps = {\n  /**\n   * The current indicator, usually an arrow icon.\n   */\n  indicator?: ReactNode;\n  /**\n   * The current open status.\n   */\n  isOpen?: boolean;\n  /**\n   * The current disabled status.\n   * @default false\n   */\n  isDisabled?: boolean;\n};\n\ntype indicator?: ReactNode | ((props: AccordionItemIndicatorProps) => ReactNode) | null;\n```\n\n### Accordion Item classNames\n\n```ts\nexport type AccordionItemClassnames = {\n  base?: string;\n  heading?: string;\n  trigger?: string;\n  titleWrapper?: string;\n  title?: string;\n  subtitle?: string;\n  startContent?: string;\n  indicator?: string;\n  content?: string;\n};\n```\n\n#### Motion Props\n\n```ts\nexport type MotionProps = {\n  /**\n   * If `true`, the opacity of the content will be animated\n   * @default true\n   */\n  animateOpacity?: boolean;\n  /**\n   * The height you want the content in its collapsed state.\n   * @default 0\n   */\n  startingHeight?: number;\n  /**\n   * The height you want the content in its expanded state.\n   * @default \"auto\"\n   */\n  endingHeight?: number | string;\n  /**\n   * The y-axis offset you want the content in its collapsed state.\n   * @default 10\n   */\n  startingY?: number;\n  /**\n   * The y-axis offset you want the content in its expanded state.\n   * @default 0\n   */\n  endingY?: number;\n} & HTMLMotionProps;\n```\n",
    "code": "var Component=(()=>{var G=Object.create;var s=Object.defineProperty;var Q=Object.getOwnPropertyDescriptor;var $=Object.getOwnPropertyNames;var ee=Object.getPrototypeOf,te=Object.prototype.hasOwnProperty;var oe=(o,t)=>()=>(t||o((t={exports:{}}).exports,t),t.exports),ne=(o,t)=>{for(var r in t)s(o,r,{get:t[r],enumerable:!0})},u=(o,t,r,n)=>{if(t&&typeof t==\"object\"||typeof t==\"function\")for(let c of $(t))!te.call(o,c)&&c!==r&&s(o,c,{get:()=>t[c],enumerable:!(n=Q(t,c))||n.enumerable});return o};var ie=(o,t,r)=>(r=o!=null?G(ee(o)):{},u(t||!o||!o.__esModule?s(r,\"default\",{value:o,enumerable:!0}):r,o)),re=o=>u(s({},\"__esModule\",{value:!0}),o);var A=oe((Fe,p)=>{p.exports=_jsx_runtime});var Be={};ne(Be,{default:()=>X,frontmatter:()=>Re});var e=ie(A());var f=`import {Accordion, AccordionItem} from \"@nextui-org/react\";\n\nexport default function App() {\n  const defaultContent =\n    \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\";\n\n  return (\n    <Accordion>\n      <AccordionItem key=\"1\" aria-label=\"Accordion 1\" title=\"Accordion 1\">\n        {defaultContent}\n      </AccordionItem>\n      <AccordionItem key=\"2\" aria-label=\"Accordion 2\" title=\"Accordion 2\">\n        {defaultContent}\n      </AccordionItem>\n      <AccordionItem key=\"3\" aria-label=\"Accordion 3\" title=\"Accordion 3\">\n        {defaultContent}\n      </AccordionItem>\n    </Accordion>\n  );\n}\n`;var de={\"/App.jsx\":f},b={...de};var g=`import {Accordion, AccordionItem} from \"@nextui-org/react\";\n\nexport default function App() {\n  const defaultContent =\n    \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\";\n\n  return (\n    <Accordion>\n      <AccordionItem\n        key=\"1\"\n        aria-label=\"Accordion 1\"\n        subtitle=\"Press to expand\"\n        title=\"Accordion 1\"\n      >\n        {defaultContent}\n      </AccordionItem>\n      <AccordionItem\n        key=\"2\"\n        aria-label=\"Accordion 2\"\n        subtitle={\n          <span>\n            Press to expand <strong>key 2</strong>\n          </span>\n        }\n        title=\"Accordion 2\"\n      >\n        {defaultContent}\n      </AccordionItem>\n      <AccordionItem\n        key=\"3\"\n        aria-label=\"Accordion 3\"\n        subtitle=\"Press to expand\"\n        title=\"Accordion 3\"\n      >\n        {defaultContent}\n      </AccordionItem>\n    </Accordion>\n  );\n}\n`;var ae={\"/App.jsx\":g},y={...ae};var x=`import {Accordion, AccordionItem} from \"@nextui-org/react\";\n\nexport default function App() {\n  const defaultContent =\n    \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\";\n\n  return (\n    <Accordion selectionMode=\"multiple\">\n      <AccordionItem key=\"1\" aria-label=\"Accordion 1\" title=\"Accordion 1\">\n        {defaultContent}\n      </AccordionItem>\n      <AccordionItem key=\"2\" aria-label=\"Accordion 2\" title=\"Accordion 2\">\n        {defaultContent}\n      </AccordionItem>\n      <AccordionItem key=\"3\" aria-label=\"Accordion 3\" title=\"Accordion 3\">\n        {defaultContent}\n      </AccordionItem>\n    </Accordion>\n  );\n}\n`;var he={\"/App.jsx\":x},C={...he};var I=`import {Accordion, AccordionItem} from \"@nextui-org/react\";\n\nexport default function App() {\n  const defaultContent =\n    \"Lorem Innei ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\";\n\n  return (\n    <Accordion isCompact>\n      <AccordionItem key=\"1\" aria-label=\"Accordion 1\" title=\"Accordion 1\">\n        {defaultContent}\n      </AccordionItem>\n      <AccordionItem key=\"2\" aria-label=\"Accordion 2\" title=\"Accordion 2\">\n        {defaultContent}\n      </AccordionItem>\n      <AccordionItem key=\"3\" aria-label=\"Accordion 3\" title=\"Accordion 3\">\n        {defaultContent}\n      </AccordionItem>\n    </Accordion>\n  );\n}\n`;var ue={\"/App.jsx\":I},k={...ue};var v=`import {Accordion, AccordionItem} from \"@nextui-org/react\";\n\nexport default function App() {\n  const defaultContent =\n    \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\";\n\n  return (\n    <Accordion variant=\"light\">\n      <AccordionItem key=\"1\" aria-label=\"Accordion 1\" title=\"Accordion 1\">\n        {defaultContent}\n      </AccordionItem>\n      <AccordionItem key=\"2\" aria-label=\"Accordion 2\" title=\"Accordion 2\">\n        {defaultContent}\n      </AccordionItem>\n      <AccordionItem key=\"3\" aria-label=\"Accordion 3\" title=\"Accordion 3\">\n        {defaultContent}\n      </AccordionItem>\n    </Accordion>\n  );\n}\n`;var Ae={\"/App.jsx\":v},w={...Ae};var L=`import {Accordion, AccordionItem} from \"@nextui-org/react\";\n\nexport default function App() {\n  const defaultContent =\n    \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\";\n\n  return (\n    <Accordion variant=\"shadow\">\n      <AccordionItem key=\"1\" aria-label=\"Accordion 1\" title=\"Accordion 1\">\n        {defaultContent}\n      </AccordionItem>\n      <AccordionItem key=\"2\" aria-label=\"Accordion 2\" title=\"Accordion 2\">\n        {defaultContent}\n      </AccordionItem>\n      <AccordionItem key=\"3\" aria-label=\"Accordion 3\" title=\"Accordion 3\">\n        {defaultContent}\n      </AccordionItem>\n    </Accordion>\n  );\n}\n`;var be={\"/App.jsx\":L},M={...be};var q=`import {Accordion, AccordionItem} from \"@nextui-org/react\";\n\nexport default function App() {\n  const defaultContent =\n    \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\";\n\n  return (\n    <Accordion variant=\"splitted\">\n      <AccordionItem key=\"1\" aria-label=\"Accordion 1\" title=\"Accordion 1\">\n        {defaultContent}\n      </AccordionItem>\n      <AccordionItem key=\"2\" aria-label=\"Accordion 2\" title=\"Accordion 2\">\n        {defaultContent}\n      </AccordionItem>\n      <AccordionItem key=\"3\" aria-label=\"Accordion 3\" title=\"Accordion 3\">\n        {defaultContent}\n      </AccordionItem>\n    </Accordion>\n  );\n}\n`;var ye={\"/App.jsx\":q},T={...ye};var W=`import {Accordion, AccordionItem} from \"@nextui-org/react\";\n\nexport default function App() {\n  const defaultContent =\n    \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\";\n\n  return (\n    <Accordion variant=\"bordered\">\n      <AccordionItem key=\"1\" aria-label=\"Accordion 1\" title=\"Accordion 1\">\n        {defaultContent}\n      </AccordionItem>\n      <AccordionItem key=\"2\" aria-label=\"Accordion 2\" title=\"Accordion 2\">\n        {defaultContent}\n      </AccordionItem>\n      <AccordionItem key=\"3\" aria-label=\"Accordion 3\" title=\"Accordion 3\">\n        {defaultContent}\n      </AccordionItem>\n    </Accordion>\n  );\n}\n`;var Ce={\"/App.jsx\":W},P={...Ce};var S=`import {Accordion, AccordionItem} from \"@nextui-org/react\";\n\nexport default function App() {\n  const defaultContent =\n    \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\";\n\n  return (\n    <Accordion defaultExpandedKeys={[\"2\"]}>\n      <AccordionItem\n        key=\"1\"\n        aria-label=\"Accordion 1\"\n        subtitle=\"Press to expand\"\n        title=\"Accordion 1\"\n      >\n        {defaultContent}\n      </AccordionItem>\n      <AccordionItem\n        key=\"2\"\n        aria-label=\"Accordion 2\"\n        subtitle={\n          <span>\n            Press to expand <strong>key 2</strong>\n          </span>\n        }\n        title=\"Accordion 2\"\n      >\n        {defaultContent}\n      </AccordionItem>\n      <AccordionItem\n        key=\"3\"\n        aria-label=\"Accordion 3\"\n        subtitle=\"Press to expand\"\n        title=\"Accordion 3\"\n      >\n        {defaultContent}\n      </AccordionItem>\n    </Accordion>\n  );\n}\n`;var ke={\"/App.jsx\":S},j={...ke};var H=`import {Accordion, AccordionItem} from \"@nextui-org/react\";\n\nexport default function App() {\n  const defaultContent =\n    \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\";\n\n  return (\n    <Accordion disabledKeys={[\"2\"]}>\n      <AccordionItem\n        key=\"1\"\n        aria-label=\"Accordion 1\"\n        subtitle=\"Press to expand\"\n        title=\"Accordion 1\"\n      >\n        {defaultContent}\n      </AccordionItem>\n      <AccordionItem\n        key=\"2\"\n        aria-label=\"Accordion 2\"\n        subtitle={\n          <span>\n            Press to expand <strong>key 2</strong>\n          </span>\n        }\n        title=\"Accordion 2\"\n      >\n        {defaultContent}\n      </AccordionItem>\n      <AccordionItem\n        key=\"3\"\n        aria-label=\"Accordion 3\"\n        subtitle=\"Press to expand\"\n        title=\"Accordion 3\"\n      >\n        {defaultContent}\n      </AccordionItem>\n    </Accordion>\n  );\n}\n`;var we={\"/App.jsx\":H},K={...we};var N=`import {Accordion, AccordionItem, Avatar} from \"@nextui-org/react\";\n\nexport default function App() {\n  const defaultContent =\n    \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\";\n\n  return (\n    <Accordion selectionMode=\"multiple\">\n      <AccordionItem\n        key=\"1\"\n        aria-label=\"Chung Miller\"\n        startContent={\n          <Avatar\n            isBordered\n            color=\"primary\"\n            radius=\"lg\"\n            src=\"https://i.pravatar.cc/150?u=a042581f4e29026024d\"\n          />\n        }\n        subtitle=\"4 unread messages\"\n        title=\"Chung Miller\"\n      >\n        {defaultContent}\n      </AccordionItem>\n      <AccordionItem\n        key=\"2\"\n        aria-label=\"Janelle Lenard\"\n        startContent={\n          <Avatar\n            isBordered\n            color=\"success\"\n            radius=\"lg\"\n            src=\"https://i.pravatar.cc/150?u=a042581f4e29026704d\"\n          />\n        }\n        subtitle=\"3 incompleted steps\"\n        title=\"Janelle Lenard\"\n      >\n        {defaultContent}\n      </AccordionItem>\n      <AccordionItem\n        key=\"3\"\n        aria-label=\"Zoey Lang\"\n        startContent={\n          <Avatar\n            isBordered\n            color=\"warning\"\n            radius=\"lg\"\n            src=\"https://i.pravatar.cc/150?u=a04258114e29026702d\"\n          />\n        }\n        subtitle={\n          <p className=\"flex\">\n            2 issues to<span className=\"text-primary ml-1\">fix now</span>\n          </p>\n        }\n        title=\"Zoey Lang\"\n      >\n        {defaultContent}\n      </AccordionItem>\n    </Accordion>\n  );\n}\n`;var Me={\"/App.jsx\":N},D={...Me};var U=`import {Accordion, AccordionItem} from \"@nextui-org/react\";\n\nconst AnchorIcon = (props) => (\n  <svg\n    aria-hidden=\"true\"\n    focusable=\"false\"\n    height=\"24\"\n    role=\"presentation\"\n    viewBox=\"0 0 24 24\"\n    width=\"24\"\n    {...props}\n  >\n    <path\n      d=\"M8.465,11.293c1.133-1.133,3.109-1.133,4.242,0L13.414,12l1.414-1.414l-0.707-0.707c-0.943-0.944-2.199-1.465-3.535-1.465 S7.994,8.935,7.051,9.879L4.929,12c-1.948,1.949-1.948,5.122,0,7.071c0.975,0.975,2.255,1.462,3.535,1.462 c1.281,0,2.562-0.487,3.536-1.462l0.707-0.707l-1.414-1.414l-0.707,0.707c-1.17,1.167-3.073,1.169-4.243,0 c-1.169-1.17-1.169-3.073,0-4.243L8.465,11.293z\"\n      fill=\"currentColor\"\n    />\n    <path\n      d=\"M12,4.929l-0.707,0.707l1.414,1.414l0.707-0.707c1.169-1.167,3.072-1.169,4.243,0c1.169,1.17,1.169,3.073,0,4.243 l-2.122,2.121c-1.133,1.133-3.109,1.133-4.242,0L10.586,12l-1.414,1.414l0.707,0.707c0.943,0.944,2.199,1.465,3.535,1.465 s2.592-0.521,3.535-1.465L19.071,12c1.948-1.949,1.948-5.122,0-7.071C17.121,2.979,13.948,2.98,12,4.929z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);\n\nconst MoonIcon = (props) => (\n  <svg\n    aria-hidden=\"true\"\n    focusable=\"false\"\n    height=\"24\"\n    role=\"presentation\"\n    viewBox=\"0 0 512 512\"\n    width=\"24\"\n    {...props}\n  >\n    <path\n      d=\"M160 136c0-30.62 4.51-61.61 16-88C99.57 81.27 48 159.32 48 248c0 119.29 96.71 216 216 216 88.68 0 166.73-51.57 200-128-26.39 11.49-57.38 16-88 16-119.29 0-216-96.71-216-216z\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={32}\n    />\n  </svg>\n);\n\nconst SunIcon = (props) => (\n  <svg\n    aria-hidden=\"true\"\n    focusable=\"false\"\n    height=\"24\"\n    role=\"presentation\"\n    viewBox=\"0 0 512 512\"\n    width=\"24\"\n    {...props}\n  >\n    <path\n      d=\"M256 48v48M256 416v48M403.08 108.92l-33.94 33.94M142.86 369.14l-33.94 33.94M464 256h-48M96 256H48M403.08 403.08l-33.94-33.94M142.86 142.86l-33.94-33.94\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeLinecap=\"round\"\n      strokeMiterlimit={10}\n      strokeWidth={32}\n    />\n    <circle\n      cx={256}\n      cy={256}\n      fill=\"none\"\n      r={80}\n      stroke=\"currentColor\"\n      strokeLinecap=\"round\"\n      strokeMiterlimit={10}\n      strokeWidth={32}\n    />\n  </svg>\n);\n\nexport default function App() {\n  const defaultContent =\n    \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\";\n\n  return (\n    <Accordion>\n      <AccordionItem key=\"anchor\" aria-label=\"Anchor\" indicator={<AnchorIcon />} title=\"Anchor\">\n        {defaultContent}\n      </AccordionItem>\n      <AccordionItem key=\"moon\" aria-label=\"Moon\" indicator={<MoonIcon />} title=\"Moon\">\n        {defaultContent}\n      </AccordionItem>\n      <AccordionItem key=\"sun\" aria-label=\"Sun\" indicator={<SunIcon />} title=\"Sun\">\n        {defaultContent}\n      </AccordionItem>\n    </Accordion>\n  );\n}\n`;var Te={\"/App.jsx\":U},E={...Te};var R=`import {Accordion, AccordionItem} from \"@nextui-org/react\";\n\nconst AnchorIcon = (props) => (\n  <svg\n    aria-hidden=\"true\"\n    focusable=\"false\"\n    height=\"24\"\n    role=\"presentation\"\n    viewBox=\"0 0 24 24\"\n    width=\"24\"\n    {...props}\n  >\n    <path\n      d=\"M8.465,11.293c1.133-1.133,3.109-1.133,4.242,0L13.414,12l1.414-1.414l-0.707-0.707c-0.943-0.944-2.199-1.465-3.535-1.465 S7.994,8.935,7.051,9.879L4.929,12c-1.948,1.949-1.948,5.122,0,7.071c0.975,0.975,2.255,1.462,3.535,1.462 c1.281,0,2.562-0.487,3.536-1.462l0.707-0.707l-1.414-1.414l-0.707,0.707c-1.17,1.167-3.073,1.169-4.243,0 c-1.169-1.17-1.169-3.073,0-4.243L8.465,11.293z\"\n      fill=\"currentColor\"\n    />\n    <path\n      d=\"M12,4.929l-0.707,0.707l1.414,1.414l0.707-0.707c1.169-1.167,3.072-1.169,4.243,0c1.169,1.17,1.169,3.073,0,4.243 l-2.122,2.121c-1.133,1.133-3.109,1.133-4.242,0L10.586,12l-1.414,1.414l0.707,0.707c0.943,0.944,2.199,1.465,3.535,1.465 s2.592-0.521,3.535-1.465L19.071,12c1.948-1.949,1.948-5.122,0-7.071C17.121,2.979,13.948,2.98,12,4.929z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);\n\nconst MoonIcon = (props) => (\n  <svg\n    aria-hidden=\"true\"\n    focusable=\"false\"\n    height=\"24\"\n    role=\"presentation\"\n    viewBox=\"0 0 512 512\"\n    width=\"24\"\n    {...props}\n  >\n    <path\n      d=\"M160 136c0-30.62 4.51-61.61 16-88C99.57 81.27 48 159.32 48 248c0 119.29 96.71 216 216 216 88.68 0 166.73-51.57 200-128-26.39 11.49-57.38 16-88 16-119.29 0-216-96.71-216-216z\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={32}\n    />\n  </svg>\n);\n\nconst SunIcon = (props) => (\n  <svg\n    aria-hidden=\"true\"\n    focusable=\"false\"\n    height=\"24\"\n    role=\"presentation\"\n    viewBox=\"0 0 512 512\"\n    width=\"24\"\n    {...props}\n  >\n    <path\n      d=\"M256 48v48M256 416v48M403.08 108.92l-33.94 33.94M142.86 369.14l-33.94 33.94M464 256h-48M96 256H48M403.08 403.08l-33.94-33.94M142.86 142.86l-33.94-33.94\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeLinecap=\"round\"\n      strokeMiterlimit={10}\n      strokeWidth={32}\n    />\n    <circle\n      cx={256}\n      cy={256}\n      fill=\"none\"\n      r={80}\n      stroke=\"currentColor\"\n      strokeLinecap=\"round\"\n      strokeMiterlimit={10}\n      strokeWidth={32}\n    />\n  </svg>\n);\n\nexport default function App() {\n  const defaultContent =\n    \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\";\n\n  return (\n    <Accordion defaultExpandedKeys={[\"theme\"]}>\n      <AccordionItem\n        key=\"theme\"\n        aria-label=\"Theme\"\n        indicator={({isOpen}) => (isOpen ? <SunIcon /> : <MoonIcon />)}\n        title=\"Theme\"\n      >\n        {defaultContent}\n      </AccordionItem>\n      <AccordionItem key=\"anchor\" aria-label=\"Anchor\" indicator={<AnchorIcon />} title=\"Anchor\">\n        {defaultContent}\n      </AccordionItem>\n      <AccordionItem key=\"sun\" aria-label=\"Sun\" indicator={<SunIcon />} title=\"Sun\">\n        {defaultContent}\n      </AccordionItem>\n    </Accordion>\n  );\n}\n`;var Pe={\"/App.jsx\":R},B={...Pe};var V=`import {Accordion, AccordionItem} from \"@nextui-org/react\";\n\nexport default function App() {\n  const defaultContent =\n    \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\";\n\n  return (\n    <Accordion\n      motionProps={{\n        variants: {\n          enter: {\n            y: 0,\n            opacity: 1,\n            height: \"auto\",\n            overflowY: \"unset\",\n            transition: {\n              height: {\n                type: \"spring\",\n                stiffness: 500,\n                damping: 30,\n                duration: 1,\n              },\n              opacity: {\n                easings: \"ease\",\n                duration: 1,\n              },\n            },\n          },\n          exit: {\n            y: -10,\n            opacity: 0,\n            height: 0,\n            overflowY: \"hidden\",\n            transition: {\n              height: {\n                easings: \"ease\",\n                duration: 0.25,\n              },\n              opacity: {\n                easings: \"ease\",\n                duration: 0.3,\n              },\n            },\n          },\n        },\n      }}\n    >\n      <AccordionItem key=\"1\" aria-label=\"Accordion 1\" title=\"Accordion 1\">\n        {defaultContent}\n      </AccordionItem>\n      <AccordionItem key=\"2\" aria-label=\"Accordion 2\" title=\"Accordion 2\">\n        {defaultContent}\n      </AccordionItem>\n      <AccordionItem key=\"3\" aria-label=\"Accordion 3\" title=\"Accordion 3\">\n        {defaultContent}\n      </AccordionItem>\n    </Accordion>\n  );\n}\n`;var je={\"/App.jsx\":V},F={...je};var z=`import React from \"react\";\nimport {Accordion, AccordionItem} from \"@nextui-org/react\";\n\nexport default function App() {\n  const [selectedKeys, setSelectedKeys] = React.useState(new Set([\"1\"]));\n  const defaultContent =\n    \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\";\n\n  return (\n    <Accordion selectedKeys={selectedKeys} onSelectionChange={setSelectedKeys}>\n      <AccordionItem key=\"1\" aria-label=\"Accordion 1\" title=\"Accordion 1\">\n        {defaultContent}\n      </AccordionItem>\n      <AccordionItem key=\"2\" aria-label=\"Accordion 2\" title=\"Accordion 2\">\n        {defaultContent}\n      </AccordionItem>\n      <AccordionItem key=\"3\" aria-label=\"Accordion 3\" title=\"Accordion 3\">\n        {defaultContent}\n      </AccordionItem>\n    </Accordion>\n  );\n}\n`;var _=`import type {Selection} from \"@nextui-org/react\";\n\nimport React from \"react\";\nimport {Accordion, AccordionItem} from \"@nextui-org/react\";\n\nexport default function App() {\n  const [selectedKeys, setSelectedKeys] = React.useState<Selection>(new Set([\"1\"]));\n  const defaultContent =\n    \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\";\n\n  return (\n    <Accordion selectedKeys={selectedKeys} onSelectionChange={setSelectedKeys}>\n      <AccordionItem key=\"1\" aria-label=\"Accordion 1\" title=\"Accordion 1\">\n        {defaultContent}\n      </AccordionItem>\n      <AccordionItem key=\"2\" aria-label=\"Accordion 2\" title=\"Accordion 2\">\n        {defaultContent}\n      </AccordionItem>\n      <AccordionItem key=\"3\" aria-label=\"Accordion 3\" title=\"Accordion 3\">\n        {defaultContent}\n      </AccordionItem>\n    </Accordion>\n  );\n}\n`;var Ne={\"/App.jsx\":z},De={\"/App.tsx\":_},O={...Ne,...De};var Z=`import {Accordion, AccordionItem} from \"@nextui-org/react\";\n\nconst MonitorMobileIcon = (props) => (\n  <svg\n    aria-hidden=\"true\"\n    fill=\"none\"\n    focusable=\"false\"\n    height=\"24\"\n    role=\"presentation\"\n    viewBox=\"0 0 24 24\"\n    width=\"24\"\n    {...props}\n  >\n    <path\n      d=\"M10 16.95H6.21C2.84 16.95 2 16.11 2 12.74V6.74003C2 3.37003 2.84 2.53003 6.21 2.53003H16.74C20.11 2.53003 20.95 3.37003 20.95 6.74003\"\n      stroke=\"currentColor\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"1.5\"\n    />\n    <path\n      d=\"M10 21.4699V16.95\"\n      stroke=\"currentColor\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"1.5\"\n    />\n    <path\n      d=\"M2 12.95H10\"\n      stroke=\"currentColor\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"1.5\"\n    />\n    <path\n      d=\"M6.73999 21.47H9.99999\"\n      stroke=\"currentColor\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"1.5\"\n    />\n    <path\n      d=\"M22 12.8V18.51C22 20.88 21.41 21.47 19.04 21.47H15.49C13.12 21.47 12.53 20.88 12.53 18.51V12.8C12.53 10.43 13.12 9.83997 15.49 9.83997H19.04C21.41 9.83997 22 10.43 22 12.8Z\"\n      stroke=\"currentColor\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"1.5\"\n    />\n    <path\n      d=\"M17.2445 18.25H17.2535\"\n      stroke=\"currentColor\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"2\"\n    />\n  </svg>\n);\n\nconst ShieldSecurityIcon = (props) => (\n  <svg\n    aria-hidden=\"true\"\n    fill=\"none\"\n    focusable=\"false\"\n    height=\"24\"\n    role=\"presentation\"\n    viewBox=\"0 0 24 24\"\n    width=\"24\"\n    {...props}\n  >\n    <path\n      d=\"M10.49 2.23006L5.49997 4.11006C4.34997 4.54006 3.40997 5.90006 3.40997 7.12006V14.5501C3.40997 15.7301 4.18997 17.2801 5.13997 17.9901L9.43997 21.2001C10.85 22.2601 13.17 22.2601 14.58 21.2001L18.88 17.9901C19.83 17.2801 20.61 15.7301 20.61 14.5501V7.12006C20.61 5.89006 19.67 4.53006 18.52 4.10006L13.53 2.23006C12.68 1.92006 11.32 1.92006 10.49 2.23006Z\"\n      stroke=\"currentColor\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"1.5\"\n    />\n    <path\n      d=\"M12 12.5C13.1046 12.5 14 11.6046 14 10.5C14 9.39543 13.1046 8.5 12 8.5C10.8954 8.5 10 9.39543 10 10.5C10 11.6046 10.8954 12.5 12 12.5Z\"\n      stroke=\"currentColor\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeMiterlimit=\"10\"\n      strokeWidth=\"1.5\"\n    />\n    <path\n      d=\"M12 12.5V15.5\"\n      stroke=\"currentColor\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeMiterlimit=\"10\"\n      strokeWidth=\"1.5\"\n    />\n  </svg>\n);\n\nconst InfoIcon = (props) => (\n  <svg\n    aria-hidden=\"true\"\n    fill=\"none\"\n    focusable=\"false\"\n    height=\"24\"\n    role=\"presentation\"\n    viewBox=\"0 0 24 24\"\n    width=\"24\"\n    {...props}\n  >\n    <path\n      d=\"M12 22C17.5 22 22 17.5 22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22Z\"\n      stroke=\"currentColor\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"1.5\"\n    />\n    <path\n      d=\"M12 8V13\"\n      stroke=\"currentColor\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"1.5\"\n    />\n    <path\n      d=\"M11.9945 16H12.0035\"\n      stroke=\"currentColor\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"2\"\n    />\n  </svg>\n);\n\nconst InvalidCardIcon = (props) => (\n  <svg\n    aria-hidden=\"true\"\n    fill=\"none\"\n    focusable=\"false\"\n    height=\"24\"\n    role=\"presentation\"\n    viewBox=\"0 0 24 24\"\n    width=\"24\"\n    {...props}\n  >\n    <path\n      d=\"M10 16.95H6.21C2.84 16.95 2 16.11 2 12.74V6.74003C2 3.37003 2.84 2.53003 6.21 2.53003H16.74C20.11 2.53003 20.95 3.37003 20.95 6.74003\"\n      stroke=\"currentColor\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"1.5\"\n    />\n    <path\n      d=\"M10 21.4699V16.95\"\n      stroke=\"currentColor\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"1.5\"\n    />\n    <path\n      d=\"M2 12.95H10\"\n      stroke=\"currentColor\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"1.5\"\n    />\n    <path\n      d=\"M6.73999 21.47H9.99999\"\n      stroke=\"currentColor\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"1.5\"\n    />\n    <path\n      d=\"M22 12.8V18.51C22 20.88 21.41 21.47 19.04 21.47H15.49C13.12 21.47 12.53 20.88 12.53 18.51V12.8C12.53 10.43 13.12 9.83997 15.49 9.83997H19.04C21.41 9.83997 22 10.43 22 12.8Z\"\n      stroke=\"currentColor\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"1.5\"\n    />\n    <path\n      d=\"M17.2445 18.25H17.2535\"\n      stroke=\"currentColor\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"2\"\n    />\n  </svg>\n);\n\nexport default function App() {\n  const itemClasses = {\n    base: \"py-0 w-full\",\n    title: \"font-normal text-medium\",\n    trigger: \"px-2 py-0 data-[hover=true]:bg-default-100 rounded-lg h-14 flex items-center\",\n    indicator: \"text-medium\",\n    content: \"text-small px-2\",\n  };\n\n  const defaultContent =\n    \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\";\n\n  return (\n    <Accordion\n      className=\"p-2 flex flex-col gap-1 w-full max-w-[300px]\"\n      itemClasses={itemClasses}\n      showDivider={false}\n      variant=\"shadow\"\n    >\n      <AccordionItem\n        key=\"1\"\n        aria-label=\"Connected devices\"\n        startContent={<MonitorMobileIcon className=\"text-primary\" />}\n        subtitle={\n          <p className=\"flex\">\n            2 issues to <span className=\"text-primary ml-1\">fix now</span>\n          </p>\n        }\n        title=\"Connected devices\"\n      >\n        {defaultContent}\n      </AccordionItem>\n      <AccordionItem\n        key=\"2\"\n        aria-label=\"Apps Permissions\"\n        startContent={<ShieldSecurityIcon />}\n        subtitle=\"3 apps have read permissions\"\n        title=\"Apps Permissions\"\n      >\n        {defaultContent}\n      </AccordionItem>\n      <AccordionItem\n        key=\"3\"\n        aria-label=\"Pending tasks\"\n        classNames={{subtitle: \"text-warning\"}}\n        startContent={<InfoIcon className=\"text-warning\" />}\n        subtitle=\"Complete your profile\"\n        title=\"Pending tasks\"\n      >\n        {defaultContent}\n      </AccordionItem>\n      <AccordionItem\n        key=\"4\"\n        aria-label=\"Card expired\"\n        classNames={{subtitle: \"text-danger\"}}\n        startContent={<InvalidCardIcon className=\"text-danger\" />}\n        subtitle=\"Please, update now\"\n        title={\n          <p className=\"flex gap-1 items-center\">\n            Card expired\n            <span className=\"text-default-400 text-small\">*4812</span>\n          </p>\n        }\n      >\n        {defaultContent}\n      </AccordionItem>\n    </Accordion>\n  );\n}\n`;var Ee={\"/App.jsx\":Z},Y={...Ee};var i={usage:b,subtitle:y,multiple:C,compact:k,lightVariant:w,shadowVariant:M,splittedVariant:T,borderedVariant:P,defaultExpandedKeys:j,disabledKeys:K,startContent:D,indicator:E,indicatorFunction:B,customMotion:F,controlled:O,customStyles:Y};var Re={title:\"Accordion\",description:\"Accordion display a list of high-level options that can expand/collapse to reveal more information.\"};function J(o){let t={a:\"a\",blockquote:\"blockquote\",code:\"code\",h1:\"h1\",h2:\"h2\",h3:\"h3\",h4:\"h4\",hr:\"hr\",li:\"li\",p:\"p\",pre:\"pre\",strong:\"strong\",table:\"table\",tbody:\"tbody\",td:\"td\",th:\"th\",thead:\"thead\",tr:\"tr\",ul:\"ul\",...o.components},{CarbonAd:r,CodeDemo:n,ComponentLinks:c,ImportTabs:h,Kbd:d,PackageManagers:m,Spacer:a}=t;return r||l(\"CarbonAd\",!0),n||l(\"CodeDemo\",!0),c||l(\"ComponentLinks\",!0),h||l(\"ImportTabs\",!0),d||l(\"Kbd\",!0),m||l(\"PackageManagers\",!0),a||l(\"Spacer\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(t.h1,{id:\"accordion\",children:\"Accordion\"}),`\n`,(0,e.jsx)(t.p,{children:\"Accordion display a list of high-level options that can expand/collapse to reveal more information.\"}),`\n`,(0,e.jsx)(c,{component:\"accordion\"}),`\n`,(0,e.jsx)(t.hr,{}),`\n`,(0,e.jsx)(r,{}),`\n`,(0,e.jsx)(t.h2,{id:\"installation\",children:\"Installation\"}),`\n`,(0,e.jsx)(m,{showGlobalInstallWarning:!0,commands:{cli:\"npx nextui-cli@latest add accordion\",npm:\"npm install @nextui-org/accordion\",yarn:\"yarn add @nextui-org/accordion\",pnpm:\"pnpm add @nextui-org/accordion\",bun:\"bun add @nextui-org/accordion\"}}),`\n`,(0,e.jsx)(t.h2,{id:\"import\",children:\"Import\"}),`\n`,(0,e.jsx)(t.p,{children:\"NextUI exports 2 accordion-related components:\"}),`\n`,(0,e.jsxs)(t.ul,{children:[`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"Accordion\"}),\": The main component to display a list of accordion items.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"AccordionItem\"}),\": The item component to display a single accordion item.\"]}),`\n`]}),`\n`,(0,e.jsx)(h,{commands:{main:'import {Accordion, AccordionItem} from \"@nextui-org/react\";',individual:'import {Accordion, AccordionItem} from \"@nextui-org/accordion\";'}}),`\n`,(0,e.jsx)(t.h2,{id:\"usage\",children:\"Usage\"}),`\n`,(0,e.jsx)(n,{title:\"Usage\",files:i.usage}),`\n`,(0,e.jsx)(t.h3,{id:\"with-subtitle\",children:\"With Subtitle\"}),`\n`,(0,e.jsx)(n,{title:\"With subtitle\",files:i.subtitle}),`\n`,(0,e.jsx)(t.h3,{id:\"expand-multiple-items\",children:\"Expand multiple items\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"If you set \",(0,e.jsx)(t.code,{children:\"selectionMode\"}),\" to \",(0,e.jsx)(t.code,{children:\"multiple\"}),\", then the \",(0,e.jsx)(t.code,{children:\"Accordion\"}),\" will allow multiple items to be expanded at the same time.\"]}),`\n`,(0,e.jsx)(n,{title:\"Expand multiple items\",files:i.multiple}),`\n`,(0,e.jsx)(t.h3,{id:\"compact\",children:\"Compact\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"If you set \",(0,e.jsx)(t.code,{children:\"isCompact\"}),\" to \",(0,e.jsx)(t.code,{children:\"true\"}),\", the \",(0,e.jsx)(t.code,{children:\"Accordion\"}),\" will be displayed in a compact style.\"]}),`\n`,(0,e.jsx)(n,{title:\"Compact\",files:i.compact}),`\n`,(0,e.jsx)(t.h3,{id:\"variants\",children:\"Variants\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"Accordion has 4 variants: \",(0,e.jsx)(t.code,{children:\"light\"}),\", \",(0,e.jsx)(t.code,{children:\"shadow\"}),\", \",(0,e.jsx)(t.code,{children:\"bordered\"}),\" and \",(0,e.jsx)(t.code,{children:\"splitted\"}),\".\"]}),`\n`,(0,e.jsx)(t.h4,{id:\"light-variant\",children:\"Light variant\"}),`\n`,(0,e.jsx)(n,{title:\"Light variant\",files:i.lightVariant}),`\n`,(0,e.jsx)(t.h4,{id:\"shadow-variant\",children:\"Shadow variant\"}),`\n`,(0,e.jsx)(n,{title:\"Shadow variant\",files:i.shadowVariant}),`\n`,(0,e.jsx)(t.h4,{id:\"bordered-variant\",children:\"Bordered variant\"}),`\n`,(0,e.jsx)(n,{title:\"Bordered variant\",files:i.borderedVariant}),`\n`,(0,e.jsx)(t.h4,{id:\"splitted-variant\",children:\"Splitted variant\"}),`\n`,(0,e.jsx)(n,{title:\"Splitted variant\",files:i.splittedVariant}),`\n`,(0,e.jsx)(t.h3,{id:\"default-expanded-keys\",children:\"Default expanded keys\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"If you want to expand some items by default, you can set the \",(0,e.jsx)(t.code,{children:\"defaultExpandedKeys\"}),\" property to an array of keys.\"]}),`\n`,(0,e.jsx)(n,{title:\"Default expanded keys\",files:i.defaultExpandedKeys}),`\n`,(0,e.jsx)(t.h3,{id:\"disabled-keys\",children:\"Disabled keys\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"If you want to disable some items, you can set the \",(0,e.jsx)(t.code,{children:\"disabledKeys\"}),\" property to an array of keys.\"]}),`\n`,(0,e.jsx)(n,{title:\"Disabled keys\",files:i.disabledKeys}),`\n`,(0,e.jsx)(t.h3,{id:\"start-content\",children:\"Start content\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"If you want to display some content before the accordion items, you can set the \",(0,e.jsx)(t.code,{children:\"startContent\"}),\" property.\"]}),`\n`,(0,e.jsx)(n,{title:\"Start content\",files:i.startContent}),`\n`,(0,e.jsx)(t.h3,{id:\"custom-indicator\",children:\"Custom Indicator\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"Accordion items have a property called \",(0,e.jsx)(t.code,{children:\"indicator\"}),\". You can use it to customize the open/close indicator.\"]}),`\n`,(0,e.jsx)(n,{title:\"Custom Open/Close Indicator\",files:i.indicator}),`\n`,(0,e.jsxs)(t.p,{children:[\"The indicator can be also a \",(0,e.jsx)(t.code,{children:\"function\"}),\", which receives the \",(0,e.jsx)(t.code,{children:\"isOpen\"}),\", \",(0,e.jsx)(t.code,{children:\"isDisabled\"}),\" and the default \",(0,e.jsx)(t.code,{children:\"indicator\"}),\" as parameters.\"]}),`\n`,(0,e.jsx)(n,{title:\"Custom Open/Close Indicator Function\",highlightedLines:\"15\",files:i.indicatorFunction}),`\n`,(0,e.jsx)(t.h3,{id:\"custom-motion\",children:\"Custom Motion\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"Accordion offers a \",(0,e.jsx)(t.code,{children:\"motionProps\"}),\" property to customize the \",(0,e.jsx)(t.code,{children:\"enter\"}),\" / \",(0,e.jsx)(t.code,{children:\"exit\"}),\" animation.\"]}),`\n`,(0,e.jsx)(n,{title:\"Custom Motion\",files:i.customMotion}),`\n`,(0,e.jsxs)(t.blockquote,{children:[`\n`,(0,e.jsxs)(t.p,{children:[\"Learn more about Framer motion variants \",(0,e.jsx)(t.a,{href:\"https://www.framer.com/motion/animation/#variants\",children:\"here\"}),\".\"]}),`\n`]}),`\n`,(0,e.jsx)(t.h3,{id:\"controlled\",children:\"Controlled\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"Accordion is a controlled component, which means you need to control the \",(0,e.jsx)(t.code,{children:\"selectedKeys\"}),\" property by yourself.\"]}),`\n`,(0,e.jsx)(n,{title:\"Controlled\",files:i.controlled}),`\n`,(0,e.jsx)(t.h2,{id:\"accordion-item-slots\",children:\"Accordion Item Slots\"}),`\n`,(0,e.jsxs)(t.ul,{children:[`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"base\"}),\": The accordion item wrapper.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"heading\"}),\": The accordion item heading. It contains the \",(0,e.jsx)(t.code,{children:\"indicator\"}),\" and the \",(0,e.jsx)(t.code,{children:\"title\"}),\".\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"trigger\"}),\": The button that open/close the accordion item.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"titleWrapper\"}),\": The wrapper of the \",(0,e.jsx)(t.code,{children:\"title\"}),\" and \",(0,e.jsx)(t.code,{children:\"subtitle\"}),\".\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"title\"}),\": The accordion item title.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"subtitle\"}),\": The accordion item subtitle.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"startContent\"}),\": The content before the accordion item.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"indicator\"}),\": The element that indicates the open/close state of the accordion item.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"content\"}),\": The accordion item content.\"]}),`\n`]}),`\n`,(0,e.jsx)(t.h3,{id:\"custom-accordion-styles\",children:\"Custom Accordion Styles\"}),`\n`,(0,e.jsx)(t.p,{children:\"You can customize the accordion and accordion items styles by using any of the following properties:\"}),`\n`,(0,e.jsxs)(t.ul,{children:[`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.code,{children:\"className\"}),\": The class name of the accordion. Modify the accordion wrapper styles.(Accordion)\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.code,{children:\"itemClasses\"}),\": The class names of the accordion items. Modify all accordion items styles at once. (Accordion)\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.code,{children:\"classNames\"}),\": The class names of the accordion items. Modify each accordion item styles separately. (AccordionItem)\"]}),`\n`]}),`\n`,(0,e.jsx)(t.p,{children:\"Here's an example of how to customize the accordion styles:\"}),`\n`,(0,e.jsx)(n,{title:\"Custom Accordion Styles\",files:i.customStyles}),`\n`,(0,e.jsx)(a,{y:4}),`\n`,(0,e.jsx)(t.h2,{id:\"data-attributes\",children:\"Data Attributes\"}),`\n`,(0,e.jsxs)(t.p,{children:[(0,e.jsx)(t.code,{children:\"AccordionItem\"}),\" has the following attributes on the \",(0,e.jsx)(t.code,{children:\"base\"}),\" element:\"]}),`\n`,(0,e.jsxs)(t.ul,{children:[`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"data-open\"}),`:\nWhether the accordion item is open.`]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"data-disabled\"}),`:\nWhen the accordion item is disabled.`]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"data-hover\"}),`:\nWhen the accordion item is being hovered. Based on `,(0,e.jsx)(t.a,{href:\"https://react-spectrum.adobe.com/react-aria/useHover.html\",children:\"useHover\"}),\".\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"data-focus\"}),`:\nWhen the accordion item is being focused. Based on `,(0,e.jsx)(t.a,{href:\"https://react-spectrum.adobe.com/react-aria/useFocusRing.html\",children:\"useFocusRing\"}),\".\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"data-focus-visible\"}),`:\nWhen the accordion item is being focused with the keyboard. Based on `,(0,e.jsx)(t.a,{href:\"https://react-spectrum.adobe.com/react-aria/useFocusRing.html\",children:\"useFocusRing\"}),\".\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"data-disabled\"}),`:\nWhen the accordion item is disabled. Based on `,(0,e.jsx)(t.code,{children:\"isDisabled\"}),\" prop.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"data-pressed\"}),`:\nWhen the accordion item is pressed. Based on `,(0,e.jsx)(t.a,{href:\"https://react-spectrum.adobe.com/react-aria/usePress.html\",children:\"usePress\"}),\".\"]}),`\n`]}),`\n`,(0,e.jsx)(a,{y:4}),`\n`,(0,e.jsx)(t.h2,{id:\"accessibility\",children:\"Accessibility\"}),`\n`,(0,e.jsxs)(t.ul,{children:[`\n`,(0,e.jsxs)(t.li,{children:[\"Keyboard event support for \",(0,e.jsx)(d,{children:\"Space\"}),\", \",(0,e.jsx)(d,{children:\"Enter\"}),\", \",(0,e.jsx)(d,{children:\"Arrow Up\"}),\", \",(0,e.jsx)(d,{children:\"Arrow Down\"}),\" and \",(0,e.jsx)(d,{children:\"Home\"}),\" / \",(0,e.jsx)(d,{children:\"End\"}),\" keys.\"]}),`\n`,(0,e.jsx)(t.li,{children:\"Keyboard focus management and cross browser normalization.\"}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.code,{children:\"aria-expanded\"}),\" attribute for the accordion item.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.code,{children:\"aria-disabled\"}),\" attribute for the accordion item.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.code,{children:\"aria-controls\"}),\" attribute for the accordion item.\"]}),`\n`]}),`\n`,(0,e.jsx)(a,{y:4}),`\n`,(0,e.jsx)(t.h2,{id:\"api\",children:\"API\"}),`\n`,(0,e.jsx)(t.h3,{id:\"accordion-props\",children:\"Accordion Props\"}),`\n`,(0,e.jsxs)(t.table,{children:[(0,e.jsx)(t.thead,{children:(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.th,{children:\"Attribute\"}),(0,e.jsx)(t.th,{children:\"Type\"}),(0,e.jsx)(t.th,{children:\"Description\"}),(0,e.jsx)(t.th,{children:\"Default\"})]})}),(0,e.jsxs)(t.tbody,{children:[(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"children\"}),(0,e.jsxs)(t.td,{children:[(0,e.jsx)(t.code,{children:\"ReactNode\"}),\" | \",(0,e.jsx)(t.code,{children:\"ReactNode[]\"})]}),(0,e.jsxs)(t.td,{children:[\"The contents of the collection. Usually the array of \",(0,e.jsx)(t.code,{children:\"AccordionItem\"})]}),(0,e.jsx)(t.td,{})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"variant\"}),(0,e.jsxs)(t.td,{children:[(0,e.jsx)(t.code,{children:\"light\"}),\" | \",(0,e.jsx)(t.code,{children:\"shadow\"}),\" | \",(0,e.jsx)(t.code,{children:\"bordered\"}),\" | \",(0,e.jsx)(t.code,{children:\"splitted\"})]}),(0,e.jsx)(t.td,{children:\"The accordion appearance style.\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"light\"})})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"selectionMode\"}),(0,e.jsxs)(t.td,{children:[(0,e.jsx)(t.code,{children:\"none\"}),\" | \",(0,e.jsx)(t.code,{children:\"single\"}),\" | \",(0,e.jsx)(t.code,{children:\"multiple\"})]}),(0,e.jsx)(t.td,{children:\"The type of selection that is allowed in the collection.\"}),(0,e.jsx)(t.td,{})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"selectionBehavior\"}),(0,e.jsxs)(t.td,{children:[(0,e.jsx)(t.code,{children:\"toggle\"}),\" | \",(0,e.jsx)(t.code,{children:\"replace\"})]}),(0,e.jsx)(t.td,{children:\"The accordion selection behavior.\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"toggle\"})})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"isCompact\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"boolean\"})}),(0,e.jsx)(t.td,{children:\"Whether all Accordion items should be smaller.\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"false\"})})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"isDisabled\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"boolean\"})}),(0,e.jsx)(t.td,{children:\"Whether the Accordion items are disabled.\"}),(0,e.jsx)(t.td,{})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"showDivider\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"boolean\"})}),(0,e.jsx)(t.td,{children:\"Whether to display a divider at the bottom of the each accordion item.\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"true\"})})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"dividerProps\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.a,{href:\"/docs/components/divider\",children:\"DividerProps\"})}),(0,e.jsx)(t.td,{children:\"The divider component props.\"}),(0,e.jsx)(t.td,{children:\"-\"})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"hideIndicator\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"boolean\"})}),(0,e.jsx)(t.td,{children:\"Whether the Accordion items indicator is hidden.\"}),(0,e.jsx)(t.td,{})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"disableAnimation\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"boolean\"})}),(0,e.jsx)(t.td,{children:\"Whether the Accordion items open/close animation is disabled.\"}),(0,e.jsx)(t.td,{})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"disableIndicatorAnimation\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"boolean\"})}),(0,e.jsx)(t.td,{children:\"Whether the Accordion items indicator animation is disabled.\"}),(0,e.jsx)(t.td,{})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"disallowEmptySelection\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"boolean\"})}),(0,e.jsx)(t.td,{children:\"Whether the collection allows empty selection.\"}),(0,e.jsx)(t.td,{})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"keepContentMounted\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"boolean\"})}),(0,e.jsx)(t.td,{children:\"Whether the Accordion items content should be always mounted.\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"false\"})})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"fullWidth\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"boolean\"})}),(0,e.jsx)(t.td,{children:\"Whether the accordion should take up the full width of its parent container.\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"true\"})})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"motionProps\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"MotionProps\"})}),(0,e.jsx)(t.td,{children:\"The motion properties of the Accordion.\"}),(0,e.jsx)(t.td,{})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"disabledKeys\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"React.Key[]\"})}),(0,e.jsx)(t.td,{children:\"The item keys that are disabled. These items cannot be selected, focused, or otherwise interacted with.\"}),(0,e.jsx)(t.td,{})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"itemClasses\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.a,{href:\"#accordion-item-classnames\",children:\"Classnames\"})}),(0,e.jsx)(t.td,{children:\"The accordion items classNames.\"}),(0,e.jsx)(t.td,{})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"selectedKeys\"}),(0,e.jsxs)(t.td,{children:[(0,e.jsx)(t.code,{children:\"all\"}),\" | \",(0,e.jsx)(t.code,{children:\"React.Key[]\"})]}),(0,e.jsx)(t.td,{children:\"The currently selected keys in the collection (controlled).\"}),(0,e.jsx)(t.td,{})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"defaultSelectedKeys\"}),(0,e.jsxs)(t.td,{children:[(0,e.jsx)(t.code,{children:\"all\"}),\" | \",(0,e.jsx)(t.code,{children:\"React.Key[]\"})]}),(0,e.jsx)(t.td,{children:\"The initial selected keys in the collection (uncontrolled).\"}),(0,e.jsx)(t.td,{})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"disabledKeys\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"React.Key[]\"})}),(0,e.jsx)(t.td,{children:\"The currently disabled keys in the collection (controlled).\"}),(0,e.jsx)(t.td,{})]})]})]}),`\n`,(0,e.jsx)(t.h3,{id:\"accordion-events\",children:\"Accordion Events\"}),`\n`,(0,e.jsxs)(t.table,{children:[(0,e.jsx)(t.thead,{children:(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.th,{children:\"Attribute\"}),(0,e.jsx)(t.th,{children:\"Type\"}),(0,e.jsx)(t.th,{children:\"Description\"})]})}),(0,e.jsx)(t.tbody,{children:(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"onSelectionChange\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:'(keys: \"all\" \\uFF5C Set<React.Key>) => any'})}),(0,e.jsx)(t.td,{children:\"Handler that is called when the selection changes.\"})]})})]}),`\n`,(0,e.jsx)(t.h3,{id:\"accordion-item-props\",children:\"Accordion Item Props\"}),`\n`,(0,e.jsxs)(t.table,{children:[(0,e.jsx)(t.thead,{children:(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.th,{children:\"Attribute\"}),(0,e.jsx)(t.th,{children:\"Type\"}),(0,e.jsx)(t.th,{children:\"Description\"}),(0,e.jsx)(t.th,{children:\"Default\"})]})}),(0,e.jsxs)(t.tbody,{children:[(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"children\"}),(0,e.jsxs)(t.td,{children:[(0,e.jsx)(t.code,{children:\"ReactNode\"}),\" | \",(0,e.jsx)(t.code,{children:\"string\"})]}),(0,e.jsx)(t.td,{children:\"The content of the component.\"}),(0,e.jsx)(t.td,{})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"title\"}),(0,e.jsxs)(t.td,{children:[(0,e.jsx)(t.code,{children:\"ReactNode\"}),\" | \",(0,e.jsx)(t.code,{children:\"string\"})]}),(0,e.jsx)(t.td,{children:\"The accordion item title.\"}),(0,e.jsx)(t.td,{})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"subtitle\"}),(0,e.jsxs)(t.td,{children:[(0,e.jsx)(t.code,{children:\"ReactNode\"}),\" | \",(0,e.jsx)(t.code,{children:\"string\"})]}),(0,e.jsx)(t.td,{children:\"The accordion item subtitle.\"}),(0,e.jsx)(t.td,{})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"indicator\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.a,{href:\"#accordion-item-indicator-props\",children:\"IndicatorProps\"})}),(0,e.jsxs)(t.td,{children:[\"The accordion item \",(0,e.jsx)(t.code,{children:\"expanded\"}),\" indicator, usually an arrow icon.\"]}),(0,e.jsx)(t.td,{})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"startContent\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"ReactNode\"})}),(0,e.jsx)(t.td,{children:\"The accordion item start content, usually an icon or avatar.\"}),(0,e.jsx)(t.td,{})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"motionProps\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.a,{href:\"#motion-props\",children:\"MotionProps\"})}),(0,e.jsxs)(t.td,{children:[\"The props to modify the framer motion animation. Use the \",(0,e.jsx)(t.code,{children:\"variants\"}),\" API to create your own animation.\"]}),(0,e.jsx)(t.td,{})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"isCompact\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"boolean\"})}),(0,e.jsx)(t.td,{children:\"Whether the AccordionItem is compact.\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"false\"})})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"isDisabled\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"boolean\"})}),(0,e.jsx)(t.td,{children:\"The current disabled status.\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"false\"})})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"keepContentMounted\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"boolean\"})}),(0,e.jsx)(t.td,{children:\"Whether the AccordionItem content is kept mounted when closed.\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"false\"})})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"hideIndicator\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"boolean\"})}),(0,e.jsx)(t.td,{children:\"Whether the AccordionItem indicator is hidden.\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"false\"})})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"disableAnimation\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"boolean\"})}),(0,e.jsx)(t.td,{children:\"Whether the AccordionItem animation is disabled.\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"false\"})})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"disableIndicatorAnimation\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"boolean\"})}),(0,e.jsx)(t.td,{children:\"Whether the AccordionItem indicator animation is disabled.\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"false\"})})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"HeadingComponent\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"React.ElementType\"})}),(0,e.jsx)(t.td,{children:\"Customizable heading tag for Web accessibility. Use headings to describe content and use them consistently and semantically.\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"h2\"})})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"classNames\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.a,{href:\"#accordion-item-classnames\",children:\"Classnames\"})}),(0,e.jsx)(t.td,{children:\"Allows to set custom class names for the accordion item slots.\"}),(0,e.jsx)(t.td,{children:\"-\"})]})]})]}),`\n`,(0,e.jsx)(t.h3,{id:\"accordion-item-events\",children:\"Accordion Item Events\"}),`\n`,(0,e.jsxs)(t.table,{children:[(0,e.jsx)(t.thead,{children:(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.th,{children:\"Attribute\"}),(0,e.jsx)(t.th,{children:\"Type\"}),(0,e.jsx)(t.th,{children:\"Description\"})]})}),(0,e.jsxs)(t.tbody,{children:[(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"onFocus\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"(e: FocusEvent) => void\"})}),(0,e.jsx)(t.td,{children:\"Handler that is called when the element receives focus.\"})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"onBlur\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"(e: FocusEvent) => void\"})}),(0,e.jsx)(t.td,{children:\"Handler that is called when the element loses focus.\"})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"onFocusChange\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"(isFocused: boolean) => void\"})}),(0,e.jsx)(t.td,{children:\"Handler that is called when the element's focus status changes.\"})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"onKeyDown\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"(e: KeyboardEvent) => void\"})}),(0,e.jsx)(t.td,{children:\"Handler that is called when a key is pressed.\"})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"onKeyUp\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"(e: KeyboardEvent) => void\"})}),(0,e.jsx)(t.td,{children:\"Handler that is called when a key is released.\"})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"onPress\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"(e: PressEvent) => void\"})}),(0,e.jsx)(t.td,{children:\"Handler called when the press is released over the target.\"})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"onPressStart\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"(e: PressEvent) => void\"})}),(0,e.jsx)(t.td,{children:\"Handler called when a press interaction starts.\"})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"onPressEnd\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"(e: PressEvent) => void\"})}),(0,e.jsx)(t.td,{children:\"Handler called when a press interaction ends, either over the target or when the pointer leaves the target.\"})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"onPressChange\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"(isPressed: boolean) => void\"})}),(0,e.jsx)(t.td,{children:\"Handler called when the press state changes.\"})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"onPressUp\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"(e: PressEvent) => void\"})}),(0,e.jsx)(t.td,{children:\"Handler called when a press is released over the target, regardless of whether it started on the target or not.\"})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"onClick\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"MouseEventHandler\"})}),(0,e.jsxs)(t.td,{children:[\"The native button click event handler (\",(0,e.jsx)(t.strong,{children:\"Deprecated\"}),\") use \",(0,e.jsx)(t.strong,{children:\"onPress\"}),\" instead.\"]})]})]})]}),`\n`,(0,e.jsx)(t.hr,{}),`\n`,(0,e.jsx)(t.h3,{id:\"types\",children:\"Types\"}),`\n`,(0,e.jsx)(t.h4,{id:\"accordion-item-indicator-props\",children:\"Accordion Item Indicator Props\"}),`\n`,(0,e.jsx)(t.pre,{children:(0,e.jsx)(t.code,{className:\"language-ts\",children:`export type AccordionItemIndicatorProps = {\n  /**\n   * The current indicator, usually an arrow icon.\n   */\n  indicator?: ReactNode;\n  /**\n   * The current open status.\n   */\n  isOpen?: boolean;\n  /**\n   * The current disabled status.\n   * @default false\n   */\n  isDisabled?: boolean;\n};\n\ntype indicator?: ReactNode | ((props: AccordionItemIndicatorProps) => ReactNode) | null;\n`})}),`\n`,(0,e.jsx)(t.h3,{id:\"accordion-item-classnames\",children:\"Accordion Item classNames\"}),`\n`,(0,e.jsx)(t.pre,{children:(0,e.jsx)(t.code,{className:\"language-ts\",children:`export type AccordionItemClassnames = {\n  base?: string;\n  heading?: string;\n  trigger?: string;\n  titleWrapper?: string;\n  title?: string;\n  subtitle?: string;\n  startContent?: string;\n  indicator?: string;\n  content?: string;\n};\n`})}),`\n`,(0,e.jsx)(t.h4,{id:\"motion-props\",children:\"Motion Props\"}),`\n`,(0,e.jsx)(t.pre,{children:(0,e.jsx)(t.code,{className:\"language-ts\",children:`export type MotionProps = {\n  /**\n   * If \\`true\\`, the opacity of the content will be animated\n   * @default true\n   */\n  animateOpacity?: boolean;\n  /**\n   * The height you want the content in its collapsed state.\n   * @default 0\n   */\n  startingHeight?: number;\n  /**\n   * The height you want the content in its expanded state.\n   * @default \"auto\"\n   */\n  endingHeight?: number | string;\n  /**\n   * The y-axis offset you want the content in its collapsed state.\n   * @default 10\n   */\n  startingY?: number;\n  /**\n   * The y-axis offset you want the content in its expanded state.\n   * @default 0\n   */\n  endingY?: number;\n} & HTMLMotionProps;\n`})})]})}function X(o={}){let{wrapper:t}=o.components||{};return t?(0,e.jsx)(t,{...o,children:(0,e.jsx)(J,{...o})}):J(o)}function l(o,t){throw new Error(\"Expected \"+(t?\"component\":\"object\")+\" `\"+o+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return re(Be);})();\n;return Component;"
  },
  "_id": "docs/components/accordion.mdx",
  "_raw": {
    "sourceFilePath": "docs/components/accordion.mdx",
    "sourceFileName": "accordion.mdx",
    "sourceFileDir": "docs/components",
    "contentType": "mdx",
    "flattenedPath": "docs/components/accordion"
  },
  "type": "Doc",
  "slug": "/docs/components/accordion",
  "slugAsParams": "components/accordion",
  "url": "/docs/components/accordion"
}