{
  "title": "Navbar",
  "description": "A responsive navigation header positioned on top side of your page that includes support for branding, links, navigation, collapse and more.",
  "body": {
    "raw": "\nimport {navbarContent} from \"@/content/components/navbar\";\n\n# Navbar\n\nA responsive navigation header positioned on top side of your page that includes support for branding, links, navigation, collapse menu and more.\n\n<ComponentLinks component=\"navbar\" />\n\n---\n\n<CarbonAd/>\n\n## Installation\n\n<PackageManagers\n  showGlobalInstallWarning\n  commands={{\n    cli: \"npx nextui-cli@latest add navbar\",\n    npm: \"npm install @nextui-org/navbar\",\n    yarn: \"yarn add @nextui-org/navbar\",\n    pnpm: \"pnpm add @nextui-org/navbar\",\n    bun: \"bun add @nextui-org/navbar\"\n  }}\n/>\n\n\n## Import\n\nNextUI exports 7 navbar-related components:\n\n- **Navbar**: The main component of navbar.\n- **NavbarBrand**: The component for branding.\n- **NavbarContent**: The component for wrapping navbar items.\n- **NavbarItem**: The component for navbar item.\n- **NavbarMenuToggle**: The component for toggling navbar menu.\n- **NavbarMenu**: The component for wrapping navbar menu items.\n- **NavbarMenuItem**: The component for navbar menu item.\n\n<ImportTabs\n  commands={{\n    main: `import {\n  Navbar, \n  NavbarBrand, \n  NavbarContent, \n  NavbarItem, \n  NavbarMenuToggle,\n  NavbarMenu,\n  NavbarMenuItem\n} from \"@nextui-org/react\";`,\n    individual: `import {\n  Navbar, \n  NavbarBrand, \n  NavbarContent, \n  NavbarItem, \n  NavbarMenuToggle,\n  NavbarMenu,\n  NavbarMenuItem\n} from \"@nextui-org/navbar\";`,\n  }}\n/>\n\n## Usage\n\n<CodeDemo\n  asIframe\n  title=\"Usage\"\n  previewHeight=\"500px\"\n  iframeSrc=\"/examples/navbar/usage\"\n  files={navbarContent.usage}\n/>\n\n### Static\n\nYou can use the `position` prop to make the navbar static positioned (the default behavior is `sticky`).\n\n<CodeDemo\n  asIframe\n  title=\"Static\"\n  previewHeight=\"500px\"\n  iframeSrc=\"/examples/navbar/static\"\n  files={navbarContent.staticPosition}\n/>\n\n### Hide on scroll\n\nIt is possible to hide the navbar on scroll by using the `shouldHideOnScroll` prop.\n\n<CodeDemo\n  asIframe\n  title=\"Hide on scroll\"\n  previewHeight=\"500px\"\n  iframeSrc=\"/examples/navbar/hide-on-scroll\"\n  files={navbarContent.hideOnScroll}\n/>\n\n### With Menu\n\nYou can use the `NavbarMenuToggle` and `NavbarMenu` components to display a togglable menu.\n\n<CodeDemo\n  asIframe\n  title=\"With Menu\"\n  iframeInitialWidth={420}\n  previewHeight=\"600px\"\n  iframeSrc=\"/examples/navbar/with-menu\"\n  files={navbarContent.withMenu}\n/>\n\nIf you want to remove the `open` / `close` animation, you can pass the `disableAnimation={true}` prop to `Navbar` component.\n\n<CodeDemo\n  asIframe\n  title=\"With Menu\"\n  iframeInitialWidth={420}\n  highlightedLines=\"24\"\n  previewHeight=\"600px\"\n  iframeSrc=\"/examples/navbar/disable-menu-animation\"\n  files={navbarContent.disableMenuAnimation}\n/>\n\n### Controlled Menu\n\nYou can use the `isMenuOpen` and `onMenuOpenChange` props to control the navbar menu state.\n\n<CodeDemo\n  asIframe\n  title=\"Controlled Menu\"\n  iframeInitialWidth={420}\n  previewHeight=\"600px\"\n  highlightedLines=\"5,23-24\"\n  iframeSrc=\"/examples/navbar/controlled-menu\"\n  files={navbarContent.controlledMenu}\n/>\n\n### With Border\n\nYou can use the `isBordered` prop to add a bottom border to the navbar.\n\n<CodeDemo\n  asIframe\n  title=\"Adding a bottom border\"\n  previewHeight=\"500px\"\n  iframeSrc=\"/examples/navbar/bordered\"\n  files={navbarContent.bordered}\n/>\n\n### Disabling Blur\n\nNavbar has a blur effect by default. You can disable it by using the `isBlurred=false` prop.\n\n<CodeDemo\n  asIframe\n  title=\"Disabling blur\"\n  previewHeight=\"500px\"\n  iframeSrc=\"/examples/navbar/disabled-blur\"\n  files={navbarContent.disabledBlur}\n/>\n\n### With Dropdown Menu\n\nIt is possible to use the [Dropdown](/docs/components/dropdown) component to display a dropdown menu as navbar item.\n\n<CodeDemo\n  asIframe\n  title=\"With Dropdown Menu\"\n  previewHeight=\"600px\"\n  iframeSrc=\"/examples/navbar/with-dropdown-menu\"\n  files={navbarContent.withDropdownMenu}\n/>\n\n### With Avatar\n\nExample of a navbar with avatar and dropdown menu.\n\n<CodeDemo\n  asIframe\n  title=\"With Avatar\"\n  previewHeight=\"420px\"\n  iframeSrc=\"/examples/navbar/with-avatar\"\n  files={navbarContent.withAvatar}\n/>\n\n### With Search Input\n\nExample of a navbar with search input.\n\n<CodeDemo\n  asIframe\n  title=\"With Search Input\"\n  previewHeight=\"420px\"\n  iframeSrc=\"/examples/navbar/with-search-input\"\n  files={navbarContent.withSearchInput}\n/>\n\n### Customizing the active item\n\nWhen the `NavbarItem` is active, it will have a `data-active` attribute. You can use this attribute to customize it.\n\n<CodeDemo\n  asIframe\n  title=\"Customizing the active item\"\n  previewHeight=\"420px\"\n  iframeSrc=\"/examples/navbar/custom-active-item\"\n  highlightedLines=\"9-20\"\n  files={navbarContent.customActiveItem}\n/>\n\n## Slots\n\n- **base**: The main slot for the navbar. It takes the full width of the parent and wraps the navbar elements including the menu.\n- **wrapper**: The slot that contains the navbar elements such as `brand`, `content` and `toggle`.\n- **brand**: The slot for the `NavbarBrand` component.\n- **content**: The slot for the `NavbarContent` component.\n- **item**: The slot for the `NavbarItem` component.\n- **toggle**: The slot for the `NavbarMenuToggle` component.\n- **toggleIcon**: The slot for the `NavbarMenuToggle` icon.\n- **menu**: The slot for the `NavbarMenu` component.\n- **menuItem**: The slot for the `NavbarMenuItem` component.\n\n## Data Attributes\n\n`Navbar` has the following attributes on the `base` element:\n\n- **data-menu-open**:\n  Indicates if the navbar menu is open.\n- **data-hidden**:\n  Indicates if the navbar is hidden. It is used when the `shouldHideOnScroll` prop is `true`.\n\n`NavbarContent`\n\n- **data-justify**:\n  The justify content of the navbar content. It takes into account the correct space distribution.\n\n`NavbarItem` has the following attributes on the `base` element:\n\n- **data-active**:\n  Indicates if the navbar item is active. It is used when the `isActive` prop is `true`.\n\n`NavbarMenuToggle` has the following attributes on the `base` element:\n\n- **data-open**:\n  Indicates if the navbar menu is open. It is used when the `isMenuOpen` prop is `true`.\n- **data-pressed**:\n  When the navbar menu toggle is pressed. Based on [usePress](https://react-spectrum.adobe.com/react-aria/usePress.html)\n- **data-hover**:\n  When the navbar menu toggle is being hovered. Based on [useHover](https://react-spectrum.adobe.com/react-aria/useHover.html)\n- **data-focus-visible**:\n  When the navbar menu toggle is being focused with the keyboard. Based on [useFocusRing](https://react-spectrum.adobe.com/react-aria/useFocusRing.html).\n\n`NavbarMenuItem` has the following attributes on the `base` element:\n\n- **data-active**:\n  Indicates if the menu item is active. It is used when the `isActive` prop is `true`.\n\n<Spacer y={4} />\n\n## API\n\n### Navbar Props\n\n| Attribute            | Type                                                                                                                | Description                                                                                                                                         | Default       |\n| -------------------- | ------------------------------------------------------------------------------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------- | ------------- |\n| children\\*           | `ReactNode[]`                                                                                                       | The children to render. Usually navbar elements such as `NavbarBrand`, `NavbarContent` and `NavbarItem`                                             | -             |\n| height               | `string` \\| `number`                                                                                                | The height of the navbar.                                                                                                                           | `4rem` (64px) |\n| position             | `static` \\| `sticky`                                                                                                | The position of the navbar.                                                                                                                         | `sticky`      |\n| maxWidth             | `sm` \\| `md` \\| `lg` \\| `xl` \\| `2xl` \\| `full`                                                                     | The max width of the navbar wrapper.                                                                                                                | `lg`          |\n| parentRef            | `React.RefObject<HTMLElement>`                                                                                      | The parent element where the navbar is placed within. This is used to determine the scroll position and whether the navbar should be hidden or not. | `window`      |\n| isBordered           | `boolean`                                                                                                           | Whether the navbar should have a bottom border or not.                                                                                              | `false`       |\n| isBlurred            | `boolean`                                                                                                           | Whether the navbar should have a blur effect or not.                                                                                                | `true`        |\n| isMenuOpen           | `boolean`                                                                                                           | Indicates if the navbar menu is open. (controlled)                                                                                                  | `false`       |\n| isMenuDefaultOpen    | `boolean`                                                                                                           | Indicates if the navbar menu is open by default. (uncontrolled)                                                                                     | `false`       |\n| shouldHideOnScroll   | `boolean`                                                                                                           | Indicates if the navbar should hide on scroll.                                                                                                      | `false`       |\n| motionProps          | [MotionProps](#motion-props)                                                                                        | The motion props to control the `visible` / `hidden` animation. This motion is only available if the `shouldHideOnScroll` prop is set to `true`.   | -             |\n| disableScrollHandler | `boolean`                                                                                                           | Whether the navbar parent scroll event should be listened to or not.                                                                                | `false`       |\n| disableAnimation     | `boolean`                                                                                                           | Whether the navbar menu animation should be disabled or not.                                                                                        | `false`       |\n| classNames           | `Record<\"base\"｜ \"wrapper\"｜ \"brand\"｜ \"content\"｜ \"item\"｜ \"toggle\"｜ \"toggleIcon\"｜ \"menu\"｜ \"menuItem\", string>` | Allows to set custom class names for the navbar slots.                                                                                              | -             |\n\n### Navbar Events\n\n| Attribute              | Type                         | Description                                                                                                                                                                            |\n| ---------------------- | ---------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| onMenuOpenChange       | `(isOpen: boolean) => void`  | Handler that is called when the navbar menu open state changes.                                                                                                                        |\n| onScrollPositionChange | `(position: number) => void` | Handler that is called when the navbar parent element is scrolled. This event is only dispatched if `disableScrollHandler` is set to `false` or `shouldHideOnScroll` is set to `true`. |\n\n### NavbarContent Props\n\n| Attribute  | Type                         | Description                                                                                             | Default |\n| ---------- | ---------------------------- | ------------------------------------------------------------------------------------------------------- | ------- |\n| children\\* | `ReactNode[]`                | The children to render. Usually navbar elements such as `NavbarBrand`, `NavbarContent` and `NavbarItem` | -       |\n| justify    | `start` \\| `center` \\| `end` | The justify content of the navbar content. It takes into account the correct space distribution.        | `start` |\n\n### NavbarItem Props\n\n| Attribute | Type        | Description                                | Default |\n| --------- | ----------- | ------------------------------------------ | ------- |\n| children  | `ReactNode` | The children to render as the navbar item. | -       |\n| isActive  | `boolean`   | Whether the navbar item is active or not.  | `false` |\n\n### NavbarMenuToggle Props\n\n| Attribute       | Type                                                                  | Description                                                           | Default                        |\n| --------------- | --------------------------------------------------------------------- | --------------------------------------------------------------------- | ------------------------------ |\n| icon            | `ReactNode` \\| `(isOpen: boolean \\| undefined) => ReactNode \\| null;` | The icon to render as the navbar menu toggle.                         | -                              |\n| isSelected      | `boolean`                                                             | Whether the navbar menu toggle is selected. (controlled)              | `false`                        |\n| defaultSelected | `boolean`                                                             | Whether the navbar menu toggle is selected by default. (uncontrolled) | `false`                        |\n| srOnlyText      | `string`                                                              | The text to be used by screen readers.                                | `open`/`close` navigation menu |\n\n### NavbarMenuToggle Events\n\n| Attribute | Type                        | Description                                                    |\n| --------- | --------------------------- | -------------------------------------------------------------- |\n| onChange  | `(isOpen: boolean) => void` | Handler that is called when the navbar menu toggle is pressed. |\n\n### NavbarMenu Props\n\n| Attribute       | Type                         | Description                                                                                                                                  | Default         |\n| --------------- | ---------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------- | --------------- |\n| children\\*      | `ReactNode[]`                | The children to render as the navbar menu. Usually a list of `NavbarMenuItem` components.                                                    | -               |\n| portalContainer | `HTMLElement`                | The container element in which the navbar menu overlay portal will be placed.                                                                | `document.body` |\n| motionProps     | [MotionProps](#motion-props) | The motion props to control the `open` / `close` animation. This motion is only available if the `disableAnimation` prop is set to `false`. | -               |\n\n### NavbarMenuItem Props\n\n| Attribute | Type        | Description                              | Default |\n| --------- | ----------- | ---------------------------------------- | ------- |\n| children  | `ReactNode` | The children to render as the menu item. | -       |\n| isActive  | `boolean`   | Whether the menu item is active or not.  | `false` |\n\n> **Note**: The rest of the navbar components such as `NavbarMenuItem` and `NavbarBrand` have the same props as the `li` element.\n\n### Navbar types\n\n#### Motion Props\n\n```ts\nexport type MotionProps = HTMLMotionProps<\"div\">; // @see https://www.framer.com/motion/\n```\n",
    "code": "var Component=(()=>{var B=Object.create;var l=Object.defineProperty;var D=Object.getOwnPropertyDescriptor;var j=Object.getOwnPropertyNames;var T=Object.getPrototypeOf,S=Object.prototype.hasOwnProperty;var H=(r,n)=>()=>(n||r((n={exports:{}}).exports,n),n.exports),W=(r,n)=>{for(var o in n)l(r,o,{get:n[o],enumerable:!0})},m=(r,n,o,t)=>{if(n&&typeof n==\"object\"||typeof n==\"function\")for(let i of j(n))!S.call(r,i)&&i!==o&&l(r,i,{get:()=>n[i],enumerable:!(t=D(n,i))||t.enumerable});return r};var z=(r,n,o)=>(o=r!=null?B(T(r)):{},m(n||!r||!r.__esModule?l(o,\"default\",{value:r,enumerable:!0}):o,r)),R=r=>m(l({},\"__esModule\",{value:!0}),r);var u=H((Ae,p)=>{p.exports=_jsx_runtime});var xe={};W(xe,{default:()=>y,frontmatter:()=>we});var e=z(u());var O=`export const AcmeLogo = () => (\n  <svg fill=\"none\" height=\"36\" viewBox=\"0 0 32 32\" width=\"36\">\n    <path\n      clipRule=\"evenodd\"\n      d=\"M17.6482 10.1305L15.8785 7.02583L7.02979 22.5499H10.5278L17.6482 10.1305ZM19.8798 14.0457L18.11 17.1983L19.394 19.4511H16.8453L15.1056 22.5499H24.7272L19.8798 14.0457Z\"\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n    />\n  </svg>\n);`,Z=`import {Navbar, NavbarBrand, NavbarContent, NavbarItem, Link, Button} from \"@nextui-org/react\";\nimport {AcmeLogo} from \"./AcmeLogo.jsx\";\n\nexport default function App() {\n  return (\n    <Navbar>\n      <NavbarBrand>\n        <AcmeLogo />\n        <p className=\"font-bold text-inherit\">ACME</p>\n      </NavbarBrand>\n      <NavbarContent className=\"hidden sm:flex gap-4\" justify=\"center\">\n        <NavbarItem>\n          <Link color=\"foreground\" href=\"#\">\n            Features\n          </Link>\n        </NavbarItem>\n        <NavbarItem isActive>\n          <Link href=\"#\" aria-current=\"page\">\n            Customers\n          </Link>\n        </NavbarItem>\n        <NavbarItem>\n          <Link color=\"foreground\" href=\"#\">\n            Integrations\n          </Link>\n        </NavbarItem>\n      </NavbarContent>\n      <NavbarContent justify=\"end\">\n        <NavbarItem className=\"hidden lg:flex\">\n          <Link href=\"#\">Login</Link>\n        </NavbarItem>\n        <NavbarItem>\n          <Button as={Link} color=\"primary\" href=\"#\" variant=\"flat\">\n            Sign Up\n          </Button>\n        </NavbarItem>\n      </NavbarContent>\n    </Navbar>\n  );\n}`,P={\"/App.jsx\":Z,\"/AcmeLogo.jsx\":O},v={...P};var E=`export const AcmeLogo = () => (\n  <svg fill=\"none\" height=\"36\" viewBox=\"0 0 32 32\" width=\"36\">\n    <path\n      clipRule=\"evenodd\"\n      d=\"M17.6482 10.1305L15.8785 7.02583L7.02979 22.5499H10.5278L17.6482 10.1305ZM19.8798 14.0457L18.11 17.1983L19.394 19.4511H16.8453L15.1056 22.5499H24.7272L19.8798 14.0457Z\"\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n    />\n  </svg>\n);`,F=`import {Navbar, NavbarBrand, NavbarContent, NavbarItem, Link, Button} from \"@nextui-org/react\";\nimport {AcmeLogo} from \"./AcmeLogo.jsx\";\n\nexport default function App() {\n  return (\n    <Navbar isBordered>\n      <NavbarBrand>\n        <AcmeLogo />\n        <p className=\"font-bold text-inherit\">ACME</p>\n      </NavbarBrand>\n      <NavbarContent className=\"hidden sm:flex gap-4\" justify=\"center\">\n        <NavbarItem>\n          <Link color=\"foreground\" href=\"#\">\n            Features\n          </Link>\n        </NavbarItem>\n        <NavbarItem isActive>\n          <Link href=\"#\" aria-current=\"page\">\n            Customers\n          </Link>\n        </NavbarItem>\n        <NavbarItem>\n          <Link color=\"foreground\" href=\"#\">\n            Integrations\n          </Link>\n        </NavbarItem>\n      </NavbarContent>\n      <NavbarContent justify=\"end\">\n        <NavbarItem className=\"hidden lg:flex\">\n          <Link href=\"#\">Login</Link>\n        </NavbarItem>\n        <NavbarItem>\n          <Button as={Link} color=\"primary\" href=\"#\" variant=\"flat\">\n            Sign Up\n          </Button>\n        </NavbarItem>\n      </NavbarContent>\n    </Navbar>\n  );\n}`,U={\"/App.jsx\":F,\"/AcmeLogo.jsx\":E},b={...U};var _=`export const AcmeLogo = () => (\n  <svg fill=\"none\" height=\"36\" viewBox=\"0 0 32 32\" width=\"36\">\n    <path\n      clipRule=\"evenodd\"\n      d=\"M17.6482 10.1305L15.8785 7.02583L7.02979 22.5499H10.5278L17.6482 10.1305ZM19.8798 14.0457L18.11 17.1983L19.394 19.4511H16.8453L15.1056 22.5499H24.7272L19.8798 14.0457Z\"\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n    />\n  </svg>\n);`,V=`import {Navbar, NavbarBrand, NavbarContent, NavbarItem, Link, Button} from \"@nextui-org/react\";\nimport {AcmeLogo} from \"./AcmeLogo.jsx\";\n\nexport default function App() {\n  return (\n    <Navbar isBordered isBlurred={false}>\n      <NavbarBrand>\n        <AcmeLogo />\n        <p className=\"font-bold text-inherit\">ACME</p>\n      </NavbarBrand>\n      <NavbarContent className=\"hidden sm:flex gap-4\" justify=\"center\">\n        <NavbarItem>\n          <Link color=\"foreground\" href=\"#\">\n            Features\n          </Link>\n        </NavbarItem>\n        <NavbarItem isActive>\n          <Link href=\"#\" aria-current=\"page\">\n            Customers\n          </Link>\n        </NavbarItem>\n        <NavbarItem>\n          <Link color=\"foreground\" href=\"#\">\n            Integrations\n          </Link>\n        </NavbarItem>\n      </NavbarContent>\n      <NavbarContent justify=\"end\">\n        <NavbarItem className=\"hidden lg:flex\">\n          <Link href=\"#\">Login</Link>\n        </NavbarItem>\n        <NavbarItem>\n          <Button as={Link} color=\"primary\" href=\"#\" variant=\"flat\">\n            Sign Up\n          </Button>\n        </NavbarItem>\n      </NavbarContent>\n    </Navbar>\n  );\n}`,Y={\"/App.jsx\":V,\"/AcmeLogo.jsx\":_},g={...Y};var $=`export const AcmeLogo = () => (\n  <svg fill=\"none\" height=\"36\" viewBox=\"0 0 32 32\" width=\"36\">\n    <path\n      clipRule=\"evenodd\"\n      d=\"M17.6482 10.1305L15.8785 7.02583L7.02979 22.5499H10.5278L17.6482 10.1305ZM19.8798 14.0457L18.11 17.1983L19.394 19.4511H16.8453L15.1056 22.5499H24.7272L19.8798 14.0457Z\"\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n    />\n  </svg>\n);`,q=`import {Navbar, NavbarBrand, NavbarContent, NavbarItem, Link, Button} from \"@nextui-org/react\";\nimport {AcmeLogo} from \"./AcmeLogo.jsx\";\n\nexport default function App() {\n  return (\n    <Navbar position=\"static\">\n      <NavbarBrand>\n        <AcmeLogo />\n        <p className=\"font-bold text-inherit\">ACME</p>\n      </NavbarBrand>\n      <NavbarContent className=\"hidden sm:flex gap-4\" justify=\"center\">\n        <NavbarItem>\n          <Link color=\"foreground\" href=\"#\">\n            Features\n          </Link>\n        </NavbarItem>\n        <NavbarItem isActive>\n          <Link href=\"#\" aria-current=\"page\">\n            Customers\n          </Link>\n        </NavbarItem>\n        <NavbarItem>\n          <Link color=\"foreground\" href=\"#\">\n            Integrations\n          </Link>\n        </NavbarItem>\n      </NavbarContent>\n      <NavbarContent justify=\"end\">\n        <NavbarItem className=\"hidden lg:flex\">\n          <Link href=\"#\">Login</Link>\n        </NavbarItem>\n        <NavbarItem>\n          <Button as={Link} color=\"primary\" href=\"#\" variant=\"flat\">\n            Sign Up\n          </Button>\n        </NavbarItem>\n      </NavbarContent>\n    </Navbar>\n  );\n}`,J={\"/App.jsx\":q,\"/AcmeLogo.jsx\":$},f={...J};var X=`export const AcmeLogo = () => (\n  <svg fill=\"none\" height=\"36\" viewBox=\"0 0 32 32\" width=\"36\">\n    <path\n      clipRule=\"evenodd\"\n      d=\"M17.6482 10.1305L15.8785 7.02583L7.02979 22.5499H10.5278L17.6482 10.1305ZM19.8798 14.0457L18.11 17.1983L19.394 19.4511H16.8453L15.1056 22.5499H24.7272L19.8798 14.0457Z\"\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n    />\n  </svg>\n);`,G=`import {Navbar, NavbarBrand, NavbarContent, NavbarItem, Link, Button} from \"@nextui-org/react\";\nimport {AcmeLogo} from \"./AcmeLogo.jsx\";\n\nexport default function App() {\n  return (\n    <Navbar shouldHideOnScroll>\n      <NavbarBrand>\n        <AcmeLogo />\n        <p className=\"font-bold text-inherit\">ACME</p>\n      </NavbarBrand>\n      <NavbarContent className=\"hidden sm:flex gap-4\" justify=\"center\">\n        <NavbarItem>\n          <Link color=\"foreground\" href=\"#\">\n            Features\n          </Link>\n        </NavbarItem>\n        <NavbarItem isActive>\n          <Link href=\"#\" aria-current=\"page\">\n            Customers\n          </Link>\n        </NavbarItem>\n        <NavbarItem>\n          <Link color=\"foreground\" href=\"#\">\n            Integrations\n          </Link>\n        </NavbarItem>\n      </NavbarContent>\n      <NavbarContent justify=\"end\">\n        <NavbarItem className=\"hidden lg:flex\">\n          <Link href=\"#\">Login</Link>\n        </NavbarItem>\n        <NavbarItem>\n          <Button as={Link} color=\"primary\" href=\"#\" variant=\"flat\">\n            Sign Up\n          </Button>\n        </NavbarItem>\n      </NavbarContent>\n    </Navbar>\n  );\n}`,K={\"/App.jsx\":G,\"/AcmeLogo.jsx\":X},N={...K};var Q=`export const AcmeLogo = () => (\n  <svg fill=\"none\" height=\"36\" viewBox=\"0 0 32 32\" width=\"36\">\n    <path\n      clipRule=\"evenodd\"\n      d=\"M17.6482 10.1305L15.8785 7.02583L7.02979 22.5499H10.5278L17.6482 10.1305ZM19.8798 14.0457L18.11 17.1983L19.394 19.4511H16.8453L15.1056 22.5499H24.7272L19.8798 14.0457Z\"\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n    />\n  </svg>\n);`,ee=`import {Navbar, NavbarBrand, NavbarContent, NavbarItem, NavbarMenuToggle, NavbarMenu, NavbarMenuItem, Link, Button} from \"@nextui-org/react\";\nimport {AcmeLogo} from \"./AcmeLogo.jsx\";\n\nexport default function App() {\n  const [isMenuOpen, setIsMenuOpen] = React.useState(false);\n\n  const menuItems = [\n    \"Profile\",\n    \"Dashboard\",\n    \"Activity\",\n    \"Analytics\",\n    \"System\",\n    \"Deployments\",\n    \"My Settings\",\n    \"Team Settings\",\n    \"Help & Feedback\",\n    \"Log Out\",\n  ];\n\n  return (\n    <Navbar onMenuOpenChange={setIsMenuOpen}>\n      <NavbarContent>\n        <NavbarMenuToggle\n          aria-label={isMenuOpen ? \"Close menu\" : \"Open menu\"}\n          className=\"sm:hidden\"\n        />\n        <NavbarBrand>\n          <AcmeLogo />\n          <p className=\"font-bold text-inherit\">ACME</p>\n        </NavbarBrand>\n      </NavbarContent>\n\n      <NavbarContent className=\"hidden sm:flex gap-4\" justify=\"center\">\n        <NavbarItem>\n          <Link color=\"foreground\" href=\"#\">\n            Features\n          </Link>\n        </NavbarItem>\n        <NavbarItem isActive>\n          <Link href=\"#\" aria-current=\"page\">\n            Customers\n          </Link>\n        </NavbarItem>\n        <NavbarItem>\n          <Link color=\"foreground\" href=\"#\">\n            Integrations\n          </Link>\n        </NavbarItem>\n      </NavbarContent>\n      <NavbarContent justify=\"end\">\n        <NavbarItem className=\"hidden lg:flex\">\n          <Link href=\"#\">Login</Link>\n        </NavbarItem>\n        <NavbarItem>\n          <Button as={Link} color=\"primary\" href=\"#\" variant=\"flat\">\n            Sign Up\n          </Button>\n        </NavbarItem>\n      </NavbarContent>\n      <NavbarMenu>\n        {menuItems.map((item, index) => (\n          <NavbarMenuItem key={\\`\\${item}-\\${index}\\`}>\n            <Link\n              color={\n                index === 2 ? \"primary\" : index === menuItems.length - 1 ? \"danger\" : \"foreground\"\n              }\n              className=\"w-full\"\n              href=\"#\"\n              size=\"lg\"\n            >\n              {item}\n            </Link>\n          </NavbarMenuItem>\n        ))}\n      </NavbarMenu>\n    </Navbar>\n  );\n}`,ne={\"/App.jsx\":ee,\"/AcmeLogo.jsx\":Q},L={...ne};var re=`export const AcmeLogo = () => (\n  <svg fill=\"none\" height=\"36\" viewBox=\"0 0 32 32\" width=\"36\">\n    <path\n      clipRule=\"evenodd\"\n      d=\"M17.6482 10.1305L15.8785 7.02583L7.02979 22.5499H10.5278L17.6482 10.1305ZM19.8798 14.0457L18.11 17.1983L19.394 19.4511H16.8453L15.1056 22.5499H24.7272L19.8798 14.0457Z\"\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n    />\n  </svg>\n);`,te=`import {Navbar, NavbarBrand, NavbarMenuToggle, NavbarMenuItem, NavbarMenu, NavbarContent, NavbarItem, Link, Button} from \"@nextui-org/react\";\nimport {AcmeLogo} from \"./AcmeLogo.jsx\";\n\nexport default function App() {\n  const [isMenuOpen, setIsMenuOpen] = React.useState(false);\n\n  const menuItems = [\n    \"Profile\",\n    \"Dashboard\",\n    \"Activity\",\n    \"Analytics\",\n    \"System\",\n    \"Deployments\",\n    \"My Settings\",\n    \"Team Settings\",\n    \"Help & Feedback\",\n    \"Log Out\",\n  ];\n\n  return (\n    <Navbar\n      isBordered\n      isMenuOpen={isMenuOpen}\n      onMenuOpenChange={setIsMenuOpen}\n    >\n      <NavbarContent className=\"sm:hidden\" justify=\"start\">\n        <NavbarMenuToggle aria-label={isMenuOpen ? \"Close menu\" : \"Open menu\"} />\n      </NavbarContent>\n\n      <NavbarContent className=\"sm:hidden pr-3\" justify=\"center\">\n        <NavbarBrand>\n          <AcmeLogo />\n          <p className=\"font-bold text-inherit\">ACME</p>\n        </NavbarBrand>\n      </NavbarContent>\n\n      <NavbarContent className=\"hidden sm:flex gap-4\" justify=\"center\">\n        <NavbarBrand>\n          <AcmeLogo />\n          <p className=\"font-bold text-inherit\">ACME</p>\n        </NavbarBrand>\n        <NavbarItem>\n          <Link color=\"foreground\" href=\"#\">\n            Features\n          </Link>\n        </NavbarItem>\n        <NavbarItem isActive>\n          <Link href=\"#\" aria-current=\"page\">\n            Customers\n          </Link>\n        </NavbarItem>\n        <NavbarItem>\n          <Link color=\"foreground\" href=\"#\">\n            Integrations\n          </Link>\n        </NavbarItem>\n      </NavbarContent>\n\n      <NavbarContent justify=\"end\">\n        <NavbarItem className=\"hidden lg:flex\">\n          <Link href=\"#\">Login</Link>\n        </NavbarItem>\n        <NavbarItem>\n          <Button as={Link} color=\"warning\" href=\"#\" variant=\"flat\">\n            Sign Up\n          </Button>\n        </NavbarItem>\n      </NavbarContent>\n\n      <NavbarMenu>\n        {menuItems.map((item, index) => (\n          <NavbarMenuItem key={\\`\\${item}-\\${index}\\`}>\n            <Link\n              className=\"w-full\"\n              color={\n                index === 2 ? \"warning\" : index === menuItems.length - 1 ? \"danger\" : \"foreground\"\n              }\n              href=\"#\"\n              size=\"lg\"\n            >\n              {item}\n            </Link>\n          </NavbarMenuItem>\n        ))}\n      </NavbarMenu>\n    </Navbar>\n  );\n}`,ae={\"/App.jsx\":te,\"/AcmeLogo.jsx\":re},I={...ae};var oe=`export const AcmeLogo = () => (\n  <svg fill=\"none\" height=\"36\" viewBox=\"0 0 32 32\" width=\"36\">\n    <path\n      clipRule=\"evenodd\"\n      d=\"M17.6482 10.1305L15.8785 7.02583L7.02979 22.5499H10.5278L17.6482 10.1305ZM19.8798 14.0457L18.11 17.1983L19.394 19.4511H16.8453L15.1056 22.5499H24.7272L19.8798 14.0457Z\"\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n    />\n  </svg>\n);`,ie=`import {Navbar, NavbarBrand, NavbarMenuToggle, NavbarMenu, NavbarMenuItem, NavbarContent, NavbarItem, Link, Button} from \"@nextui-org/react\";\nimport {AcmeLogo} from \"./AcmeLogo.jsx\";\n\nexport default function App() {\n  const menuItems = [\n    \"Profile\",\n    \"Dashboard\",\n    \"Activity\",\n    \"Analytics\",\n    \"System\",\n    \"Deployments\",\n    \"My Settings\",\n    \"Team Settings\",\n    \"Help & Feedback\",\n    \"Log Out\",\n  ];\n\n  return (\n    <Navbar disableAnimation isBordered>\n      <NavbarContent className=\"sm:hidden\" justify=\"start\">\n        <NavbarMenuToggle />\n      </NavbarContent>\n\n      <NavbarContent className=\"sm:hidden pr-3\" justify=\"center\">\n        <NavbarBrand>\n          <AcmeLogo />\n          <p className=\"font-bold text-inherit\">ACME</p>\n        </NavbarBrand>\n      </NavbarContent>\n\n      <NavbarContent className=\"hidden sm:flex gap-4\" justify=\"center\">\n        <NavbarBrand>\n          <AcmeLogo />\n          <p className=\"font-bold text-inherit\">ACME</p>\n        </NavbarBrand>\n        <NavbarItem>\n          <Link color=\"foreground\" href=\"#\">\n            Features\n          </Link>\n        </NavbarItem>\n        <NavbarItem isActive>\n          <Link href=\"#\" aria-current=\"page\" color=\"warning\">\n            Customers\n          </Link>\n        </NavbarItem>\n        <NavbarItem>\n          <Link color=\"foreground\" href=\"#\">\n            Integrations\n          </Link>\n        </NavbarItem>\n      </NavbarContent>\n\n      <NavbarContent justify=\"end\">\n        <NavbarItem className=\"hidden lg:flex\">\n          <Link href=\"#\">Login</Link>\n        </NavbarItem>\n        <NavbarItem>\n          <Button as={Link} color=\"warning\" href=\"#\" variant=\"flat\">\n            Sign Up\n          </Button>\n        </NavbarItem>\n      </NavbarContent>\n\n      <NavbarMenu>\n        {menuItems.map((item, index) => (\n          <NavbarMenuItem key={\\`\\${item}-\\${index}\\`}>\n            <Link\n              className=\"w-full\"\n              color={\n                index === 2 ? \"warning\" : index === menuItems.length - 1 ? \"danger\" : \"foreground\"\n              }\n              href=\"#\"\n              size=\"lg\"\n            >\n              {item}\n            </Link>\n          </NavbarMenuItem>\n        ))}\n      </NavbarMenu>\n    </Navbar>\n  );\n}`,de={\"/App.jsx\":ie,\"/AcmeLogo.jsx\":oe},w={...de};var le=`export const AcmeLogo = () => (\n  <svg fill=\"none\" height=\"36\" viewBox=\"0 0 32 32\" width=\"36\">\n    <path\n      clipRule=\"evenodd\"\n      d=\"M17.6482 10.1305L15.8785 7.02583L7.02979 22.5499H10.5278L17.6482 10.1305ZM19.8798 14.0457L18.11 17.1983L19.394 19.4511H16.8453L15.1056 22.5499H24.7272L19.8798 14.0457Z\"\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n    />\n  </svg>\n);`,ce=`import {Navbar, NavbarBrand, NavbarContent, NavbarItem, Link, DropdownItem, DropdownTrigger, Dropdown, DropdownMenu, Avatar} from \"@nextui-org/react\";\nimport {AcmeLogo} from \"./AcmeLogo.jsx\";\n\nexport default function App() {\n  return (\n    <Navbar>\n      <NavbarBrand>\n        <AcmeLogo />\n        <p className=\"font-bold text-inherit\">ACME</p>\n      </NavbarBrand>\n\n      <NavbarContent className=\"hidden sm:flex gap-4\" justify=\"center\">\n        <NavbarItem>\n          <Link color=\"foreground\" href=\"#\">\n            Features\n          </Link>\n        </NavbarItem>\n        <NavbarItem isActive>\n          <Link href=\"#\" aria-current=\"page\" color=\"secondary\">\n            Customers\n          </Link>\n        </NavbarItem>\n        <NavbarItem>\n          <Link color=\"foreground\" href=\"#\">\n            Integrations\n          </Link>\n        </NavbarItem>\n      </NavbarContent>\n\n      <NavbarContent as=\"div\" justify=\"end\">\n        <Dropdown placement=\"bottom-end\">\n          <DropdownTrigger>\n            <Avatar\n              isBordered\n              as=\"button\"\n              className=\"transition-transform\"\n              color=\"secondary\"\n              name=\"Jason Hughes\"\n              size=\"sm\"\n              src=\"https://i.pravatar.cc/150?u=a042581f4e29026704d\"\n            />\n          </DropdownTrigger>\n          <DropdownMenu aria-label=\"Profile Actions\" variant=\"flat\">\n            <DropdownItem key=\"profile\" className=\"h-14 gap-2\">\n              <p className=\"font-semibold\">Signed in as</p>\n              <p className=\"font-semibold\">zoey@example.com</p>\n            </DropdownItem>\n            <DropdownItem key=\"settings\">My Settings</DropdownItem>\n            <DropdownItem key=\"team_settings\">Team Settings</DropdownItem>\n            <DropdownItem key=\"analytics\">Analytics</DropdownItem>\n            <DropdownItem key=\"system\">System</DropdownItem>\n            <DropdownItem key=\"configurations\">Configurations</DropdownItem>\n            <DropdownItem key=\"help_and_feedback\">Help & Feedback</DropdownItem>\n            <DropdownItem key=\"logout\" color=\"danger\">\n              Log Out\n            </DropdownItem>\n          </DropdownMenu>\n        </Dropdown>\n      </NavbarContent>\n    </Navbar>\n  );\n}`,se={\"/App.jsx\":ce,\"/AcmeLogo.jsx\":le},x={...se};var he=`export const AcmeLogo = () => (\n  <svg fill=\"none\" height=\"36\" viewBox=\"0 0 32 32\" width=\"36\">\n    <path\n      clipRule=\"evenodd\"\n      d=\"M17.6482 10.1305L15.8785 7.02583L7.02979 22.5499H10.5278L17.6482 10.1305ZM19.8798 14.0457L18.11 17.1983L19.394 19.4511H16.8453L15.1056 22.5499H24.7272L19.8798 14.0457Z\"\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n    />\n  </svg>\n);`,me=`export const ChevronDown = ({fill, size, height, width, ...props}) => {\n  return (\n    <svg\n      fill=\"none\"\n      height={size || height || 24}\n      viewBox=\"0 0 24 24\"\n      width={size || width || 24}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path\n        d=\"m19.92 8.95-6.52 6.52c-.77.77-2.03.77-2.8 0L4.08 8.95\"\n        stroke={fill}\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeMiterlimit={10}\n        strokeWidth={1.5}\n      />\n    </svg>\n  );\n};\n\nexport const Lock = ({fill, size, height, width, ...props}) => {\n  const color = fill;\n\n  return (\n    <svg\n      height={size || height || 24}\n      viewBox=\"0 0 24 24\"\n      width={size || width || 24}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <g transform=\"translate(3.5 2)\">\n        <path\n          d=\"M9.121,6.653V4.5A4.561,4.561,0,0,0,0,4.484V6.653\"\n          fill=\"none\"\n          stroke={color}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit=\"10\"\n          strokeWidth={1.5}\n          transform=\"translate(3.85 0.75)\"\n        />\n        <path\n          d=\"M.5,0V2.221\"\n          fill=\"none\"\n          stroke={color}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit=\"10\"\n          strokeWidth={1.5}\n          transform=\"translate(7.91 12.156)\"\n        />\n        <path\n          d=\"M7.66,0C1.915,0,0,1.568,0,6.271s1.915,6.272,7.66,6.272,7.661-1.568,7.661-6.272S13.4,0,7.66,0Z\"\n          fill=\"none\"\n          stroke={color}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit=\"10\"\n          strokeWidth={1.5}\n          transform=\"translate(0.75 6.824)\"\n        />\n      </g>\n    </svg>\n  );\n};\n\nexport const Activity = ({fill, size, height, width, ...props}) => {\n  return (\n    <svg\n      height={size || height || 24}\n      viewBox=\"0 0 24 24\"\n      width={size || width || 24}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <g\n        fill=\"none\"\n        stroke={fill}\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeMiterlimit={10}\n        strokeWidth={1.5}\n      >\n        <path d=\"M6.918 14.854l2.993-3.889 3.414 2.68 2.929-3.78\" />\n        <path d=\"M19.668 2.35a1.922 1.922 0 11-1.922 1.922 1.921 1.921 0 011.922-1.922z\" />\n        <path d=\"M20.756 9.269a20.809 20.809 0 01.194 3.034c0 6.938-2.312 9.25-9.25 9.25s-9.25-2.312-9.25-9.25 2.313-9.25 9.25-9.25a20.931 20.931 0 012.983.187\" />\n      </g>\n    </svg>\n  );\n};\n\nexport const Flash = ({\n  fill = \"currentColor\",\n  size,\n  height,\n  width,\n  ...props\n}) => {\n  return (\n    <svg\n      fill=\"none\"\n      height={size || height}\n      viewBox=\"0 0 24 24\"\n      width={size || width}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path\n        d=\"M6.09 13.28h3.09v7.2c0 1.68.91 2.02 2.02.76l7.57-8.6c.93-1.05.54-1.92-.87-1.92h-3.09v-7.2c0-1.68-.91-2.02-2.02-.76l-7.57 8.6c-.92 1.06-.53 1.92.87 1.92Z\"\n        stroke={fill}\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeMiterlimit={10}\n        strokeWidth={1.5}\n      />\n    </svg>\n  );\n};\n\nexport const Server = ({\n  fill = \"currentColor\",\n  size,\n  height,\n  width,\n  ...props\n}) => {\n  return (\n    <svg\n      fill=\"none\"\n      height={size || height}\n      viewBox=\"0 0 24 24\"\n      width={size || width}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path\n        d=\"M19.32 10H4.69c-1.48 0-2.68-1.21-2.68-2.68V4.69c0-1.48 1.21-2.68 2.68-2.68h14.63C20.8 2.01 22 3.22 22 4.69v2.63C22 8.79 20.79 10 19.32 10ZM19.32 22H4.69c-1.48 0-2.68-1.21-2.68-2.68v-2.63c0-1.48 1.21-2.68 2.68-2.68h14.63c1.48 0 2.68 1.21 2.68 2.68v2.63c0 1.47-1.21 2.68-2.68 2.68ZM6 5v2M10 5v2M6 17v2M10 17v2M14 6h4M14 18h4\"\n        stroke={fill}\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeWidth={1.5}\n      />\n    </svg>\n  );\n};\n\nexport const TagUser = ({\n  fill = \"currentColor\",\n  size,\n  height,\n  width,\n  ...props\n}) => {\n  return (\n    <svg\n      fill=\"none\"\n      height={size || height}\n      viewBox=\"0 0 24 24\"\n      width={size || width}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path\n        d=\"M18 18.86h-.76c-.8 0-1.56.31-2.12.87l-1.71 1.69c-.78.77-2.05.77-2.83 0l-1.71-1.69c-.56-.56-1.33-.87-2.12-.87H6c-1.66 0-3-1.33-3-2.97V4.98c0-1.64 1.34-2.97 3-2.97h12c1.66 0 3 1.33 3 2.97v10.91c0 1.63-1.34 2.97-3 2.97Z\"\n        stroke={fill}\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeMiterlimit={10}\n        strokeWidth={1.5}\n      />\n      <path\n        d=\"M12 10a2.33 2.33 0 1 0 0-4.66A2.33 2.33 0 0 0 12 10ZM16 15.66c0-1.8-1.79-3.26-4-3.26s-4 1.46-4 3.26\"\n        stroke={fill}\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeWidth={1.5}\n      />\n    </svg>\n  );\n};\n\n\nexport const Scale = ({\n  fill = \"currentColor\",\n  size,\n  height,\n  width,\n  ...props\n}) => {\n  return (\n    <svg\n      fill=\"none\"\n      height={size || height}\n      viewBox=\"0 0 24 24\"\n      width={size || width}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path\n        d=\"M9 22h6c5 0 7-2 7-7V9c0-5-2-7-7-7H9C4 2 2 4 2 9v6c0 5 2 7 7 7ZM18 6 6 18\"\n        stroke={fill}\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeWidth={1.5}\n      />\n      <path\n        d=\"M18 10V6h-4M6 14v4h4\"\n        stroke={fill}\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeWidth={1.5}\n      />\n    </svg>\n  );\n};`,pe=`import {Navbar, NavbarBrand, NavbarContent, NavbarItem, Link, Button, DropdownItem, DropdownTrigger, Dropdown, DropdownMenu} from \"@nextui-org/react\";\nimport {ChevronDown, Lock, Activity, Flash, Server, TagUser, Scale} from \"./Icons.jsx\";\nimport {AcmeLogo} from \"./AcmeLogo.jsx\";\n\nexport default function App() {\n  const icons = {\n    chevron: <ChevronDown fill=\"currentColor\" size={16} />,\n    scale: <Scale className=\"text-warning\" fill=\"currentColor\" size={30} />,\n    lock: <Lock className=\"text-success\" fill=\"currentColor\" size={30} />,\n    activity: <Activity className=\"text-secondary\" fill=\"currentColor\" size={30} />,\n    flash: <Flash className=\"text-primary\" fill=\"currentColor\" size={30} />,\n    server: <Server className=\"text-success\" fill=\"currentColor\" size={30} />,\n    user: <TagUser className=\"text-danger\" fill=\"currentColor\" size={30} />,\n  };\n\n  return (\n    <Navbar>\n      <NavbarBrand>\n        <AcmeLogo />\n        <p className=\"font-bold text-inherit\">ACME</p>\n      </NavbarBrand>\n      <NavbarContent className=\"hidden sm:flex gap-4\" justify=\"center\">\n        <Dropdown>\n          <NavbarItem>\n            <DropdownTrigger>\n              <Button\n                disableRipple\n                className=\"p-0 bg-transparent data-[hover=true]:bg-transparent\"\n                endContent={icons.chevron}\n                radius=\"sm\"\n                variant=\"light\"\n              >\n                Features\n              </Button>\n            </DropdownTrigger>\n          </NavbarItem>\n          <DropdownMenu\n            aria-label=\"ACME features\"\n            className=\"w-[340px]\"\n            itemClasses={{\n              base: \"gap-4\",\n            }}\n          >\n            <DropdownItem\n              key=\"autoscaling\"\n              description=\"ACME scales apps to meet user demand, automagically, based on load.\"\n              startContent={icons.scale}\n            >\n              Autoscaling\n            </DropdownItem>\n            <DropdownItem\n              key=\"usage_metrics\"\n              description=\"Real-time metrics to debug issues. Slow query added? We\\u2019ll show you exactly where.\"\n              startContent={icons.activity}\n            >\n              Usage Metrics\n            </DropdownItem>\n            <DropdownItem\n              key=\"production_ready\"\n              description=\"ACME runs on ACME, join us and others serving requests at web scale.\"\n              startContent={icons.flash}\n            >\n              Production Ready\n            </DropdownItem>\n            <DropdownItem\n              key=\"99_uptime\"\n              description=\"Applications stay on the grid with high availability and high uptime guarantees.\"\n              startContent={icons.server}\n            >\n              +99% Uptime\n            </DropdownItem>\n            <DropdownItem\n              key=\"supreme_support\"\n              description=\"Overcome any challenge with a supporting team ready to respond.\"\n              startContent={icons.user}\n            >\n              +Supreme Support\n            </DropdownItem>\n          </DropdownMenu>\n        </Dropdown>\n        <NavbarItem isActive>\n          <Link href=\"#\" aria-current=\"page\">\n            Customers\n          </Link>\n        </NavbarItem>\n        <NavbarItem>\n          <Link color=\"foreground\" href=\"#\">\n            Integrations\n          </Link>\n        </NavbarItem>\n      </NavbarContent>\n      <NavbarContent justify=\"end\">\n        <NavbarItem className=\"hidden lg:flex\">\n          <Link href=\"#\">Login</Link>\n        </NavbarItem>\n        <NavbarItem>\n          <Button as={Link} color=\"primary\" href=\"#\" variant=\"flat\">\n            Sign Up\n          </Button>\n        </NavbarItem>\n      </NavbarContent>\n    </Navbar>\n  );\n}`,ue={\"/App.jsx\":pe,\"/AcmeLogo.jsx\":he,\"/Icons.jsx\":me},k={...ue};var ve=`export const SearchIcon = ({\n  size = 24,\n  strokeWidth = 1.5,\n  width,\n  height,\n  ...props\n}) => (\n  <svg\n    aria-hidden=\"true\"\n    fill=\"none\"\n    focusable=\"false\"\n    height={height || size}\n    role=\"presentation\"\n    viewBox=\"0 0 24 24\"\n    width={width || size}\n    {...props}\n  >\n    <path\n      d=\"M11.5 21C16.7467 21 21 16.7467 21 11.5C21 6.25329 16.7467 2 11.5 2C6.25329 2 2 6.25329 2 11.5C2 16.7467 6.25329 21 11.5 21Z\"\n      stroke=\"currentColor\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={strokeWidth}\n    />\n    <path\n      d=\"M22 22L20 20\"\n      stroke=\"currentColor\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={strokeWidth}\n    />\n  </svg>\n);\n`,be=`export const AcmeLogo = () => (\n  <svg fill=\"none\" height=\"36\" viewBox=\"0 0 32 32\" width=\"36\">\n    <path\n      clipRule=\"evenodd\"\n      d=\"M17.6482 10.1305L15.8785 7.02583L7.02979 22.5499H10.5278L17.6482 10.1305ZM19.8798 14.0457L18.11 17.1983L19.394 19.4511H16.8453L15.1056 22.5499H24.7272L19.8798 14.0457Z\"\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n    />\n  </svg>\n);`,ge=`import {Navbar, NavbarBrand, NavbarContent, NavbarItem, Link, Input, DropdownItem, DropdownTrigger, Dropdown, DropdownMenu, Avatar} from \"@nextui-org/react\";\nimport {AcmeLogo} from \"./AcmeLogo.jsx\";\nimport {SearchIcon} from \"./SearchIcon.jsx\";\n\nexport default function App() {\n  return (\n    <Navbar isBordered>\n      <NavbarContent justify=\"start\">\n        <NavbarBrand className=\"mr-4\">\n          <AcmeLogo />\n          <p className=\"hidden sm:block font-bold text-inherit\">ACME</p>\n        </NavbarBrand>\n        <NavbarContent className=\"hidden sm:flex gap-3\">\n          <NavbarItem>\n            <Link color=\"foreground\" href=\"#\">\n              Features\n            </Link>\n          </NavbarItem>\n          <NavbarItem isActive>\n            <Link href=\"#\" aria-current=\"page\" color=\"secondary\">\n              Customers\n            </Link>\n          </NavbarItem>\n          <NavbarItem>\n            <Link color=\"foreground\" href=\"#\">\n              Integrations\n            </Link>\n          </NavbarItem>\n        </NavbarContent>\n      </NavbarContent>\n\n      <NavbarContent as=\"div\" className=\"items-center\" justify=\"end\">\n        <Input\n          classNames={{\n            base: \"max-w-full sm:max-w-[10rem] h-10\",\n            mainWrapper: \"h-full\",\n            input: \"text-small\",\n            inputWrapper: \"h-full font-normal text-default-500 bg-default-400/20 dark:bg-default-500/20\",\n          }}\n          placeholder=\"Type to search...\"\n          size=\"sm\"\n          startContent={<SearchIcon size={18} />}\n          type=\"search\"\n        />\n        <Dropdown placement=\"bottom-end\">\n          <DropdownTrigger>\n            <Avatar\n              isBordered\n              as=\"button\"\n              className=\"transition-transform\"\n              color=\"secondary\"\n              name=\"Jason Hughes\"\n              size=\"sm\"\n              src=\"https://i.pravatar.cc/150?u=a042581f4e29026704d\"\n            />\n          </DropdownTrigger>\n          <DropdownMenu aria-label=\"Profile Actions\" variant=\"flat\">\n            <DropdownItem key=\"profile\" className=\"h-14 gap-2\">\n              <p className=\"font-semibold\">Signed in as</p>\n              <p className=\"font-semibold\">zoey@example.com</p>\n            </DropdownItem>\n            <DropdownItem key=\"settings\">My Settings</DropdownItem>\n            <DropdownItem key=\"team_settings\">Team Settings</DropdownItem>\n            <DropdownItem key=\"analytics\">Analytics</DropdownItem>\n            <DropdownItem key=\"system\">System</DropdownItem>\n            <DropdownItem key=\"configurations\">Configurations</DropdownItem>\n            <DropdownItem key=\"help_and_feedback\">Help & Feedback</DropdownItem>\n            <DropdownItem key=\"logout\" color=\"danger\">\n              Log Out\n            </DropdownItem>\n          </DropdownMenu>\n        </Dropdown>\n      </NavbarContent>\n    </Navbar>\n  );\n}`,fe={\"/App.jsx\":ge,\"/AcmeLogo.jsx\":be,\"/SearchIcon.jsx\":ve},A={...fe};var Ne=`export const AcmeLogo = () => (\n  <svg fill=\"none\" height=\"36\" viewBox=\"0 0 32 32\" width=\"36\">\n    <path\n      clipRule=\"evenodd\"\n      d=\"M17.6482 10.1305L15.8785 7.02583L7.02979 22.5499H10.5278L17.6482 10.1305ZM19.8798 14.0457L18.11 17.1983L19.394 19.4511H16.8453L15.1056 22.5499H24.7272L19.8798 14.0457Z\"\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n    />\n  </svg>\n);`,Le=`import {Navbar, NavbarBrand, NavbarContent, NavbarItem, Link, Button} from \"@nextui-org/react\";\nimport {AcmeLogo} from \"./AcmeLogo.jsx\";\n\nexport default function App() {\n  return (\n    <Navbar\n      classNames={{\n        item: [\n          \"flex\",\n          \"relative\",\n          \"h-full\",\n          \"items-center\",\n          \"data-[active=true]:after:content-['']\",\n          \"data-[active=true]:after:absolute\",\n          \"data-[active=true]:after:bottom-0\",\n          \"data-[active=true]:after:left-0\",\n          \"data-[active=true]:after:right-0\",\n          \"data-[active=true]:after:h-[2px]\",\n          \"data-[active=true]:after:rounded-[2px]\",\n          \"data-[active=true]:after:bg-primary\",\n        ],\n      }}\n    >\n      <NavbarBrand>\n        <AcmeLogo />\n        <p className=\"font-bold text-inherit\">ACME</p>\n      </NavbarBrand>\n      <NavbarContent className=\"hidden sm:flex gap-4\" justify=\"center\">\n        <NavbarItem>\n          <Link color=\"foreground\" href=\"#\">\n            Features\n          </Link>\n        </NavbarItem>\n        <NavbarItem isActive>\n          <Link href=\"#\" aria-current=\"page\">\n            Customers\n          </Link>\n        </NavbarItem>\n        <NavbarItem>\n          <Link color=\"foreground\" href=\"#\">\n            Integrations\n          </Link>\n        </NavbarItem>\n      </NavbarContent>\n      <NavbarContent justify=\"end\">\n        <NavbarItem className=\"hidden lg:flex\">\n          <Link href=\"#\">Login</Link>\n        </NavbarItem>\n        <NavbarItem>\n          <Button as={Link} color=\"primary\" href=\"#\" variant=\"flat\">\n            Sign Up\n          </Button>\n        </NavbarItem>\n      </NavbarContent>\n    </Navbar>\n  );\n}`,Ie={\"/App.jsx\":Le,\"/AcmeLogo.jsx\":Ne},M={...Ie};var a={usage:v,bordered:b,staticPosition:f,hideOnScroll:N,disabledBlur:g,withMenu:L,controlledMenu:I,disableMenuAnimation:w,withAvatar:x,withDropdownMenu:k,withSearchInput:A,customActiveItem:M};var we={title:\"Navbar\",description:\"A responsive navigation header positioned on top side of your page that includes support for branding, links, navigation, collapse and more.\"};function C(r){let n={a:\"a\",blockquote:\"blockquote\",code:\"code\",h1:\"h1\",h2:\"h2\",h3:\"h3\",h4:\"h4\",hr:\"hr\",li:\"li\",p:\"p\",pre:\"pre\",strong:\"strong\",table:\"table\",tbody:\"tbody\",td:\"td\",th:\"th\",thead:\"thead\",tr:\"tr\",ul:\"ul\",...r.components},{CarbonAd:o,CodeDemo:t,ComponentLinks:i,ImportTabs:c,PackageManagers:s,Spacer:h}=n;return o||d(\"CarbonAd\",!0),t||d(\"CodeDemo\",!0),i||d(\"ComponentLinks\",!0),c||d(\"ImportTabs\",!0),s||d(\"PackageManagers\",!0),h||d(\"Spacer\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(n.h1,{id:\"navbar\",children:\"Navbar\"}),`\n`,(0,e.jsx)(n.p,{children:\"A responsive navigation header positioned on top side of your page that includes support for branding, links, navigation, collapse menu and more.\"}),`\n`,(0,e.jsx)(i,{component:\"navbar\"}),`\n`,(0,e.jsx)(n.hr,{}),`\n`,(0,e.jsx)(o,{}),`\n`,(0,e.jsx)(n.h2,{id:\"installation\",children:\"Installation\"}),`\n`,(0,e.jsx)(s,{showGlobalInstallWarning:!0,commands:{cli:\"npx nextui-cli@latest add navbar\",npm:\"npm install @nextui-org/navbar\",yarn:\"yarn add @nextui-org/navbar\",pnpm:\"pnpm add @nextui-org/navbar\",bun:\"bun add @nextui-org/navbar\"}}),`\n`,(0,e.jsx)(n.h2,{id:\"import\",children:\"Import\"}),`\n`,(0,e.jsx)(n.p,{children:\"NextUI exports 7 navbar-related components:\"}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Navbar\"}),\": The main component of navbar.\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"NavbarBrand\"}),\": The component for branding.\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"NavbarContent\"}),\": The component for wrapping navbar items.\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"NavbarItem\"}),\": The component for navbar item.\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"NavbarMenuToggle\"}),\": The component for toggling navbar menu.\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"NavbarMenu\"}),\": The component for wrapping navbar menu items.\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"NavbarMenuItem\"}),\": The component for navbar menu item.\"]}),`\n`]}),`\n`,(0,e.jsx)(c,{commands:{main:`import {\nNavbar, \nNavbarBrand, \nNavbarContent, \nNavbarItem, \nNavbarMenuToggle,\nNavbarMenu,\nNavbarMenuItem\n} from \"@nextui-org/react\";`,individual:`import {\nNavbar, \nNavbarBrand, \nNavbarContent, \nNavbarItem, \nNavbarMenuToggle,\nNavbarMenu,\nNavbarMenuItem\n} from \"@nextui-org/navbar\";`}}),`\n`,(0,e.jsx)(n.h2,{id:\"usage\",children:\"Usage\"}),`\n`,(0,e.jsx)(t,{asIframe:!0,title:\"Usage\",previewHeight:\"500px\",iframeSrc:\"/examples/navbar/usage\",files:a.usage}),`\n`,(0,e.jsx)(n.h3,{id:\"static\",children:\"Static\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"You can use the \",(0,e.jsx)(n.code,{children:\"position\"}),\" prop to make the navbar static positioned (the default behavior is \",(0,e.jsx)(n.code,{children:\"sticky\"}),\").\"]}),`\n`,(0,e.jsx)(t,{asIframe:!0,title:\"Static\",previewHeight:\"500px\",iframeSrc:\"/examples/navbar/static\",files:a.staticPosition}),`\n`,(0,e.jsx)(n.h3,{id:\"hide-on-scroll\",children:\"Hide on scroll\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"It is possible to hide the navbar on scroll by using the \",(0,e.jsx)(n.code,{children:\"shouldHideOnScroll\"}),\" prop.\"]}),`\n`,(0,e.jsx)(t,{asIframe:!0,title:\"Hide on scroll\",previewHeight:\"500px\",iframeSrc:\"/examples/navbar/hide-on-scroll\",files:a.hideOnScroll}),`\n`,(0,e.jsx)(n.h3,{id:\"with-menu\",children:\"With Menu\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"You can use the \",(0,e.jsx)(n.code,{children:\"NavbarMenuToggle\"}),\" and \",(0,e.jsx)(n.code,{children:\"NavbarMenu\"}),\" components to display a togglable menu.\"]}),`\n`,(0,e.jsx)(t,{asIframe:!0,title:\"With Menu\",iframeInitialWidth:420,previewHeight:\"600px\",iframeSrc:\"/examples/navbar/with-menu\",files:a.withMenu}),`\n`,(0,e.jsxs)(n.p,{children:[\"If you want to remove the \",(0,e.jsx)(n.code,{children:\"open\"}),\" / \",(0,e.jsx)(n.code,{children:\"close\"}),\" animation, you can pass the \",(0,e.jsx)(n.code,{children:\"disableAnimation={true}\"}),\" prop to \",(0,e.jsx)(n.code,{children:\"Navbar\"}),\" component.\"]}),`\n`,(0,e.jsx)(t,{asIframe:!0,title:\"With Menu\",iframeInitialWidth:420,highlightedLines:\"24\",previewHeight:\"600px\",iframeSrc:\"/examples/navbar/disable-menu-animation\",files:a.disableMenuAnimation}),`\n`,(0,e.jsx)(n.h3,{id:\"controlled-menu\",children:\"Controlled Menu\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"You can use the \",(0,e.jsx)(n.code,{children:\"isMenuOpen\"}),\" and \",(0,e.jsx)(n.code,{children:\"onMenuOpenChange\"}),\" props to control the navbar menu state.\"]}),`\n`,(0,e.jsx)(t,{asIframe:!0,title:\"Controlled Menu\",iframeInitialWidth:420,previewHeight:\"600px\",highlightedLines:\"5,23-24\",iframeSrc:\"/examples/navbar/controlled-menu\",files:a.controlledMenu}),`\n`,(0,e.jsx)(n.h3,{id:\"with-border\",children:\"With Border\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"You can use the \",(0,e.jsx)(n.code,{children:\"isBordered\"}),\" prop to add a bottom border to the navbar.\"]}),`\n`,(0,e.jsx)(t,{asIframe:!0,title:\"Adding a bottom border\",previewHeight:\"500px\",iframeSrc:\"/examples/navbar/bordered\",files:a.bordered}),`\n`,(0,e.jsx)(n.h3,{id:\"disabling-blur\",children:\"Disabling Blur\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"Navbar has a blur effect by default. You can disable it by using the \",(0,e.jsx)(n.code,{children:\"isBlurred=false\"}),\" prop.\"]}),`\n`,(0,e.jsx)(t,{asIframe:!0,title:\"Disabling blur\",previewHeight:\"500px\",iframeSrc:\"/examples/navbar/disabled-blur\",files:a.disabledBlur}),`\n`,(0,e.jsx)(n.h3,{id:\"with-dropdown-menu\",children:\"With Dropdown Menu\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"It is possible to use the \",(0,e.jsx)(n.a,{href:\"/docs/components/dropdown\",children:\"Dropdown\"}),\" component to display a dropdown menu as navbar item.\"]}),`\n`,(0,e.jsx)(t,{asIframe:!0,title:\"With Dropdown Menu\",previewHeight:\"600px\",iframeSrc:\"/examples/navbar/with-dropdown-menu\",files:a.withDropdownMenu}),`\n`,(0,e.jsx)(n.h3,{id:\"with-avatar\",children:\"With Avatar\"}),`\n`,(0,e.jsx)(n.p,{children:\"Example of a navbar with avatar and dropdown menu.\"}),`\n`,(0,e.jsx)(t,{asIframe:!0,title:\"With Avatar\",previewHeight:\"420px\",iframeSrc:\"/examples/navbar/with-avatar\",files:a.withAvatar}),`\n`,(0,e.jsx)(n.h3,{id:\"with-search-input\",children:\"With Search Input\"}),`\n`,(0,e.jsx)(n.p,{children:\"Example of a navbar with search input.\"}),`\n`,(0,e.jsx)(t,{asIframe:!0,title:\"With Search Input\",previewHeight:\"420px\",iframeSrc:\"/examples/navbar/with-search-input\",files:a.withSearchInput}),`\n`,(0,e.jsx)(n.h3,{id:\"customizing-the-active-item\",children:\"Customizing the active item\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"When the \",(0,e.jsx)(n.code,{children:\"NavbarItem\"}),\" is active, it will have a \",(0,e.jsx)(n.code,{children:\"data-active\"}),\" attribute. You can use this attribute to customize it.\"]}),`\n`,(0,e.jsx)(t,{asIframe:!0,title:\"Customizing the active item\",previewHeight:\"420px\",iframeSrc:\"/examples/navbar/custom-active-item\",highlightedLines:\"9-20\",files:a.customActiveItem}),`\n`,(0,e.jsx)(n.h2,{id:\"slots\",children:\"Slots\"}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"base\"}),\": The main slot for the navbar. It takes the full width of the parent and wraps the navbar elements including the menu.\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"wrapper\"}),\": The slot that contains the navbar elements such as \",(0,e.jsx)(n.code,{children:\"brand\"}),\", \",(0,e.jsx)(n.code,{children:\"content\"}),\" and \",(0,e.jsx)(n.code,{children:\"toggle\"}),\".\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"brand\"}),\": The slot for the \",(0,e.jsx)(n.code,{children:\"NavbarBrand\"}),\" component.\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"content\"}),\": The slot for the \",(0,e.jsx)(n.code,{children:\"NavbarContent\"}),\" component.\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"item\"}),\": The slot for the \",(0,e.jsx)(n.code,{children:\"NavbarItem\"}),\" component.\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"toggle\"}),\": The slot for the \",(0,e.jsx)(n.code,{children:\"NavbarMenuToggle\"}),\" component.\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"toggleIcon\"}),\": The slot for the \",(0,e.jsx)(n.code,{children:\"NavbarMenuToggle\"}),\" icon.\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"menu\"}),\": The slot for the \",(0,e.jsx)(n.code,{children:\"NavbarMenu\"}),\" component.\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"menuItem\"}),\": The slot for the \",(0,e.jsx)(n.code,{children:\"NavbarMenuItem\"}),\" component.\"]}),`\n`]}),`\n`,(0,e.jsx)(n.h2,{id:\"data-attributes\",children:\"Data Attributes\"}),`\n`,(0,e.jsxs)(n.p,{children:[(0,e.jsx)(n.code,{children:\"Navbar\"}),\" has the following attributes on the \",(0,e.jsx)(n.code,{children:\"base\"}),\" element:\"]}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"data-menu-open\"}),`:\nIndicates if the navbar menu is open.`]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"data-hidden\"}),`:\nIndicates if the navbar is hidden. It is used when the `,(0,e.jsx)(n.code,{children:\"shouldHideOnScroll\"}),\" prop is \",(0,e.jsx)(n.code,{children:\"true\"}),\".\"]}),`\n`]}),`\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.code,{children:\"NavbarContent\"})}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"data-justify\"}),`:\nThe justify content of the navbar content. It takes into account the correct space distribution.`]}),`\n`]}),`\n`,(0,e.jsxs)(n.p,{children:[(0,e.jsx)(n.code,{children:\"NavbarItem\"}),\" has the following attributes on the \",(0,e.jsx)(n.code,{children:\"base\"}),\" element:\"]}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"data-active\"}),`:\nIndicates if the navbar item is active. It is used when the `,(0,e.jsx)(n.code,{children:\"isActive\"}),\" prop is \",(0,e.jsx)(n.code,{children:\"true\"}),\".\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.p,{children:[(0,e.jsx)(n.code,{children:\"NavbarMenuToggle\"}),\" has the following attributes on the \",(0,e.jsx)(n.code,{children:\"base\"}),\" element:\"]}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"data-open\"}),`:\nIndicates if the navbar menu is open. It is used when the `,(0,e.jsx)(n.code,{children:\"isMenuOpen\"}),\" prop is \",(0,e.jsx)(n.code,{children:\"true\"}),\".\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"data-pressed\"}),`:\nWhen the navbar menu toggle is pressed. Based on `,(0,e.jsx)(n.a,{href:\"https://react-spectrum.adobe.com/react-aria/usePress.html\",children:\"usePress\"})]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"data-hover\"}),`:\nWhen the navbar menu toggle is being hovered. Based on `,(0,e.jsx)(n.a,{href:\"https://react-spectrum.adobe.com/react-aria/useHover.html\",children:\"useHover\"})]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"data-focus-visible\"}),`:\nWhen the navbar menu toggle is being focused with the keyboard. Based on `,(0,e.jsx)(n.a,{href:\"https://react-spectrum.adobe.com/react-aria/useFocusRing.html\",children:\"useFocusRing\"}),\".\"]}),`\n`]}),`\n`,(0,e.jsxs)(n.p,{children:[(0,e.jsx)(n.code,{children:\"NavbarMenuItem\"}),\" has the following attributes on the \",(0,e.jsx)(n.code,{children:\"base\"}),\" element:\"]}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"data-active\"}),`:\nIndicates if the menu item is active. It is used when the `,(0,e.jsx)(n.code,{children:\"isActive\"}),\" prop is \",(0,e.jsx)(n.code,{children:\"true\"}),\".\"]}),`\n`]}),`\n`,(0,e.jsx)(h,{y:4}),`\n`,(0,e.jsx)(n.h2,{id:\"api\",children:\"API\"}),`\n`,(0,e.jsx)(n.h3,{id:\"navbar-props\",children:\"Navbar Props\"}),`\n`,(0,e.jsxs)(n.table,{children:[(0,e.jsx)(n.thead,{children:(0,e.jsxs)(n.tr,{children:[(0,e.jsx)(n.th,{children:\"Attribute\"}),(0,e.jsx)(n.th,{children:\"Type\"}),(0,e.jsx)(n.th,{children:\"Description\"}),(0,e.jsx)(n.th,{children:\"Default\"})]})}),(0,e.jsxs)(n.tbody,{children:[(0,e.jsxs)(n.tr,{children:[(0,e.jsx)(n.td,{children:\"children*\"}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"ReactNode[]\"})}),(0,e.jsxs)(n.td,{children:[\"The children to render. Usually navbar elements such as \",(0,e.jsx)(n.code,{children:\"NavbarBrand\"}),\", \",(0,e.jsx)(n.code,{children:\"NavbarContent\"}),\" and \",(0,e.jsx)(n.code,{children:\"NavbarItem\"})]}),(0,e.jsx)(n.td,{children:\"-\"})]}),(0,e.jsxs)(n.tr,{children:[(0,e.jsx)(n.td,{children:\"height\"}),(0,e.jsxs)(n.td,{children:[(0,e.jsx)(n.code,{children:\"string\"}),\" | \",(0,e.jsx)(n.code,{children:\"number\"})]}),(0,e.jsx)(n.td,{children:\"The height of the navbar.\"}),(0,e.jsxs)(n.td,{children:[(0,e.jsx)(n.code,{children:\"4rem\"}),\" (64px)\"]})]}),(0,e.jsxs)(n.tr,{children:[(0,e.jsx)(n.td,{children:\"position\"}),(0,e.jsxs)(n.td,{children:[(0,e.jsx)(n.code,{children:\"static\"}),\" | \",(0,e.jsx)(n.code,{children:\"sticky\"})]}),(0,e.jsx)(n.td,{children:\"The position of the navbar.\"}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"sticky\"})})]}),(0,e.jsxs)(n.tr,{children:[(0,e.jsx)(n.td,{children:\"maxWidth\"}),(0,e.jsxs)(n.td,{children:[(0,e.jsx)(n.code,{children:\"sm\"}),\" | \",(0,e.jsx)(n.code,{children:\"md\"}),\" | \",(0,e.jsx)(n.code,{children:\"lg\"}),\" | \",(0,e.jsx)(n.code,{children:\"xl\"}),\" | \",(0,e.jsx)(n.code,{children:\"2xl\"}),\" | \",(0,e.jsx)(n.code,{children:\"full\"})]}),(0,e.jsx)(n.td,{children:\"The max width of the navbar wrapper.\"}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"lg\"})})]}),(0,e.jsxs)(n.tr,{children:[(0,e.jsx)(n.td,{children:\"parentRef\"}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"React.RefObject<HTMLElement>\"})}),(0,e.jsx)(n.td,{children:\"The parent element where the navbar is placed within. This is used to determine the scroll position and whether the navbar should be hidden or not.\"}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"window\"})})]}),(0,e.jsxs)(n.tr,{children:[(0,e.jsx)(n.td,{children:\"isBordered\"}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"boolean\"})}),(0,e.jsx)(n.td,{children:\"Whether the navbar should have a bottom border or not.\"}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"false\"})})]}),(0,e.jsxs)(n.tr,{children:[(0,e.jsx)(n.td,{children:\"isBlurred\"}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"boolean\"})}),(0,e.jsx)(n.td,{children:\"Whether the navbar should have a blur effect or not.\"}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"true\"})})]}),(0,e.jsxs)(n.tr,{children:[(0,e.jsx)(n.td,{children:\"isMenuOpen\"}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"boolean\"})}),(0,e.jsx)(n.td,{children:\"Indicates if the navbar menu is open. (controlled)\"}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"false\"})})]}),(0,e.jsxs)(n.tr,{children:[(0,e.jsx)(n.td,{children:\"isMenuDefaultOpen\"}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"boolean\"})}),(0,e.jsx)(n.td,{children:\"Indicates if the navbar menu is open by default. (uncontrolled)\"}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"false\"})})]}),(0,e.jsxs)(n.tr,{children:[(0,e.jsx)(n.td,{children:\"shouldHideOnScroll\"}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"boolean\"})}),(0,e.jsx)(n.td,{children:\"Indicates if the navbar should hide on scroll.\"}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"false\"})})]}),(0,e.jsxs)(n.tr,{children:[(0,e.jsx)(n.td,{children:\"motionProps\"}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.a,{href:\"#motion-props\",children:\"MotionProps\"})}),(0,e.jsxs)(n.td,{children:[\"The motion props to control the \",(0,e.jsx)(n.code,{children:\"visible\"}),\" / \",(0,e.jsx)(n.code,{children:\"hidden\"}),\" animation. This motion is only available if the \",(0,e.jsx)(n.code,{children:\"shouldHideOnScroll\"}),\" prop is set to \",(0,e.jsx)(n.code,{children:\"true\"}),\".\"]}),(0,e.jsx)(n.td,{children:\"-\"})]}),(0,e.jsxs)(n.tr,{children:[(0,e.jsx)(n.td,{children:\"disableScrollHandler\"}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"boolean\"})}),(0,e.jsx)(n.td,{children:\"Whether the navbar parent scroll event should be listened to or not.\"}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"false\"})})]}),(0,e.jsxs)(n.tr,{children:[(0,e.jsx)(n.td,{children:\"disableAnimation\"}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"boolean\"})}),(0,e.jsx)(n.td,{children:\"Whether the navbar menu animation should be disabled or not.\"}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"false\"})})]}),(0,e.jsxs)(n.tr,{children:[(0,e.jsx)(n.td,{children:\"classNames\"}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:'Record<\"base\"\\uFF5C \"wrapper\"\\uFF5C \"brand\"\\uFF5C \"content\"\\uFF5C \"item\"\\uFF5C \"toggle\"\\uFF5C \"toggleIcon\"\\uFF5C \"menu\"\\uFF5C \"menuItem\", string>'})}),(0,e.jsx)(n.td,{children:\"Allows to set custom class names for the navbar slots.\"}),(0,e.jsx)(n.td,{children:\"-\"})]})]})]}),`\n`,(0,e.jsx)(n.h3,{id:\"navbar-events\",children:\"Navbar Events\"}),`\n`,(0,e.jsxs)(n.table,{children:[(0,e.jsx)(n.thead,{children:(0,e.jsxs)(n.tr,{children:[(0,e.jsx)(n.th,{children:\"Attribute\"}),(0,e.jsx)(n.th,{children:\"Type\"}),(0,e.jsx)(n.th,{children:\"Description\"})]})}),(0,e.jsxs)(n.tbody,{children:[(0,e.jsxs)(n.tr,{children:[(0,e.jsx)(n.td,{children:\"onMenuOpenChange\"}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"(isOpen: boolean) => void\"})}),(0,e.jsx)(n.td,{children:\"Handler that is called when the navbar menu open state changes.\"})]}),(0,e.jsxs)(n.tr,{children:[(0,e.jsx)(n.td,{children:\"onScrollPositionChange\"}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"(position: number) => void\"})}),(0,e.jsxs)(n.td,{children:[\"Handler that is called when the navbar parent element is scrolled. This event is only dispatched if \",(0,e.jsx)(n.code,{children:\"disableScrollHandler\"}),\" is set to \",(0,e.jsx)(n.code,{children:\"false\"}),\" or \",(0,e.jsx)(n.code,{children:\"shouldHideOnScroll\"}),\" is set to \",(0,e.jsx)(n.code,{children:\"true\"}),\".\"]})]})]})]}),`\n`,(0,e.jsx)(n.h3,{id:\"navbarcontent-props\",children:\"NavbarContent Props\"}),`\n`,(0,e.jsxs)(n.table,{children:[(0,e.jsx)(n.thead,{children:(0,e.jsxs)(n.tr,{children:[(0,e.jsx)(n.th,{children:\"Attribute\"}),(0,e.jsx)(n.th,{children:\"Type\"}),(0,e.jsx)(n.th,{children:\"Description\"}),(0,e.jsx)(n.th,{children:\"Default\"})]})}),(0,e.jsxs)(n.tbody,{children:[(0,e.jsxs)(n.tr,{children:[(0,e.jsx)(n.td,{children:\"children*\"}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"ReactNode[]\"})}),(0,e.jsxs)(n.td,{children:[\"The children to render. Usually navbar elements such as \",(0,e.jsx)(n.code,{children:\"NavbarBrand\"}),\", \",(0,e.jsx)(n.code,{children:\"NavbarContent\"}),\" and \",(0,e.jsx)(n.code,{children:\"NavbarItem\"})]}),(0,e.jsx)(n.td,{children:\"-\"})]}),(0,e.jsxs)(n.tr,{children:[(0,e.jsx)(n.td,{children:\"justify\"}),(0,e.jsxs)(n.td,{children:[(0,e.jsx)(n.code,{children:\"start\"}),\" | \",(0,e.jsx)(n.code,{children:\"center\"}),\" | \",(0,e.jsx)(n.code,{children:\"end\"})]}),(0,e.jsx)(n.td,{children:\"The justify content of the navbar content. It takes into account the correct space distribution.\"}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"start\"})})]})]})]}),`\n`,(0,e.jsx)(n.h3,{id:\"navbaritem-props\",children:\"NavbarItem Props\"}),`\n`,(0,e.jsxs)(n.table,{children:[(0,e.jsx)(n.thead,{children:(0,e.jsxs)(n.tr,{children:[(0,e.jsx)(n.th,{children:\"Attribute\"}),(0,e.jsx)(n.th,{children:\"Type\"}),(0,e.jsx)(n.th,{children:\"Description\"}),(0,e.jsx)(n.th,{children:\"Default\"})]})}),(0,e.jsxs)(n.tbody,{children:[(0,e.jsxs)(n.tr,{children:[(0,e.jsx)(n.td,{children:\"children\"}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"ReactNode\"})}),(0,e.jsx)(n.td,{children:\"The children to render as the navbar item.\"}),(0,e.jsx)(n.td,{children:\"-\"})]}),(0,e.jsxs)(n.tr,{children:[(0,e.jsx)(n.td,{children:\"isActive\"}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"boolean\"})}),(0,e.jsx)(n.td,{children:\"Whether the navbar item is active or not.\"}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"false\"})})]})]})]}),`\n`,(0,e.jsx)(n.h3,{id:\"navbarmenutoggle-props\",children:\"NavbarMenuToggle Props\"}),`\n`,(0,e.jsxs)(n.table,{children:[(0,e.jsx)(n.thead,{children:(0,e.jsxs)(n.tr,{children:[(0,e.jsx)(n.th,{children:\"Attribute\"}),(0,e.jsx)(n.th,{children:\"Type\"}),(0,e.jsx)(n.th,{children:\"Description\"}),(0,e.jsx)(n.th,{children:\"Default\"})]})}),(0,e.jsxs)(n.tbody,{children:[(0,e.jsxs)(n.tr,{children:[(0,e.jsx)(n.td,{children:\"icon\"}),(0,e.jsxs)(n.td,{children:[(0,e.jsx)(n.code,{children:\"ReactNode\"}),\" | \",(0,e.jsx)(n.code,{children:\"(isOpen: boolean | undefined) => ReactNode | null;\"})]}),(0,e.jsx)(n.td,{children:\"The icon to render as the navbar menu toggle.\"}),(0,e.jsx)(n.td,{children:\"-\"})]}),(0,e.jsxs)(n.tr,{children:[(0,e.jsx)(n.td,{children:\"isSelected\"}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"boolean\"})}),(0,e.jsx)(n.td,{children:\"Whether the navbar menu toggle is selected. (controlled)\"}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"false\"})})]}),(0,e.jsxs)(n.tr,{children:[(0,e.jsx)(n.td,{children:\"defaultSelected\"}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"boolean\"})}),(0,e.jsx)(n.td,{children:\"Whether the navbar menu toggle is selected by default. (uncontrolled)\"}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"false\"})})]}),(0,e.jsxs)(n.tr,{children:[(0,e.jsx)(n.td,{children:\"srOnlyText\"}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"string\"})}),(0,e.jsx)(n.td,{children:\"The text to be used by screen readers.\"}),(0,e.jsxs)(n.td,{children:[(0,e.jsx)(n.code,{children:\"open\"}),\"/\",(0,e.jsx)(n.code,{children:\"close\"}),\" navigation menu\"]})]})]})]}),`\n`,(0,e.jsx)(n.h3,{id:\"navbarmenutoggle-events\",children:\"NavbarMenuToggle Events\"}),`\n`,(0,e.jsxs)(n.table,{children:[(0,e.jsx)(n.thead,{children:(0,e.jsxs)(n.tr,{children:[(0,e.jsx)(n.th,{children:\"Attribute\"}),(0,e.jsx)(n.th,{children:\"Type\"}),(0,e.jsx)(n.th,{children:\"Description\"})]})}),(0,e.jsx)(n.tbody,{children:(0,e.jsxs)(n.tr,{children:[(0,e.jsx)(n.td,{children:\"onChange\"}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"(isOpen: boolean) => void\"})}),(0,e.jsx)(n.td,{children:\"Handler that is called when the navbar menu toggle is pressed.\"})]})})]}),`\n`,(0,e.jsx)(n.h3,{id:\"navbarmenu-props\",children:\"NavbarMenu Props\"}),`\n`,(0,e.jsxs)(n.table,{children:[(0,e.jsx)(n.thead,{children:(0,e.jsxs)(n.tr,{children:[(0,e.jsx)(n.th,{children:\"Attribute\"}),(0,e.jsx)(n.th,{children:\"Type\"}),(0,e.jsx)(n.th,{children:\"Description\"}),(0,e.jsx)(n.th,{children:\"Default\"})]})}),(0,e.jsxs)(n.tbody,{children:[(0,e.jsxs)(n.tr,{children:[(0,e.jsx)(n.td,{children:\"children*\"}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"ReactNode[]\"})}),(0,e.jsxs)(n.td,{children:[\"The children to render as the navbar menu. Usually a list of \",(0,e.jsx)(n.code,{children:\"NavbarMenuItem\"}),\" components.\"]}),(0,e.jsx)(n.td,{children:\"-\"})]}),(0,e.jsxs)(n.tr,{children:[(0,e.jsx)(n.td,{children:\"portalContainer\"}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"HTMLElement\"})}),(0,e.jsx)(n.td,{children:\"The container element in which the navbar menu overlay portal will be placed.\"}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"document.body\"})})]}),(0,e.jsxs)(n.tr,{children:[(0,e.jsx)(n.td,{children:\"motionProps\"}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.a,{href:\"#motion-props\",children:\"MotionProps\"})}),(0,e.jsxs)(n.td,{children:[\"The motion props to control the \",(0,e.jsx)(n.code,{children:\"open\"}),\" / \",(0,e.jsx)(n.code,{children:\"close\"}),\" animation. This motion is only available if the \",(0,e.jsx)(n.code,{children:\"disableAnimation\"}),\" prop is set to \",(0,e.jsx)(n.code,{children:\"false\"}),\".\"]}),(0,e.jsx)(n.td,{children:\"-\"})]})]})]}),`\n`,(0,e.jsx)(n.h3,{id:\"navbarmenuitem-props\",children:\"NavbarMenuItem Props\"}),`\n`,(0,e.jsxs)(n.table,{children:[(0,e.jsx)(n.thead,{children:(0,e.jsxs)(n.tr,{children:[(0,e.jsx)(n.th,{children:\"Attribute\"}),(0,e.jsx)(n.th,{children:\"Type\"}),(0,e.jsx)(n.th,{children:\"Description\"}),(0,e.jsx)(n.th,{children:\"Default\"})]})}),(0,e.jsxs)(n.tbody,{children:[(0,e.jsxs)(n.tr,{children:[(0,e.jsx)(n.td,{children:\"children\"}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"ReactNode\"})}),(0,e.jsx)(n.td,{children:\"The children to render as the menu item.\"}),(0,e.jsx)(n.td,{children:\"-\"})]}),(0,e.jsxs)(n.tr,{children:[(0,e.jsx)(n.td,{children:\"isActive\"}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"boolean\"})}),(0,e.jsx)(n.td,{children:\"Whether the menu item is active or not.\"}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"false\"})})]})]})]}),`\n`,(0,e.jsxs)(n.blockquote,{children:[`\n`,(0,e.jsxs)(n.p,{children:[(0,e.jsx)(n.strong,{children:\"Note\"}),\": The rest of the navbar components such as \",(0,e.jsx)(n.code,{children:\"NavbarMenuItem\"}),\" and \",(0,e.jsx)(n.code,{children:\"NavbarBrand\"}),\" have the same props as the \",(0,e.jsx)(n.code,{children:\"li\"}),\" element.\"]}),`\n`]}),`\n`,(0,e.jsx)(n.h3,{id:\"navbar-types\",children:\"Navbar types\"}),`\n`,(0,e.jsx)(n.h4,{id:\"motion-props\",children:\"Motion Props\"}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-ts\",children:`export type MotionProps = HTMLMotionProps<\"div\">; // @see https://www.framer.com/motion/\n`})})]})}function y(r={}){let{wrapper:n}=r.components||{};return n?(0,e.jsx)(n,{...r,children:(0,e.jsx)(C,{...r})}):C(r)}function d(r,n){throw new Error(\"Expected \"+(n?\"component\":\"object\")+\" `\"+r+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return R(xe);})();\n;return Component;"
  },
  "_id": "docs/components/navbar.mdx",
  "_raw": {
    "sourceFilePath": "docs/components/navbar.mdx",
    "sourceFileName": "navbar.mdx",
    "sourceFileDir": "docs/components",
    "contentType": "mdx",
    "flattenedPath": "docs/components/navbar"
  },
  "type": "Doc",
  "slug": "/docs/components/navbar",
  "slugAsParams": "components/navbar",
  "url": "/docs/components/navbar"
}