{
  "title": "Progress",
  "description": "The Progress component allows you to view the progress of any activity.",
  "body": {
    "raw": "\nimport {progressContent} from \"@/content/components/progress\";\n\n# Progress\n\nThe Progress component allows you to view the progress of any activity.\n\n<ComponentLinks component=\"progress\" reactAriaHook=\"useProgressBar\" />\n\n---\n\n<CarbonAd/>\n\n## Installation\n\n<PackageManagers\n  showGlobalInstallWarning\n  commands={{\n    cli: \"npx nextui-cli@latest add progress\",\n    npm: \"npm install @nextui-org/progress\",\n    yarn: \"yarn add @nextui-org/progress\",\n    pnpm: \"pnpm add @nextui-org/progress\",\n    bun: \"bun add @nextui-org/progress\"\n  }}\n/>\n\n## Import\n\n<ImportTabs\n  commands={{\n    main: 'import {Progress} from \"@nextui-org/react\";',\n    individual: 'import {Progress} from \"@nextui-org/progress\";',\n  }}\n/>\n\n## Usage\n\n<CodeDemo title=\"Usage\" files={progressContent.usage} />\n\n> **Note**: Make sure to pass the `aria-label` prop when the `label` prop is not provided. This is required for accessibility.\n\n### Sizes\n\n<CodeDemo title=\"Sizes\" files={progressContent.sizes} />\n\n### Colors\n\n<CodeDemo title=\"Colors\" files={progressContent.colors} />\n\n### Indeterminate\n\nYou can use the `isIndeterminate` prop to display an indeterminate progress bar.\nThis is useful when you don't know how long an operation will take.\n\n<CodeDemo title=\"Indeterminate\" highlightedLines={7} files={progressContent.indeterminate} />\n\n### Striped\n\n<CodeDemo title=\"Striped\" highlightedLines={6} files={progressContent.striped} />\n\n### With Label\n\n<CodeDemo title=\"With Label\" files={progressContent.label} />\n\n> **Note**: If you pass the `label` prop you don't need to pass `aria-label` prop anymore.\n\n### With Value\n\n<CodeDemo title=\"With Value\" files={progressContent.value} />\n\n### Value Formatting\n\nValues are formatted as a percentage by default, but this can be modified by using the\n`formatOptions` prop to specify a different format. `formatOptions` is compatible with the\noption parameter of [Intl.NumberFormat](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat) and is applied based on the current locale.\n\n<CodeDemo title=\"Value Formatting\" files={progressContent.valueFormatting} highlightedLines=\"10\" />\n\n## Slots\n\n- **base**: The base slot of the progress, it is the main container.\n- **labelWrapper**: The label and value label wrapper.\n- **label**: The label of the progress.\n- **value**: The value label of the progress.\n- **track**: The track is the background bar of the progress.\n- **indicator**: The indicator is the bar that is filled according to the `value`.\n\n### Custom Styles\n\nYou can customize the `Progress` component by passing custom Tailwind CSS classes to the component slots.\n\n<CodeDemo title=\"Custom Styles\" files={progressContent.customStyles} highlightedLines=\"9-13\" />\n\n<Spacer y={4} />\n\n## Data Attributes\n\n`CircularProgress` has the following attributes on the `base` element:\n\n- **data-indeterminate**:\n  Indicates whether the progress is indeterminate.\n- **data-disabled**:\n  Indicates whether the progress is disabled. Based on `isDisabled` prop.\n\n<Spacer y={4} />\n\n## Accessibility\n\n- Exposed to assistive technology as a progress bar via ARIA.\n- Labeling support for accessibility.\n- Internationalized number formatting as a percentage or value.\n- Determinate and indeterminate progress support.\n- Exposes the `aria-valuenow`, `aria-valuemin`, `aria-valuemax` and `aria-valuetext` attributes.\n\n<Spacer y={4} />\n\n## API\n\n### Progress Props\n\n| Attribute        | Type                                                                                                                    | Description                                                | Default              |\n| ---------------- | ----------------------------------------------------------------------------------------------------------------------- | ---------------------------------------------------------- | -------------------- |\n| label            | `ReactNode`                                                                                                             | The content to display as the label.                       | -                    |\n| size             | `sm` \\| `md` \\| `lg`                                                                                                    | The size of the indicator.                                 | `md`                 |\n| color            | `default` \\| `primary` \\| `secondary` \\| `success` \\| `warning` \\| `danger`                                             | The color of the indicator.                                | `primary`            |\n| radius           | `none` \\| `sm` \\| `md` \\| `lg` \\| `full`                                                                                | The progress border radius.                                | `full`               |\n| value            | `number`                                                                                                                | The current value (controlled).                            | -                    |\n| valueLabel       | `ReactNode`                                                                                                             | The content to display as the value's label (e.g. 1 of 4). | -                    |\n| minValue         | `number`                                                                                                                | The smallest value allowed for the input.                  | `0`                  |\n| maxValue         | `number`                                                                                                                | The largest value allowed for the input.                   | `100`                |\n| formatOptions    | [Intl.NumberFormat](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat) | The options to format the value.                           | `{style: 'percent'}` |\n| isIndeterminate  | `boolean`                                                                                                               | Whether the progress is indeterminate.                     | `false`              |\n| isStriped        | `boolean`                                                                                                               | Whether the progress is striped.                           | `false`              |\n| showValueLabel   | `boolean`                                                                                                               | Whether to show the value label.                           | `true`               |\n| isDisabled       | `boolean`                                                                                                               | Whether the progress is disabled.                          | `false`              |\n| disableAnimation | `boolean`                                                                                                               | Whether to disable the animation.                          | `false`              |\n| classNames       | `Record<\"base\"｜\"labelWrapper\"｜\"label\"｜\"track\"｜\"value\"｜\"track\"｜\"indicator\", string>`                               | Allows to set custom class names for the progress slots.   | -                    |\n",
    "code": "var Component=(()=>{var I=Object.create;var s=Object.defineProperty;var k=Object.getOwnPropertyDescriptor;var S=Object.getOwnPropertyNames;var z=Object.getPrototypeOf,N=Object.prototype.hasOwnProperty;var j=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),C=(t,e)=>{for(var i in e)s(t,i,{get:e[i],enumerable:!0})},p=(t,e,i,n)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let o of S(e))!N.call(t,o)&&o!==i&&s(t,o,{get:()=>e[o],enumerable:!(n=k(e,o))||n.enumerable});return t};var V=(t,e,i)=>(i=t!=null?I(z(t)):{},p(e||!t||!t.__esModule?s(i,\"default\",{value:t,enumerable:!0}):i,t)),W=t=>p(s({},\"__esModule\",{value:!0}),t);var m=j((te,u)=>{u.exports=_jsx_runtime});var ee={};C(ee,{default:()=>T,frontmatter:()=>$});var r=V(m());var D=`import {Progress} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <Progress aria-label=\"Loading...\" value={60} className=\"max-w-md\"/>\n  );\n}`,F={\"/App.jsx\":D},g={...F};var R=`import {Progress} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <div className=\"flex flex-col gap-6 w-full max-w-md\">\n      <Progress size=\"sm\" aria-label=\"Loading...\" value={30} />\n      <Progress size=\"md\" aria-label=\"Loading...\" value={40} />\n      <Progress size=\"lg\" aria-label=\"Loading...\" value={50} />\n    </div> \n  );\n}`,_={\"/App.jsx\":R},f={..._};var M=`import {Progress} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <div className=\"flex flex-col gap-6 w-full max-w-md\">\n      <Progress color=\"default\" aria-label=\"Loading...\" value={70} />\n      <Progress color=\"primary\" aria-label=\"Loading...\" value={70} />\n      <Progress color=\"secondary\" aria-label=\"Loading...\" value={70} />\n      <Progress color=\"success\" aria-label=\"Loading...\" value={70} />\n      <Progress color=\"warning\" aria-label=\"Loading...\" value={70} />\n      <Progress color=\"danger\" aria-label=\"Loading...\" value={70} />\n    </div> \n  );\n}`,O={\"/App.jsx\":M},b={...O};var q=`import { Progress } from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <Progress\n      size=\"sm\"\n      isIndeterminate\n      aria-label=\"Loading...\"\n      className=\"max-w-md\"\n    />\n  );\n}`,E={\"/App.jsx\":q},x={...E};var U=`import { Progress } from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <Progress\n      isStriped\n      aria-label=\"Loading...\"\n      color=\"secondary\"\n      value={60}\n      className=\"max-w-md\"\n    />\n  );\n}\n`,G={\"/App.jsx\":U},v={...G};var B=`import {Progress} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <Progress label=\"Loading...\" value={55}  className=\"max-w-md\" />\n  );\n}`,J={\"/App.jsx\":B},y={...J};var X=`import {Progress} from \"@nextui-org/react\";\n\nexport default function App() {\n  const [value, setValue] = React.useState(0);\n\n  React.useEffect(() => {\n    const interval = setInterval(() => {\n      setValue((v) => (v >= 100 ? 0 : v + 10));\n    }, 500);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <Progress\n      aria-label=\"Downloading...\"\n      size=\"md\"\n      value={value}\n      color=\"success\"\n      showValueLabel={true}\n      className=\"max-w-md\"\n    />\n  );\n}`,Y={\"/App.jsx\":X},w={...Y};var H=`import {Progress} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <Progress\n      label=\"Monthly expenses\"\n      size=\"sm\"\n      value={4000}\n      maxValue={10000}\n      color=\"warning\"\n      formatOptions={{style: \"currency\", currency: \"ARS\"}}\n      showValueLabel={true}\n      className=\"max-w-md\"\n    />\n  );\n}`,K={\"/App.jsx\":H},A={...K};var Q=`import { Progress } from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <Progress\n      size=\"sm\"\n      radius=\"sm\"\n      classNames={{\n        base: \"max-w-md\",\n        track: \"drop-shadow-md border border-default\",\n        indicator: \"bg-gradient-to-r from-pink-500 to-yellow-500\",\n        label: \"tracking-wider font-medium text-default-600\",\n        value: \"text-foreground/60\",\n      }}\n      label=\"Lose weight\"\n      value={65}\n      showValueLabel={true}\n    />\n  );\n}`,Z={\"/App.jsx\":Q},P={...Z};var l={usage:g,sizes:f,colors:b,indeterminate:x,striped:v,label:y,value:w,valueFormatting:A,customStyles:P};var $={title:\"Progress\",description:\"The Progress component allows you to view the progress of any activity.\"};function L(t){let e={a:\"a\",blockquote:\"blockquote\",code:\"code\",h1:\"h1\",h2:\"h2\",h3:\"h3\",hr:\"hr\",li:\"li\",p:\"p\",strong:\"strong\",table:\"table\",tbody:\"tbody\",td:\"td\",th:\"th\",thead:\"thead\",tr:\"tr\",ul:\"ul\",...t.components},{CarbonAd:i,CodeDemo:n,ComponentLinks:o,ImportTabs:c,PackageManagers:h,Spacer:a}=e;return i||d(\"CarbonAd\",!0),n||d(\"CodeDemo\",!0),o||d(\"ComponentLinks\",!0),c||d(\"ImportTabs\",!0),h||d(\"PackageManagers\",!0),a||d(\"Spacer\",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h1,{id:\"progress\",children:\"Progress\"}),`\n`,(0,r.jsx)(e.p,{children:\"The Progress component allows you to view the progress of any activity.\"}),`\n`,(0,r.jsx)(o,{component:\"progress\",reactAriaHook:\"useProgressBar\"}),`\n`,(0,r.jsx)(e.hr,{}),`\n`,(0,r.jsx)(i,{}),`\n`,(0,r.jsx)(e.h2,{id:\"installation\",children:\"Installation\"}),`\n`,(0,r.jsx)(h,{showGlobalInstallWarning:!0,commands:{cli:\"npx nextui-cli@latest add progress\",npm:\"npm install @nextui-org/progress\",yarn:\"yarn add @nextui-org/progress\",pnpm:\"pnpm add @nextui-org/progress\",bun:\"bun add @nextui-org/progress\"}}),`\n`,(0,r.jsx)(e.h2,{id:\"import\",children:\"Import\"}),`\n`,(0,r.jsx)(c,{commands:{main:'import {Progress} from \"@nextui-org/react\";',individual:'import {Progress} from \"@nextui-org/progress\";'}}),`\n`,(0,r.jsx)(e.h2,{id:\"usage\",children:\"Usage\"}),`\n`,(0,r.jsx)(n,{title:\"Usage\",files:l.usage}),`\n`,(0,r.jsxs)(e.blockquote,{children:[`\n`,(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:\"Note\"}),\": Make sure to pass the \",(0,r.jsx)(e.code,{children:\"aria-label\"}),\" prop when the \",(0,r.jsx)(e.code,{children:\"label\"}),\" prop is not provided. This is required for accessibility.\"]}),`\n`]}),`\n`,(0,r.jsx)(e.h3,{id:\"sizes\",children:\"Sizes\"}),`\n`,(0,r.jsx)(n,{title:\"Sizes\",files:l.sizes}),`\n`,(0,r.jsx)(e.h3,{id:\"colors\",children:\"Colors\"}),`\n`,(0,r.jsx)(n,{title:\"Colors\",files:l.colors}),`\n`,(0,r.jsx)(e.h3,{id:\"indeterminate\",children:\"Indeterminate\"}),`\n`,(0,r.jsxs)(e.p,{children:[\"You can use the \",(0,r.jsx)(e.code,{children:\"isIndeterminate\"}),` prop to display an indeterminate progress bar.\nThis is useful when you don't know how long an operation will take.`]}),`\n`,(0,r.jsx)(n,{title:\"Indeterminate\",highlightedLines:7,files:l.indeterminate}),`\n`,(0,r.jsx)(e.h3,{id:\"striped\",children:\"Striped\"}),`\n`,(0,r.jsx)(n,{title:\"Striped\",highlightedLines:6,files:l.striped}),`\n`,(0,r.jsx)(e.h3,{id:\"with-label\",children:\"With Label\"}),`\n`,(0,r.jsx)(n,{title:\"With Label\",files:l.label}),`\n`,(0,r.jsxs)(e.blockquote,{children:[`\n`,(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:\"Note\"}),\": If you pass the \",(0,r.jsx)(e.code,{children:\"label\"}),\" prop you don't need to pass \",(0,r.jsx)(e.code,{children:\"aria-label\"}),\" prop anymore.\"]}),`\n`]}),`\n`,(0,r.jsx)(e.h3,{id:\"with-value\",children:\"With Value\"}),`\n`,(0,r.jsx)(n,{title:\"With Value\",files:l.value}),`\n`,(0,r.jsx)(e.h3,{id:\"value-formatting\",children:\"Value Formatting\"}),`\n`,(0,r.jsxs)(e.p,{children:[`Values are formatted as a percentage by default, but this can be modified by using the\n`,(0,r.jsx)(e.code,{children:\"formatOptions\"}),\" prop to specify a different format. \",(0,r.jsx)(e.code,{children:\"formatOptions\"}),` is compatible with the\noption parameter of `,(0,r.jsx)(e.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat\",children:\"Intl.NumberFormat\"}),\" and is applied based on the current locale.\"]}),`\n`,(0,r.jsx)(n,{title:\"Value Formatting\",files:l.valueFormatting,highlightedLines:\"10\"}),`\n`,(0,r.jsx)(e.h2,{id:\"slots\",children:\"Slots\"}),`\n`,(0,r.jsxs)(e.ul,{children:[`\n`,(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:\"base\"}),\": The base slot of the progress, it is the main container.\"]}),`\n`,(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:\"labelWrapper\"}),\": The label and value label wrapper.\"]}),`\n`,(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:\"label\"}),\": The label of the progress.\"]}),`\n`,(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:\"value\"}),\": The value label of the progress.\"]}),`\n`,(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:\"track\"}),\": The track is the background bar of the progress.\"]}),`\n`,(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:\"indicator\"}),\": The indicator is the bar that is filled according to the \",(0,r.jsx)(e.code,{children:\"value\"}),\".\"]}),`\n`]}),`\n`,(0,r.jsx)(e.h3,{id:\"custom-styles\",children:\"Custom Styles\"}),`\n`,(0,r.jsxs)(e.p,{children:[\"You can customize the \",(0,r.jsx)(e.code,{children:\"Progress\"}),\" component by passing custom Tailwind CSS classes to the component slots.\"]}),`\n`,(0,r.jsx)(n,{title:\"Custom Styles\",files:l.customStyles,highlightedLines:\"9-13\"}),`\n`,(0,r.jsx)(a,{y:4}),`\n`,(0,r.jsx)(e.h2,{id:\"data-attributes\",children:\"Data Attributes\"}),`\n`,(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.code,{children:\"CircularProgress\"}),\" has the following attributes on the \",(0,r.jsx)(e.code,{children:\"base\"}),\" element:\"]}),`\n`,(0,r.jsxs)(e.ul,{children:[`\n`,(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:\"data-indeterminate\"}),`:\nIndicates whether the progress is indeterminate.`]}),`\n`,(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:\"data-disabled\"}),`:\nIndicates whether the progress is disabled. Based on `,(0,r.jsx)(e.code,{children:\"isDisabled\"}),\" prop.\"]}),`\n`]}),`\n`,(0,r.jsx)(a,{y:4}),`\n`,(0,r.jsx)(e.h2,{id:\"accessibility\",children:\"Accessibility\"}),`\n`,(0,r.jsxs)(e.ul,{children:[`\n`,(0,r.jsx)(e.li,{children:\"Exposed to assistive technology as a progress bar via ARIA.\"}),`\n`,(0,r.jsx)(e.li,{children:\"Labeling support for accessibility.\"}),`\n`,(0,r.jsx)(e.li,{children:\"Internationalized number formatting as a percentage or value.\"}),`\n`,(0,r.jsx)(e.li,{children:\"Determinate and indeterminate progress support.\"}),`\n`,(0,r.jsxs)(e.li,{children:[\"Exposes the \",(0,r.jsx)(e.code,{children:\"aria-valuenow\"}),\", \",(0,r.jsx)(e.code,{children:\"aria-valuemin\"}),\", \",(0,r.jsx)(e.code,{children:\"aria-valuemax\"}),\" and \",(0,r.jsx)(e.code,{children:\"aria-valuetext\"}),\" attributes.\"]}),`\n`]}),`\n`,(0,r.jsx)(a,{y:4}),`\n`,(0,r.jsx)(e.h2,{id:\"api\",children:\"API\"}),`\n`,(0,r.jsx)(e.h3,{id:\"progress-props\",children:\"Progress Props\"}),`\n`,(0,r.jsxs)(e.table,{children:[(0,r.jsx)(e.thead,{children:(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.th,{children:\"Attribute\"}),(0,r.jsx)(e.th,{children:\"Type\"}),(0,r.jsx)(e.th,{children:\"Description\"}),(0,r.jsx)(e.th,{children:\"Default\"})]})}),(0,r.jsxs)(e.tbody,{children:[(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:\"label\"}),(0,r.jsx)(e.td,{children:(0,r.jsx)(e.code,{children:\"ReactNode\"})}),(0,r.jsx)(e.td,{children:\"The content to display as the label.\"}),(0,r.jsx)(e.td,{children:\"-\"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:\"size\"}),(0,r.jsxs)(e.td,{children:[(0,r.jsx)(e.code,{children:\"sm\"}),\" | \",(0,r.jsx)(e.code,{children:\"md\"}),\" | \",(0,r.jsx)(e.code,{children:\"lg\"})]}),(0,r.jsx)(e.td,{children:\"The size of the indicator.\"}),(0,r.jsx)(e.td,{children:(0,r.jsx)(e.code,{children:\"md\"})})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:\"color\"}),(0,r.jsxs)(e.td,{children:[(0,r.jsx)(e.code,{children:\"default\"}),\" | \",(0,r.jsx)(e.code,{children:\"primary\"}),\" | \",(0,r.jsx)(e.code,{children:\"secondary\"}),\" | \",(0,r.jsx)(e.code,{children:\"success\"}),\" | \",(0,r.jsx)(e.code,{children:\"warning\"}),\" | \",(0,r.jsx)(e.code,{children:\"danger\"})]}),(0,r.jsx)(e.td,{children:\"The color of the indicator.\"}),(0,r.jsx)(e.td,{children:(0,r.jsx)(e.code,{children:\"primary\"})})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:\"radius\"}),(0,r.jsxs)(e.td,{children:[(0,r.jsx)(e.code,{children:\"none\"}),\" | \",(0,r.jsx)(e.code,{children:\"sm\"}),\" | \",(0,r.jsx)(e.code,{children:\"md\"}),\" | \",(0,r.jsx)(e.code,{children:\"lg\"}),\" | \",(0,r.jsx)(e.code,{children:\"full\"})]}),(0,r.jsx)(e.td,{children:\"The progress border radius.\"}),(0,r.jsx)(e.td,{children:(0,r.jsx)(e.code,{children:\"full\"})})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:\"value\"}),(0,r.jsx)(e.td,{children:(0,r.jsx)(e.code,{children:\"number\"})}),(0,r.jsx)(e.td,{children:\"The current value (controlled).\"}),(0,r.jsx)(e.td,{children:\"-\"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:\"valueLabel\"}),(0,r.jsx)(e.td,{children:(0,r.jsx)(e.code,{children:\"ReactNode\"})}),(0,r.jsx)(e.td,{children:\"The content to display as the value's label (e.g. 1 of 4).\"}),(0,r.jsx)(e.td,{children:\"-\"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:\"minValue\"}),(0,r.jsx)(e.td,{children:(0,r.jsx)(e.code,{children:\"number\"})}),(0,r.jsx)(e.td,{children:\"The smallest value allowed for the input.\"}),(0,r.jsx)(e.td,{children:(0,r.jsx)(e.code,{children:\"0\"})})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:\"maxValue\"}),(0,r.jsx)(e.td,{children:(0,r.jsx)(e.code,{children:\"number\"})}),(0,r.jsx)(e.td,{children:\"The largest value allowed for the input.\"}),(0,r.jsx)(e.td,{children:(0,r.jsx)(e.code,{children:\"100\"})})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:\"formatOptions\"}),(0,r.jsx)(e.td,{children:(0,r.jsx)(e.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat\",children:\"Intl.NumberFormat\"})}),(0,r.jsx)(e.td,{children:\"The options to format the value.\"}),(0,r.jsx)(e.td,{children:(0,r.jsx)(e.code,{children:\"{style: 'percent'}\"})})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:\"isIndeterminate\"}),(0,r.jsx)(e.td,{children:(0,r.jsx)(e.code,{children:\"boolean\"})}),(0,r.jsx)(e.td,{children:\"Whether the progress is indeterminate.\"}),(0,r.jsx)(e.td,{children:(0,r.jsx)(e.code,{children:\"false\"})})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:\"isStriped\"}),(0,r.jsx)(e.td,{children:(0,r.jsx)(e.code,{children:\"boolean\"})}),(0,r.jsx)(e.td,{children:\"Whether the progress is striped.\"}),(0,r.jsx)(e.td,{children:(0,r.jsx)(e.code,{children:\"false\"})})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:\"showValueLabel\"}),(0,r.jsx)(e.td,{children:(0,r.jsx)(e.code,{children:\"boolean\"})}),(0,r.jsx)(e.td,{children:\"Whether to show the value label.\"}),(0,r.jsx)(e.td,{children:(0,r.jsx)(e.code,{children:\"true\"})})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:\"isDisabled\"}),(0,r.jsx)(e.td,{children:(0,r.jsx)(e.code,{children:\"boolean\"})}),(0,r.jsx)(e.td,{children:\"Whether the progress is disabled.\"}),(0,r.jsx)(e.td,{children:(0,r.jsx)(e.code,{children:\"false\"})})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:\"disableAnimation\"}),(0,r.jsx)(e.td,{children:(0,r.jsx)(e.code,{children:\"boolean\"})}),(0,r.jsx)(e.td,{children:\"Whether to disable the animation.\"}),(0,r.jsx)(e.td,{children:(0,r.jsx)(e.code,{children:\"false\"})})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:\"classNames\"}),(0,r.jsx)(e.td,{children:(0,r.jsx)(e.code,{children:'Record<\"base\"\\uFF5C\"labelWrapper\"\\uFF5C\"label\"\\uFF5C\"track\"\\uFF5C\"value\"\\uFF5C\"track\"\\uFF5C\"indicator\", string>'})}),(0,r.jsx)(e.td,{children:\"Allows to set custom class names for the progress slots.\"}),(0,r.jsx)(e.td,{children:\"-\"})]})]})]})]})}function T(t={}){let{wrapper:e}=t.components||{};return e?(0,r.jsx)(e,{...t,children:(0,r.jsx)(L,{...t})}):L(t)}function d(t,e){throw new Error(\"Expected \"+(e?\"component\":\"object\")+\" `\"+t+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return W(ee);})();\n;return Component;"
  },
  "_id": "docs/components/progress.mdx",
  "_raw": {
    "sourceFilePath": "docs/components/progress.mdx",
    "sourceFileName": "progress.mdx",
    "sourceFileDir": "docs/components",
    "contentType": "mdx",
    "flattenedPath": "docs/components/progress"
  },
  "type": "Doc",
  "slug": "/docs/components/progress",
  "slugAsParams": "components/progress",
  "url": "/docs/components/progress"
}