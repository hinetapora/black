{
  "title": "Switch",
  "description": "The Switch component is used as an alternative between checked and not checked states.",
  "body": {
    "raw": "\nimport {switchContent} from \"@/content/components/switch\";\n\n# Switch\n\nThe Switch component is used as an alternative between checked and not checked states.\n\n<ComponentLinks component=\"switch\" styles=\"toggle\" reactAriaHook=\"useSwitch\" />\n\n---\n\n<CarbonAd/>\n\n## Installation\n\n<PackageManagers\n  showGlobalInstallWarning\n  commands={{\n    cli: \"npx nextui-cli@latest add switch\",\n    npm: \"npm install @nextui-org/switch\",\n    yarn: \"yarn add @nextui-org/switch\",\n    pnpm: \"pnpm add @nextui-org/switch\",\n    bun: \"bun add @nextui-org/switch\"\n  }}\n/>\n\n\n## Import\n\n<ImportTabs\n  commands={{\n    main: 'import {Switch} from \"@nextui-org/react\";',\n    individual: 'import {Switch} from \"@nextui-org/switch\";',\n  }}\n/>\n\n## Usage\n\n<CodeDemo title=\"Usage\" files={switchContent.usage} />\n\n### With Label\n\n<CodeDemo title=\"With Label\" files={switchContent.label} />\n\n### Disabled\n\n<CodeDemo title=\"Disabled\" files={switchContent.disabled} />\n\n### Sizes\n\n<CodeDemo title=\"Sizes\" files={switchContent.sizes} />\n\n### Colors\n\n<CodeDemo title=\"Colors\" files={switchContent.colors} />\n\n### With Thumb Icon\n\n<CodeDemo title=\"With Thumb Icon\" files={switchContent.thumbIcon} />\n\n### With Icons\n\nYou can also add icons to start and end of the switch by using `startContent` and `endContent` props.\n\n<CodeDemo title=\"With Icons\" files={switchContent.icons} highlightedLines=\"11-12\" />\n\n### Controlled\n\n<CodeDemo title=\"Controlled\" files={switchContent.controlled} />\n\n> **Note**: NextUI `Switch` also supports native events like `onChange`, useful for form libraries\n> such as [Formik](https://formik.org/) and [React Hook Form](https://react-hook-form.com/).\n\n## Slots\n\n- **base**: Base slot for the switch. It is the main wrapper.\n- **wrapper**: The wrapper of the start icon, end icon and thumb.\n- **thumb**: The thumb element of the switch. It is the circle element.\n- **label**: The label slot of the switch.\n- **startContent**: The icon slot at the start of the switch.\n- **endContent**: The icon slot at the end of the switch.\n- **thumbIcon**: The icon slot inside the thumb.\n\n### Custom Styles\n\nYou can customize the `Switch` component by passing custom Tailwind CSS classes to the component slots.\n\n<CodeDemo title=\"Custom Styles\" files={switchContent.customStyles} />\n\n### Custom Implementation\n\nIn case you need to customize the switch even further, you can use the `useSwitch` hook to create your own implementation.\n\n<CodeDemo title=\"Custom Implementation\" files={switchContent.customImpl} />\n\n<Spacer y={4} />\n\n## Data Attributes\n\n`Switch` has the following attributes on the `base` element:\n\n- **data-selected**:\n  When the switch is checked. Based on `isSelected` prop.\n- **data-pressed**:\n  When the switch is pressed. Based on [usePress](https://react-spectrum.adobe.com/react-aria/usePress.html)\n- **data-readonly**:\n  When the switch is readonly. Based on `isReadOnly` prop.\n- **data-hover**:\n  When the switch is being hovered. Based on [useHover](https://react-spectrum.adobe.com/react-aria/useHover.html)\n- **data-focus**:\n  When the switch is being focused. Based on [useFocusRing](https://react-spectrum.adobe.com/react-aria/useFocusRing.html).\n- **data-focus-visible**:\n  When the switch is being focused with the keyboard. Based on [useFocusRing](https://react-spectrum.adobe.com/react-aria/useFocusRing.html).\n- **data-disabled**:\n  When the switch is disabled. Based on `isDisabled` prop.\n\n<Spacer y={4} />\n\n## Accessibility\n\n- Built with a native HTML `<input>` element.\n- Full support for browser features like form autofill.\n- Keyboard focus management and cross browser normalization.\n- Keyboard event support for <Kbd>Tab</Kbd> and <Kbd>Space</Kbd> keys.\n- Labeling support for assistive technology.\n- Exposed as a switch to assistive technology via ARIA\n\n<Spacer y={4} />\n\n## API\n\n### Switch Props\n\n| Attribute        | Type                                                                                                       | Description                                                         | Default   |\n| ---------------- | ---------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------- | --------- |\n| children         | `ReactNode`                                                                                                | The label of the switch.                                            | -         |\n| value            | `string`                                                                                                   | The value of the input element, used when submitting an HTML form.  | -         |\n| name             | `string`                                                                                                   | The name of the input element, used when submitting an HTML form.   | -         |\n| size             | `sm` \\| `md` \\| `lg`                                                                                       | The size of the switch.                                             | `md`      |\n| color            | `default` \\| `primary` \\| `secondary` \\| `success` \\| `warning` \\| `danger`                                | The color of the switch.                                            | `primary` |\n| thumbIcon        | [ThumbIconProps](#switch-icon-props)                                                                       | The icon to be displayed when the switch is checked.                | -         |\n| startContent     | `ReactNode`                                                                                                | The icon to be displayed at the start of the switch.                | -         |\n| endContent       | `ReactNode`                                                                                                | The icon to be displayed at the end of the switch.                  | -         |\n| isSelected       | `boolean`                                                                                                  | Whether the element should be selected (controlled).                | -         |\n| defaultSelected  | `boolean`                                                                                                  | Whether the element should be selected (uncontrolled).              | -         |\n| isRequired       | `boolean`                                                                                                  | Whether user input is required on the input before form submission. | `false`   |\n| isReadOnly       | `boolean`                                                                                                  | Whether the input can be selected but not changed by the user.      | -         |\n| isDisabled       | `boolean`                                                                                                  | Whether the switch is disabled.                                     | `false`   |\n| disableAnimation | `boolean`                                                                                                  | Whether the animation should be disabled.                           | `false`   |\n| classNames       | `Record<\"base\"｜ \"wrapper\"｜ \"thumb\"｜ \"label\" ｜ \"startContent\" ｜ \"endContent\" ｜ \"thumbIcon\" , string>` | Allows to set custom class names for the switch slots.              | -         |\n\n### Switch Events\n\n| Attribute     | Type                                  | Description                                                                                                                                              |\n| ------------- | ------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| onChange      | `React.ChangeEvent<HTMLInputElement>` | Handler that is called when the element's selection state changes. You can pull out the new checked state by accessing `event.target.checked` (boolean). |\n| onValueChange | `(isSelected: boolean) => void`       | Handler that is called when the element's selection state changes.                                                                                       |\n\n### Types\n\n#### Switch Icon Props\n\n```ts\ntype IconProps = {\n  \"data-checked\": string;\n  width: string;\n  height: string;\n  isSelected: boolean;\n  className: string;\n};\n\ntype CheckboxIconProps = ReactNode | ((props: IconProps) => ReactNode);\n```\n",
    "code": "var Component=(()=>{var N=Object.create;var s=Object.defineProperty;var P=Object.getOwnPropertyDescriptor;var j=Object.getOwnPropertyNames;var W=Object.getPrototypeOf,B=Object.prototype.hasOwnProperty;var H=(n,t)=>()=>(t||n((t={exports:{}}).exports,t),t.exports),R=(n,t)=>{for(var r in t)s(n,r,{get:t[r],enumerable:!0})},u=(n,t,r,o)=>{if(t&&typeof t==\"object\"||typeof t==\"function\")for(let i of j(t))!B.call(n,i)&&i!==r&&s(n,i,{get:()=>t[i],enumerable:!(o=P(t,i))||o.enumerable});return n};var D=(n,t,r)=>(r=n!=null?N(W(n)):{},u(t||!n||!n.__esModule?s(r,\"default\",{value:n,enumerable:!0}):r,n)),L=n=>u(s({},\"__esModule\",{value:!0}),n);var f=H((me,m)=>{m.exports=_jsx_runtime});var pe={};R(pe,{default:()=>k,frontmatter:()=>ae});var e=D(f());var V=`import {Switch} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <Switch defaultSelected aria-label=\"Automatic updates\"/>\n  );\n}`,F={\"/App.jsx\":V},g={...F};var _=`import {Switch} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <Switch defaultSelected>\n      Automatic updates\n    </Switch>\n  );\n}`,E={\"/App.jsx\":_},w={...E};var q=`import {Switch} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <Switch isDisabled defaultSelected>\n      Automatic updates\n    </Switch>\n  );\n}`,K={\"/App.jsx\":q},S={...K};var U=`import {Switch} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <div className=\"flex gap-4\">\n      <Switch defaultSelected size=\"sm\">Small</Switch>\n      <Switch defaultSelected size=\"md\">Medium</Switch>\n      <Switch defaultSelected size=\"lg\">Large</Switch>\n    </div>  \n  );\n}`,Y={\"/App.jsx\":U},b={...Y};var G=`import {Switch} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <div className=\"flex gap-4\">\n      <Switch defaultSelected color=\"default\">Default</Switch>\n      <Switch defaultSelected color=\"primary\">Primary</Switch>\n      <Switch defaultSelected color=\"secondary\">Secondary</Switch>\n      <Switch defaultSelected color=\"success\">Success</Switch>\n      <Switch defaultSelected color=\"warning\">Warning</Switch>\n      <Switch defaultSelected color=\"danger\">Danger</Switch>\n    </div> \n  );\n}`,O={\"/App.jsx\":G},x={...O};var X=`export const MoonIcon = (props) => (\n  <svg\n    aria-hidden=\"true\"\n    focusable=\"false\"\n    height=\"1em\"\n    role=\"presentation\"\n    viewBox=\"0 0 24 24\"\n    width=\"1em\"\n    {...props}\n  >\n    <path\n      d=\"M21.53 15.93c-.16-.27-.61-.69-1.73-.49a8.46 8.46 0 01-1.88.13 8.409 8.409 0 01-5.91-2.82 8.068 8.068 0 01-1.44-8.66c.44-1.01.13-1.54-.09-1.76s-.77-.55-1.83-.11a10.318 10.318 0 00-6.32 10.21 10.475 10.475 0 007.04 8.99 10 10 0 002.89.55c.16.01.32.02.48.02a10.5 10.5 0 008.47-4.27c.67-.93.49-1.519.32-1.79z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);`,J=`export const SunIcon = (props) => (\n  <svg\n    aria-hidden=\"true\"\n    focusable=\"false\"\n    height=\"1em\"\n    role=\"presentation\"\n    viewBox=\"0 0 24 24\"\n    width=\"1em\"\n    {...props}\n  >\n    <g fill=\"currentColor\">\n      <path d=\"M19 12a7 7 0 11-7-7 7 7 0 017 7z\" />\n      <path d=\"M12 22.96a.969.969 0 01-1-.96v-.08a1 1 0 012 0 1.038 1.038 0 01-1 1.04zm7.14-2.82a1.024 1.024 0 01-.71-.29l-.13-.13a1 1 0 011.41-1.41l.13.13a1 1 0 010 1.41.984.984 0 01-.7.29zm-14.28 0a1.024 1.024 0 01-.71-.29 1 1 0 010-1.41l.13-.13a1 1 0 011.41 1.41l-.13.13a1 1 0 01-.7.29zM22 13h-.08a1 1 0 010-2 1.038 1.038 0 011.04 1 .969.969 0 01-.96 1zM2.08 13H2a1 1 0 010-2 1.038 1.038 0 011.04 1 .969.969 0 01-.96 1zm16.93-7.01a1.024 1.024 0 01-.71-.29 1 1 0 010-1.41l.13-.13a1 1 0 011.41 1.41l-.13.13a.984.984 0 01-.7.29zm-14.02 0a1.024 1.024 0 01-.71-.29l-.13-.14a1 1 0 011.41-1.41l.13.13a1 1 0 010 1.41.97.97 0 01-.7.3zM12 3.04a.969.969 0 01-1-.96V2a1 1 0 012 0 1.038 1.038 0 01-1 1.04z\" />\n    </g>\n  </svg>\n);`,Q=`import {Switch} from \"@nextui-org/react\";\nimport {MoonIcon} from \"./MoonIcon\";\nimport {SunIcon} from \"./SunIcon\";\n\nexport default function App() {\n  return (\n    <Switch\n      defaultSelected\n      size=\"lg\"\n      color=\"secondary\"\n      thumbIcon={({ isSelected, className }) =>\n        isSelected ? (\n          <SunIcon className={className} />\n        ) : (\n          <MoonIcon className={className} />\n        )\n      }\n    >\n      Dark mode\n    </Switch>\n  );\n}`,Z={\"/App.jsx\":Q,\"/MoonIcon.jsx\":X,\"/SunIcon.jsx\":J},I={...Z};var $=`export const MoonIcon = (props) => (\n  <svg\n    aria-hidden=\"true\"\n    focusable=\"false\"\n    height=\"1em\"\n    role=\"presentation\"\n    viewBox=\"0 0 24 24\"\n    width=\"1em\"\n    {...props}\n  >\n    <path\n      d=\"M21.53 15.93c-.16-.27-.61-.69-1.73-.49a8.46 8.46 0 01-1.88.13 8.409 8.409 0 01-5.91-2.82 8.068 8.068 0 01-1.44-8.66c.44-1.01.13-1.54-.09-1.76s-.77-.55-1.83-.11a10.318 10.318 0 00-6.32 10.21 10.475 10.475 0 007.04 8.99 10 10 0 002.89.55c.16.01.32.02.48.02a10.5 10.5 0 008.47-4.27c.67-.93.49-1.519.32-1.79z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);`,ee=`export const SunIcon = (props) => (\n  <svg\n    aria-hidden=\"true\"\n    focusable=\"false\"\n    height=\"1em\"\n    role=\"presentation\"\n    viewBox=\"0 0 24 24\"\n    width=\"1em\"\n    {...props}\n  >\n    <g fill=\"currentColor\">\n      <path d=\"M19 12a7 7 0 11-7-7 7 7 0 017 7z\" />\n      <path d=\"M12 22.96a.969.969 0 01-1-.96v-.08a1 1 0 012 0 1.038 1.038 0 01-1 1.04zm7.14-2.82a1.024 1.024 0 01-.71-.29l-.13-.13a1 1 0 011.41-1.41l.13.13a1 1 0 010 1.41.984.984 0 01-.7.29zm-14.28 0a1.024 1.024 0 01-.71-.29 1 1 0 010-1.41l.13-.13a1 1 0 011.41 1.41l-.13.13a1 1 0 01-.7.29zM22 13h-.08a1 1 0 010-2 1.038 1.038 0 011.04 1 .969.969 0 01-.96 1zM2.08 13H2a1 1 0 010-2 1.038 1.038 0 011.04 1 .969.969 0 01-.96 1zm16.93-7.01a1.024 1.024 0 01-.71-.29 1 1 0 010-1.41l.13-.13a1 1 0 011.41 1.41l-.13.13a.984.984 0 01-.7.29zm-14.02 0a1.024 1.024 0 01-.71-.29l-.13-.14a1 1 0 011.41-1.41l.13.13a1 1 0 010 1.41.97.97 0 01-.7.3zM12 3.04a.969.969 0 01-1-.96V2a1 1 0 012 0 1.038 1.038 0 01-1 1.04z\" />\n    </g>\n  </svg>\n);`,te=`import {Switch} from \"@nextui-org/react\";\nimport {MoonIcon} from \"./MoonIcon\";\nimport {SunIcon} from \"./SunIcon\";\n\nexport default function App() {\n  return (\n    <Switch\n      defaultSelected\n      size=\"lg\"\n      color=\"success\"\n      startContent={<SunIcon />}\n      endContent={<MoonIcon />}\n    >\n      Dark mode\n    </Switch>\n  );\n}`,ne={\"/App.jsx\":te,\"/MoonIcon.jsx\":$,\"/SunIcon.jsx\":ee},v={...ne};var oe=`import {Switch} from \"@nextui-org/react\";\n\nexport default function App() {\n  const [isSelected, setIsSelected] = React.useState(true);\n\n  return (\n    <div className=\"flex flex-col gap-2\">\n      <Switch isSelected={isSelected} onValueChange={setIsSelected}>\n        Airplane mode\n      </Switch>  \n      <p className=\"text-small text-default-500\">Selected: {isSelected ? \"true\" : \"false\"}</p>\n    </div>\n  )  \n}`,re={\"/App.jsx\":oe},y={...re};var ce=`import {Switch, cn} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <Switch\n      classNames={{\n        base: cn(\n          \"inline-flex flex-row-reverse w-full max-w-md bg-content1 hover:bg-content2 items-center\",\n          \"justify-between cursor-pointer rounded-lg gap-2 p-4 border-2 border-transparent\",\n          \"data-[selected=true]:border-primary\",\n        ),\n        wrapper: \"p-0 h-4 overflow-visible\",\n        thumb: cn(\"w-6 h-6 border-2 shadow-lg\",\n          \"group-data-[hover=true]:border-primary\",\n          //selected\n          \"group-data-[selected=true]:ml-6\",\n          // pressed\n          \"group-data-[pressed=true]:w-7\",\n          \"group-data-[selected]:group-data-[pressed]:ml-4\",\n        ),\n      }}\n    >\n      <div className=\"flex flex-col gap-1\">\n        <p className=\"text-medium\">Enable early access</p>\n        <p className=\"text-tiny text-default-400\">\n          Get access to new features before they are released.\n        </p>\n      </div>\n    </Switch>\n  );\n}`,ie={\"/App.jsx\":ce},M={...ie};var A=`export const MoonIcon = (props) => (\n  <svg\n    aria-hidden=\"true\"\n    focusable=\"false\"\n    height=\"1em\"\n    role=\"presentation\"\n    viewBox=\"0 0 24 24\"\n    width=\"1em\"\n    {...props}\n  >\n    <path\n      d=\"M21.53 15.93c-.16-.27-.61-.69-1.73-.49a8.46 8.46 0 01-1.88.13 8.409 8.409 0 01-5.91-2.82 8.068 8.068 0 01-1.44-8.66c.44-1.01.13-1.54-.09-1.76s-.77-.55-1.83-.11a10.318 10.318 0 00-6.32 10.21 10.475 10.475 0 007.04 8.99 10 10 0 002.89.55c.16.01.32.02.48.02a10.5 10.5 0 008.47-4.27c.67-.93.49-1.519.32-1.79z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);`,C=`export const SunIcon = (props) => (\n  <svg\n    aria-hidden=\"true\"\n    focusable=\"false\"\n    height=\"1em\"\n    role=\"presentation\"\n    viewBox=\"0 0 24 24\"\n    width=\"1em\"\n    {...props}\n  >\n    <g fill=\"currentColor\">\n      <path d=\"M19 12a7 7 0 11-7-7 7 7 0 017 7z\" />\n      <path d=\"M12 22.96a.969.969 0 01-1-.96v-.08a1 1 0 012 0 1.038 1.038 0 01-1 1.04zm7.14-2.82a1.024 1.024 0 01-.71-.29l-.13-.13a1 1 0 011.41-1.41l.13.13a1 1 0 010 1.41.984.984 0 01-.7.29zm-14.28 0a1.024 1.024 0 01-.71-.29 1 1 0 010-1.41l.13-.13a1 1 0 011.41 1.41l-.13.13a1 1 0 01-.7.29zM22 13h-.08a1 1 0 010-2 1.038 1.038 0 011.04 1 .969.969 0 01-.96 1zM2.08 13H2a1 1 0 010-2 1.038 1.038 0 011.04 1 .969.969 0 01-.96 1zm16.93-7.01a1.024 1.024 0 01-.71-.29 1 1 0 010-1.41l.13-.13a1 1 0 011.41 1.41l-.13.13a.984.984 0 01-.7.29zm-14.02 0a1.024 1.024 0 01-.71-.29l-.13-.14a1 1 0 011.41-1.41l.13.13a1 1 0 010 1.41.97.97 0 01-.7.3zM12 3.04a.969.969 0 01-1-.96V2a1 1 0 012 0 1.038 1.038 0 01-1 1.04z\" />\n    </g>\n  </svg>\n);`,de=`import {Switch, VisuallyHidden, useSwitch} from \"@nextui-org/react\";\nimport {MoonIcon} from \"./MoonIcon\";\nimport {SunIcon} from \"./SunIcon\";\n\nconst ThemeSwitch = (props) => {\n  const {\n    Component, \n    slots, \n    isSelected, \n    getBaseProps, \n    getInputProps, \n    getWrapperProps\n  } = useSwitch(props);\n\n  return (\n    <div className=\"flex flex-col gap-2\">\n      <Component {...getBaseProps()}>\n          <VisuallyHidden>\n            <input {...getInputProps()} />\n          </VisuallyHidden>\n          <div\n            {...getWrapperProps()}\n            className={slots.wrapper({\n              class: [\n                \"w-8 h-8\",\n                \"flex items-center justify-center\",\n                \"rounded-lg bg-default-100 hover:bg-default-200\",\n              ],\n            })}\n          >\n            {isSelected ? <SunIcon/> : <MoonIcon/>}\n          </div>\n      </Component>\n      <p className=\"text-default-500 select-none\">Lights: {isSelected ? \"on\" : \"off\"}</p>\n    </div>\n  )\n}\n\n\nexport default function App() {\n  return <ThemeSwitch/>\n}`,le=`import {Switch, useSwitch, VisuallyHidden, SwitchProps} from \"@nextui-org/react\";\nimport {MoonIcon} from \"./MoonIcon\";\nimport {SunIcon} from \"./SunIcon\";\n\nconst ThemeSwitch = (props: SwitchProps) => {\n  const {\n    Component, \n    slots, \n    isSelected, \n    getBaseProps, \n    getInputProps, \n    getWrapperProps\n  } = useSwitch(props);\n\n  return (\n    <div className=\"flex flex-col gap-2\">\n      <Component {...getBaseProps()}>\n          <VisuallyHidden>\n            <input {...getInputProps()} />\n          </VisuallyHidden>\n          <div\n            {...getWrapperProps()}\n            className={slots.wrapper({\n              class: [\n                \"w-8 h-8\",\n                \"flex items-center justify-center\",\n                \"rounded-lg bg-default-100 hover:bg-default-200\",\n              ],\n            })}\n          >\n            {isSelected ? <SunIcon/> : <MoonIcon/>}\n          </div>\n      </Component>\n      <p className=\"text-default-500 select-none\">Lights: {isSelected ? \"on\" : \"off\"}</p>\n    </div>\n  )\n}\n\n\nexport default function App() {\n  return <ThemeSwitch/>\n}`,se={\"/App.jsx\":de,\"/MoonIcon.jsx\":A,\"/SunIcon.jsx\":C},he={\"/App.tsx\":le,\"/MoonIcon.tsx\":A,\"/SunIcon.tsx\":C},z={...se,...he};var c={usage:g,label:w,disabled:S,sizes:b,colors:x,thumbIcon:I,icons:v,controlled:y,customStyles:M,customImpl:z};var ae={title:\"Switch\",description:\"The Switch component is used as an alternative between checked and not checked states.\"};function T(n){let t={a:\"a\",blockquote:\"blockquote\",code:\"code\",h1:\"h1\",h2:\"h2\",h3:\"h3\",h4:\"h4\",hr:\"hr\",li:\"li\",p:\"p\",pre:\"pre\",strong:\"strong\",table:\"table\",tbody:\"tbody\",td:\"td\",th:\"th\",thead:\"thead\",tr:\"tr\",ul:\"ul\",...n.components},{CarbonAd:r,CodeDemo:o,ComponentLinks:i,ImportTabs:a,Kbd:h,PackageManagers:p,Spacer:l}=t;return r||d(\"CarbonAd\",!0),o||d(\"CodeDemo\",!0),i||d(\"ComponentLinks\",!0),a||d(\"ImportTabs\",!0),h||d(\"Kbd\",!0),p||d(\"PackageManagers\",!0),l||d(\"Spacer\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(t.h1,{id:\"switch\",children:\"Switch\"}),`\n`,(0,e.jsx)(t.p,{children:\"The Switch component is used as an alternative between checked and not checked states.\"}),`\n`,(0,e.jsx)(i,{component:\"switch\",styles:\"toggle\",reactAriaHook:\"useSwitch\"}),`\n`,(0,e.jsx)(t.hr,{}),`\n`,(0,e.jsx)(r,{}),`\n`,(0,e.jsx)(t.h2,{id:\"installation\",children:\"Installation\"}),`\n`,(0,e.jsx)(p,{showGlobalInstallWarning:!0,commands:{cli:\"npx nextui-cli@latest add switch\",npm:\"npm install @nextui-org/switch\",yarn:\"yarn add @nextui-org/switch\",pnpm:\"pnpm add @nextui-org/switch\",bun:\"bun add @nextui-org/switch\"}}),`\n`,(0,e.jsx)(t.h2,{id:\"import\",children:\"Import\"}),`\n`,(0,e.jsx)(a,{commands:{main:'import {Switch} from \"@nextui-org/react\";',individual:'import {Switch} from \"@nextui-org/switch\";'}}),`\n`,(0,e.jsx)(t.h2,{id:\"usage\",children:\"Usage\"}),`\n`,(0,e.jsx)(o,{title:\"Usage\",files:c.usage}),`\n`,(0,e.jsx)(t.h3,{id:\"with-label\",children:\"With Label\"}),`\n`,(0,e.jsx)(o,{title:\"With Label\",files:c.label}),`\n`,(0,e.jsx)(t.h3,{id:\"disabled\",children:\"Disabled\"}),`\n`,(0,e.jsx)(o,{title:\"Disabled\",files:c.disabled}),`\n`,(0,e.jsx)(t.h3,{id:\"sizes\",children:\"Sizes\"}),`\n`,(0,e.jsx)(o,{title:\"Sizes\",files:c.sizes}),`\n`,(0,e.jsx)(t.h3,{id:\"colors\",children:\"Colors\"}),`\n`,(0,e.jsx)(o,{title:\"Colors\",files:c.colors}),`\n`,(0,e.jsx)(t.h3,{id:\"with-thumb-icon\",children:\"With Thumb Icon\"}),`\n`,(0,e.jsx)(o,{title:\"With Thumb Icon\",files:c.thumbIcon}),`\n`,(0,e.jsx)(t.h3,{id:\"with-icons\",children:\"With Icons\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"You can also add icons to start and end of the switch by using \",(0,e.jsx)(t.code,{children:\"startContent\"}),\" and \",(0,e.jsx)(t.code,{children:\"endContent\"}),\" props.\"]}),`\n`,(0,e.jsx)(o,{title:\"With Icons\",files:c.icons,highlightedLines:\"11-12\"}),`\n`,(0,e.jsx)(t.h3,{id:\"controlled\",children:\"Controlled\"}),`\n`,(0,e.jsx)(o,{title:\"Controlled\",files:c.controlled}),`\n`,(0,e.jsxs)(t.blockquote,{children:[`\n`,(0,e.jsxs)(t.p,{children:[(0,e.jsx)(t.strong,{children:\"Note\"}),\": NextUI \",(0,e.jsx)(t.code,{children:\"Switch\"}),\" also supports native events like \",(0,e.jsx)(t.code,{children:\"onChange\"}),`, useful for form libraries\nsuch as `,(0,e.jsx)(t.a,{href:\"https://formik.org/\",children:\"Formik\"}),\" and \",(0,e.jsx)(t.a,{href:\"https://react-hook-form.com/\",children:\"React Hook Form\"}),\".\"]}),`\n`]}),`\n`,(0,e.jsx)(t.h2,{id:\"slots\",children:\"Slots\"}),`\n`,(0,e.jsxs)(t.ul,{children:[`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"base\"}),\": Base slot for the switch. It is the main wrapper.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"wrapper\"}),\": The wrapper of the start icon, end icon and thumb.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"thumb\"}),\": The thumb element of the switch. It is the circle element.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"label\"}),\": The label slot of the switch.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"startContent\"}),\": The icon slot at the start of the switch.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"endContent\"}),\": The icon slot at the end of the switch.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"thumbIcon\"}),\": The icon slot inside the thumb.\"]}),`\n`]}),`\n`,(0,e.jsx)(t.h3,{id:\"custom-styles\",children:\"Custom Styles\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"You can customize the \",(0,e.jsx)(t.code,{children:\"Switch\"}),\" component by passing custom Tailwind CSS classes to the component slots.\"]}),`\n`,(0,e.jsx)(o,{title:\"Custom Styles\",files:c.customStyles}),`\n`,(0,e.jsx)(t.h3,{id:\"custom-implementation\",children:\"Custom Implementation\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"In case you need to customize the switch even further, you can use the \",(0,e.jsx)(t.code,{children:\"useSwitch\"}),\" hook to create your own implementation.\"]}),`\n`,(0,e.jsx)(o,{title:\"Custom Implementation\",files:c.customImpl}),`\n`,(0,e.jsx)(l,{y:4}),`\n`,(0,e.jsx)(t.h2,{id:\"data-attributes\",children:\"Data Attributes\"}),`\n`,(0,e.jsxs)(t.p,{children:[(0,e.jsx)(t.code,{children:\"Switch\"}),\" has the following attributes on the \",(0,e.jsx)(t.code,{children:\"base\"}),\" element:\"]}),`\n`,(0,e.jsxs)(t.ul,{children:[`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"data-selected\"}),`:\nWhen the switch is checked. Based on `,(0,e.jsx)(t.code,{children:\"isSelected\"}),\" prop.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"data-pressed\"}),`:\nWhen the switch is pressed. Based on `,(0,e.jsx)(t.a,{href:\"https://react-spectrum.adobe.com/react-aria/usePress.html\",children:\"usePress\"})]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"data-readonly\"}),`:\nWhen the switch is readonly. Based on `,(0,e.jsx)(t.code,{children:\"isReadOnly\"}),\" prop.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"data-hover\"}),`:\nWhen the switch is being hovered. Based on `,(0,e.jsx)(t.a,{href:\"https://react-spectrum.adobe.com/react-aria/useHover.html\",children:\"useHover\"})]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"data-focus\"}),`:\nWhen the switch is being focused. Based on `,(0,e.jsx)(t.a,{href:\"https://react-spectrum.adobe.com/react-aria/useFocusRing.html\",children:\"useFocusRing\"}),\".\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"data-focus-visible\"}),`:\nWhen the switch is being focused with the keyboard. Based on `,(0,e.jsx)(t.a,{href:\"https://react-spectrum.adobe.com/react-aria/useFocusRing.html\",children:\"useFocusRing\"}),\".\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"data-disabled\"}),`:\nWhen the switch is disabled. Based on `,(0,e.jsx)(t.code,{children:\"isDisabled\"}),\" prop.\"]}),`\n`]}),`\n`,(0,e.jsx)(l,{y:4}),`\n`,(0,e.jsx)(t.h2,{id:\"accessibility\",children:\"Accessibility\"}),`\n`,(0,e.jsxs)(t.ul,{children:[`\n`,(0,e.jsxs)(t.li,{children:[\"Built with a native HTML \",(0,e.jsx)(t.code,{children:\"<input>\"}),\" element.\"]}),`\n`,(0,e.jsx)(t.li,{children:\"Full support for browser features like form autofill.\"}),`\n`,(0,e.jsx)(t.li,{children:\"Keyboard focus management and cross browser normalization.\"}),`\n`,(0,e.jsxs)(t.li,{children:[\"Keyboard event support for \",(0,e.jsx)(h,{children:\"Tab\"}),\" and \",(0,e.jsx)(h,{children:\"Space\"}),\" keys.\"]}),`\n`,(0,e.jsx)(t.li,{children:\"Labeling support for assistive technology.\"}),`\n`,(0,e.jsx)(t.li,{children:\"Exposed as a switch to assistive technology via ARIA\"}),`\n`]}),`\n`,(0,e.jsx)(l,{y:4}),`\n`,(0,e.jsx)(t.h2,{id:\"api\",children:\"API\"}),`\n`,(0,e.jsx)(t.h3,{id:\"switch-props\",children:\"Switch Props\"}),`\n`,(0,e.jsxs)(t.table,{children:[(0,e.jsx)(t.thead,{children:(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.th,{children:\"Attribute\"}),(0,e.jsx)(t.th,{children:\"Type\"}),(0,e.jsx)(t.th,{children:\"Description\"}),(0,e.jsx)(t.th,{children:\"Default\"})]})}),(0,e.jsxs)(t.tbody,{children:[(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"children\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"ReactNode\"})}),(0,e.jsx)(t.td,{children:\"The label of the switch.\"}),(0,e.jsx)(t.td,{children:\"-\"})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"value\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"string\"})}),(0,e.jsx)(t.td,{children:\"The value of the input element, used when submitting an HTML form.\"}),(0,e.jsx)(t.td,{children:\"-\"})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"name\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"string\"})}),(0,e.jsx)(t.td,{children:\"The name of the input element, used when submitting an HTML form.\"}),(0,e.jsx)(t.td,{children:\"-\"})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"size\"}),(0,e.jsxs)(t.td,{children:[(0,e.jsx)(t.code,{children:\"sm\"}),\" | \",(0,e.jsx)(t.code,{children:\"md\"}),\" | \",(0,e.jsx)(t.code,{children:\"lg\"})]}),(0,e.jsx)(t.td,{children:\"The size of the switch.\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"md\"})})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"color\"}),(0,e.jsxs)(t.td,{children:[(0,e.jsx)(t.code,{children:\"default\"}),\" | \",(0,e.jsx)(t.code,{children:\"primary\"}),\" | \",(0,e.jsx)(t.code,{children:\"secondary\"}),\" | \",(0,e.jsx)(t.code,{children:\"success\"}),\" | \",(0,e.jsx)(t.code,{children:\"warning\"}),\" | \",(0,e.jsx)(t.code,{children:\"danger\"})]}),(0,e.jsx)(t.td,{children:\"The color of the switch.\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"primary\"})})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"thumbIcon\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.a,{href:\"#switch-icon-props\",children:\"ThumbIconProps\"})}),(0,e.jsx)(t.td,{children:\"The icon to be displayed when the switch is checked.\"}),(0,e.jsx)(t.td,{children:\"-\"})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"startContent\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"ReactNode\"})}),(0,e.jsx)(t.td,{children:\"The icon to be displayed at the start of the switch.\"}),(0,e.jsx)(t.td,{children:\"-\"})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"endContent\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"ReactNode\"})}),(0,e.jsx)(t.td,{children:\"The icon to be displayed at the end of the switch.\"}),(0,e.jsx)(t.td,{children:\"-\"})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"isSelected\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"boolean\"})}),(0,e.jsx)(t.td,{children:\"Whether the element should be selected (controlled).\"}),(0,e.jsx)(t.td,{children:\"-\"})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"defaultSelected\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"boolean\"})}),(0,e.jsx)(t.td,{children:\"Whether the element should be selected (uncontrolled).\"}),(0,e.jsx)(t.td,{children:\"-\"})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"isRequired\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"boolean\"})}),(0,e.jsx)(t.td,{children:\"Whether user input is required on the input before form submission.\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"false\"})})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"isReadOnly\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"boolean\"})}),(0,e.jsx)(t.td,{children:\"Whether the input can be selected but not changed by the user.\"}),(0,e.jsx)(t.td,{children:\"-\"})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"isDisabled\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"boolean\"})}),(0,e.jsx)(t.td,{children:\"Whether the switch is disabled.\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"false\"})})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"disableAnimation\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"boolean\"})}),(0,e.jsx)(t.td,{children:\"Whether the animation should be disabled.\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"false\"})})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"classNames\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:'Record<\"base\"\\uFF5C \"wrapper\"\\uFF5C \"thumb\"\\uFF5C \"label\" \\uFF5C \"startContent\" \\uFF5C \"endContent\" \\uFF5C \"thumbIcon\" , string>'})}),(0,e.jsx)(t.td,{children:\"Allows to set custom class names for the switch slots.\"}),(0,e.jsx)(t.td,{children:\"-\"})]})]})]}),`\n`,(0,e.jsx)(t.h3,{id:\"switch-events\",children:\"Switch Events\"}),`\n`,(0,e.jsxs)(t.table,{children:[(0,e.jsx)(t.thead,{children:(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.th,{children:\"Attribute\"}),(0,e.jsx)(t.th,{children:\"Type\"}),(0,e.jsx)(t.th,{children:\"Description\"})]})}),(0,e.jsxs)(t.tbody,{children:[(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"onChange\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"React.ChangeEvent<HTMLInputElement>\"})}),(0,e.jsxs)(t.td,{children:[\"Handler that is called when the element's selection state changes. You can pull out the new checked state by accessing \",(0,e.jsx)(t.code,{children:\"event.target.checked\"}),\" (boolean).\"]})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"onValueChange\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"(isSelected: boolean) => void\"})}),(0,e.jsx)(t.td,{children:\"Handler that is called when the element's selection state changes.\"})]})]})]}),`\n`,(0,e.jsx)(t.h3,{id:\"types\",children:\"Types\"}),`\n`,(0,e.jsx)(t.h4,{id:\"switch-icon-props\",children:\"Switch Icon Props\"}),`\n`,(0,e.jsx)(t.pre,{children:(0,e.jsx)(t.code,{className:\"language-ts\",children:`type IconProps = {\n  \"data-checked\": string;\n  width: string;\n  height: string;\n  isSelected: boolean;\n  className: string;\n};\n\ntype CheckboxIconProps = ReactNode | ((props: IconProps) => ReactNode);\n`})})]})}function k(n={}){let{wrapper:t}=n.components||{};return t?(0,e.jsx)(t,{...n,children:(0,e.jsx)(T,{...n})}):T(n)}function d(n,t){throw new Error(\"Expected \"+(t?\"component\":\"object\")+\" `\"+n+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return L(pe);})();\n;return Component;"
  },
  "_id": "docs/components/switch.mdx",
  "_raw": {
    "sourceFilePath": "docs/components/switch.mdx",
    "sourceFileName": "switch.mdx",
    "sourceFileDir": "docs/components",
    "contentType": "mdx",
    "flattenedPath": "docs/components/switch"
  },
  "type": "Doc",
  "slug": "/docs/components/switch",
  "slugAsParams": "components/switch",
  "url": "/docs/components/switch"
}