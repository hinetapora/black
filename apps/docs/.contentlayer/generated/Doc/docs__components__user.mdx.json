{
  "title": "User",
  "description": "Display user information with avatar and name.",
  "body": {
    "raw": "\nimport {userContent} from \"@/content/components/user\";\n\n# User\n\nDisplay user information with avatar and name.\n\n<ComponentLinks component=\"user\" />\n\n---\n\n<CarbonAd/>\n\n## Installation\n\n<PackageManagers\n  showGlobalInstallWarning\n  commands={{\n    cli: \"npx nextui-cli@latest add user\",\n    npm: \"npm install @nextui-org/user\",\n    yarn: \"yarn add @nextui-org/user\",\n    pnpm: \"pnpm add @nextui-org/user\",\n    bun: \"bun add @nextui-org/user\"\n  }}\n/>\n\n\n## Import\n\n<ImportTabs\n  commands={{\n    main: 'import {User} from \"@nextui-org/react\";',\n    individual: 'import {User} from \"@nextui-org/user\";',\n  }}\n/>\n\n## Usage\n\n<CodeDemo title=\"Usage\" files={userContent.usage} />\n\n> **Note**: See the [Avatar](/docs/components/avatar) component for more details about `avatarProps`.\n\n### Link Description\n\n<CodeDemo title=\"Link Description\" files={userContent.linkDescription} />\n\n## Slots\n\n- **base**: The base slot of the user, it is the main container.\n- **wrapper**: The name and description wrapper.\n- **name**: The name of the user.\n- **description**: The description of the user.\n\n<Spacer y={4}/>  \n\n## Data Attributes\n\n`User` has the following attributes on the `root` element only when `isFocusable` is `true`:\n\n- **data-focus**:\n  When the user is being focused. Based on [useFocusRing](https://react-spectrum.adobe.com/react-aria/useFocusRing.html)\n- **data-focus-visible**:\n  When the user is being focused with the keyboard. Based on [useFocusRing](https://react-spectrum.adobe.com/react-aria/useFocusRing.html)\n\n<Spacer y={4}/>  \n\n## API\n\n### User Props\n\n| Attribute   | Type                                                          | Description                                                                                | Default |\n| ----------- | ------------------------------------------------------------- | ------------------------------------------------------------------------------------------ | ------- |\n| name        | `string`                                                      | The name of the user.                                                                      | -       |\n| description | `ReactNode`                                                   | The description component.                                                                 | -       |\n| isFocusable | `boolean`                                                     | Whether the user is focusable. This is useful when using `Dropdown` or similar components. | `false` |\n| avatarProps | [AvatarProps](/docs/components/avatar#avatar-props)           | The avatar component props. The `name` is passed by default.                               | -       |\n| classNames  | `Record<\"base\"｜ \"wrapper\"｜ \"name\"｜ \"description\", string>` | Allows to set custom class names for the user slots.                                       | -       |\n",
    "code": "var Component=(()=>{var v=Object.create;var s=Object.defineProperty;var k=Object.getOwnPropertyDescriptor;var y=Object.getOwnPropertyNames;var D=Object.getPrototypeOf,w=Object.prototype.hasOwnProperty;var A=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),T=(n,e)=>{for(var t in e)s(n,t,{get:e[t],enumerable:!0})},p=(n,e,t,o)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let i of y(e))!w.call(n,i)&&i!==t&&s(n,i,{get:()=>e[i],enumerable:!(o=k(e,i))||o.enumerable});return n};var U=(n,e,t)=>(t=n!=null?v(D(n)):{},p(e||!n||!n.__esModule?s(t,\"default\",{value:n,enumerable:!0}):t,n)),j=n=>p(s({},\"__esModule\",{value:!0}),n);var m=A((M,u)=>{u.exports=_jsx_runtime});var R={};T(R,{default:()=>x,frontmatter:()=>_});var r=U(m());var C=`import {User} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <User   \n      name=\"Jane Doe\"\n      description=\"Product Designer\"\n      avatarProps={{\n        src: \"https://i.pravatar.cc/150?u=a04258114e29026702d\"\n      }}\n    />\n  );\n}`,P={\"/App.jsx\":C},f={...P};var F=`import {User, Link} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <User\n      name=\"Junior Garcia\"\n      description={(\n        <Link href=\"https://x.com/jrgarciadev\" size=\"sm\" isExternal>\n          @jrgarciadev\n        </Link>\n      )}\n      avatarProps={{\n        src: \"https://avatars.githubusercontent.com/u/30373425?v=4\"\n      }}\n    />\n  );\n}`,L={\"/App.jsx\":F},g={...L};var a={usage:f,linkDescription:g};var _={title:\"User\",description:\"Display user information with avatar and name.\"};function b(n){let e={a:\"a\",blockquote:\"blockquote\",code:\"code\",h1:\"h1\",h2:\"h2\",h3:\"h3\",hr:\"hr\",li:\"li\",p:\"p\",strong:\"strong\",table:\"table\",tbody:\"tbody\",td:\"td\",th:\"th\",thead:\"thead\",tr:\"tr\",ul:\"ul\",...n.components},{CarbonAd:t,CodeDemo:o,ComponentLinks:i,ImportTabs:l,PackageManagers:h,Spacer:c}=e;return t||d(\"CarbonAd\",!0),o||d(\"CodeDemo\",!0),i||d(\"ComponentLinks\",!0),l||d(\"ImportTabs\",!0),h||d(\"PackageManagers\",!0),c||d(\"Spacer\",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h1,{id:\"user\",children:\"User\"}),`\n`,(0,r.jsx)(e.p,{children:\"Display user information with avatar and name.\"}),`\n`,(0,r.jsx)(i,{component:\"user\"}),`\n`,(0,r.jsx)(e.hr,{}),`\n`,(0,r.jsx)(t,{}),`\n`,(0,r.jsx)(e.h2,{id:\"installation\",children:\"Installation\"}),`\n`,(0,r.jsx)(h,{showGlobalInstallWarning:!0,commands:{cli:\"npx nextui-cli@latest add user\",npm:\"npm install @nextui-org/user\",yarn:\"yarn add @nextui-org/user\",pnpm:\"pnpm add @nextui-org/user\",bun:\"bun add @nextui-org/user\"}}),`\n`,(0,r.jsx)(e.h2,{id:\"import\",children:\"Import\"}),`\n`,(0,r.jsx)(l,{commands:{main:'import {User} from \"@nextui-org/react\";',individual:'import {User} from \"@nextui-org/user\";'}}),`\n`,(0,r.jsx)(e.h2,{id:\"usage\",children:\"Usage\"}),`\n`,(0,r.jsx)(o,{title:\"Usage\",files:a.usage}),`\n`,(0,r.jsxs)(e.blockquote,{children:[`\n`,(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:\"Note\"}),\": See the \",(0,r.jsx)(e.a,{href:\"/docs/components/avatar\",children:\"Avatar\"}),\" component for more details about \",(0,r.jsx)(e.code,{children:\"avatarProps\"}),\".\"]}),`\n`]}),`\n`,(0,r.jsx)(e.h3,{id:\"link-description\",children:\"Link Description\"}),`\n`,(0,r.jsx)(o,{title:\"Link Description\",files:a.linkDescription}),`\n`,(0,r.jsx)(e.h2,{id:\"slots\",children:\"Slots\"}),`\n`,(0,r.jsxs)(e.ul,{children:[`\n`,(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:\"base\"}),\": The base slot of the user, it is the main container.\"]}),`\n`,(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:\"wrapper\"}),\": The name and description wrapper.\"]}),`\n`,(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:\"name\"}),\": The name of the user.\"]}),`\n`,(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:\"description\"}),\": The description of the user.\"]}),`\n`]}),`\n`,(0,r.jsx)(c,{y:4}),`\n`,(0,r.jsx)(e.h2,{id:\"data-attributes\",children:\"Data Attributes\"}),`\n`,(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.code,{children:\"User\"}),\" has the following attributes on the \",(0,r.jsx)(e.code,{children:\"root\"}),\" element only when \",(0,r.jsx)(e.code,{children:\"isFocusable\"}),\" is \",(0,r.jsx)(e.code,{children:\"true\"}),\":\"]}),`\n`,(0,r.jsxs)(e.ul,{children:[`\n`,(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:\"data-focus\"}),`:\nWhen the user is being focused. Based on `,(0,r.jsx)(e.a,{href:\"https://react-spectrum.adobe.com/react-aria/useFocusRing.html\",children:\"useFocusRing\"})]}),`\n`,(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:\"data-focus-visible\"}),`:\nWhen the user is being focused with the keyboard. Based on `,(0,r.jsx)(e.a,{href:\"https://react-spectrum.adobe.com/react-aria/useFocusRing.html\",children:\"useFocusRing\"})]}),`\n`]}),`\n`,(0,r.jsx)(c,{y:4}),`\n`,(0,r.jsx)(e.h2,{id:\"api\",children:\"API\"}),`\n`,(0,r.jsx)(e.h3,{id:\"user-props\",children:\"User Props\"}),`\n`,(0,r.jsxs)(e.table,{children:[(0,r.jsx)(e.thead,{children:(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.th,{children:\"Attribute\"}),(0,r.jsx)(e.th,{children:\"Type\"}),(0,r.jsx)(e.th,{children:\"Description\"}),(0,r.jsx)(e.th,{children:\"Default\"})]})}),(0,r.jsxs)(e.tbody,{children:[(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:\"name\"}),(0,r.jsx)(e.td,{children:(0,r.jsx)(e.code,{children:\"string\"})}),(0,r.jsx)(e.td,{children:\"The name of the user.\"}),(0,r.jsx)(e.td,{children:\"-\"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:\"description\"}),(0,r.jsx)(e.td,{children:(0,r.jsx)(e.code,{children:\"ReactNode\"})}),(0,r.jsx)(e.td,{children:\"The description component.\"}),(0,r.jsx)(e.td,{children:\"-\"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:\"isFocusable\"}),(0,r.jsx)(e.td,{children:(0,r.jsx)(e.code,{children:\"boolean\"})}),(0,r.jsxs)(e.td,{children:[\"Whether the user is focusable. This is useful when using \",(0,r.jsx)(e.code,{children:\"Dropdown\"}),\" or similar components.\"]}),(0,r.jsx)(e.td,{children:(0,r.jsx)(e.code,{children:\"false\"})})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:\"avatarProps\"}),(0,r.jsx)(e.td,{children:(0,r.jsx)(e.a,{href:\"/docs/components/avatar#avatar-props\",children:\"AvatarProps\"})}),(0,r.jsxs)(e.td,{children:[\"The avatar component props. The \",(0,r.jsx)(e.code,{children:\"name\"}),\" is passed by default.\"]}),(0,r.jsx)(e.td,{children:\"-\"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:\"classNames\"}),(0,r.jsx)(e.td,{children:(0,r.jsx)(e.code,{children:'Record<\"base\"\\uFF5C \"wrapper\"\\uFF5C \"name\"\\uFF5C \"description\", string>'})}),(0,r.jsx)(e.td,{children:\"Allows to set custom class names for the user slots.\"}),(0,r.jsx)(e.td,{children:\"-\"})]})]})]})]})}function x(n={}){let{wrapper:e}=n.components||{};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(b,{...n})}):b(n)}function d(n,e){throw new Error(\"Expected \"+(e?\"component\":\"object\")+\" `\"+n+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return j(R);})();\n;return Component;"
  },
  "_id": "docs/components/user.mdx",
  "_raw": {
    "sourceFilePath": "docs/components/user.mdx",
    "sourceFileName": "user.mdx",
    "sourceFileDir": "docs/components",
    "contentType": "mdx",
    "flattenedPath": "docs/components/user"
  },
  "type": "Doc",
  "slug": "/docs/components/user",
  "slugAsParams": "components/user",
  "url": "/docs/components/user"
}