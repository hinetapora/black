{
  "title": "Skeleton",
  "description": "Skeleton is a placeholder to show a loading state and the expected shape of a component.",
  "body": {
    "raw": "\nimport {skeletonContent} from \"@/content/components/skeleton\";\n\n# Skeleton\n\nSkeleton is a placeholder to show a loading state and the expected shape of a component.\n\n<ComponentLinks component=\"skeleton\" />\n\n---\n\n<CarbonAd/>\n\n## Installation\n\n<PackageManagers\n  showGlobalInstallWarning\n  commands={{\n    cli: \"npx nextui-cli@latest add skeleton\",\n    npm: \"npm install @nextui-org/skeleton\",\n    yarn: \"yarn add @nextui-org/skeleton\",\n    pnpm: \"pnpm add @nextui-org/skeleton\",\n    bun: \"bun add @nextui-org/skeleton\"\n  }}\n/>\n\n## Import\n\n<ImportTabs\n  commands={{\n    main: 'import {Skeleton} from \"@nextui-org/react\";',\n    individual: 'import {Skeleton} from \"@nextui-org/skeleton\";',\n  }}\n/>\n\n## Usage\n\n<CodeDemo title=\"Usage\" files={skeletonContent.usage} />\n\n### Standalone\n\nSkeleton takes the shape of its `children` component by default, but you can also use\nit as a standalone component.\n\n<CodeDemo title=\"Standalone\" files={skeletonContent.standalone} />\n\n### Loaded State\n\nYou can use the `isLoaded` prop to stop the skeleton animation and show the children component.\n\n<CodeDemo title=\"Loaded State\" files={skeletonContent.loaded} />\n\n## Slots\n\n- **base**: The base slot of the skeleton, it contains the `before` and `after` pseudo elements to create the animation.\n- **content**: The wrapped component to show the skeleton shape. It is visible only when the `isLoaded` prop is `true`.\n\n<Spacer y={4}/>  \n\n## Data Attributes\n\n`Skeleton` has the following attributes on the `base` element:\n\n- **data-loaded**:\n  Indicates the loaded state of the skeleton. Based on the `isLoaded` prop.\n\n<Spacer y={4}/>  \n\n## API\n\n### Skeleton Props\n\n| Attribute        | Type                                | Description                                              | Default |\n| ---------------- | ----------------------------------- | -------------------------------------------------------- | ------- |\n| children         | `ReactNode`                         | The content of the skeleton.                             | -       |\n| isLoaded         | `boolean`                           | Whether the skeleton is loaded.                          | `false` |\n| disableAnimation | `boolean`                           | Whether to disable the animations.                       | `false` |\n| classNames       | `Record<\"base\"ï½œ\"content\", string>` | Allows to set custom class names for the skeleton slots. | -       |\n",
    "code": "var Component=(()=>{var b=Object.create;var r=Object.defineProperty;var w=Object.getOwnPropertyDescriptor;var v=Object.getOwnPropertyNames;var N=Object.getPrototypeOf,L=Object.prototype.hasOwnProperty;var y=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),A=(n,e)=>{for(var o in e)r(n,o,{get:e[o],enumerable:!0})},p=(n,e,o,l)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let d of v(e))!L.call(n,d)&&d!==o&&r(n,d,{get:()=>e[d],enumerable:!(l=w(e,d))||l.enumerable});return n};var C=(n,e,o)=>(o=n!=null?b(N(n)):{},p(e||!n||!n.__esModule?r(o,\"default\",{value:n,enumerable:!0}):o,n)),I=n=>p(r({},\"__esModule\",{value:!0}),n);var m=y((E,u)=>{u.exports=_jsx_runtime});var R={};A(R,{default:()=>S,frontmatter:()=>B});var t=C(m());var j=`import {Card, Skeleton} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <Card className=\"w-[200px] space-y-5 p-4\" radius=\"lg\">\n      <Skeleton className=\"rounded-lg\">\n        <div className=\"h-24 rounded-lg bg-default-300\"></div>\n      </Skeleton>\n      <div className=\"space-y-3\">\n        <Skeleton className=\"w-3/5 rounded-lg\">\n          <div className=\"h-3 w-3/5 rounded-lg bg-default-200\"></div>\n        </Skeleton>\n        <Skeleton className=\"w-4/5 rounded-lg\">\n          <div className=\"h-3 w-4/5 rounded-lg bg-default-200\"></div>\n        </Skeleton>\n        <Skeleton className=\"w-2/5 rounded-lg\">  \n          <div className=\"h-3 w-2/5 rounded-lg bg-default-300\"></div>\n        </Skeleton>\n      </div>\n    </Card>\n  );\n}`,_={\"/App.jsx\":j},f={..._};var D=`import {Skeleton} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <div className=\"max-w-[300px] w-full flex items-center gap-3\">\n      <div>\n        <Skeleton className=\"flex rounded-full w-12 h-12\"/>\n      </div>  \n      <div className=\"w-full flex flex-col gap-2\">\n        <Skeleton className=\"h-3 w-3/5 rounded-lg\"/>\n        <Skeleton className=\"h-3 w-4/5 rounded-lg\"/>\n      </div>\n    </div>\n  );\n}`,M={\"/App.jsx\":D},g={...M};var T=`import {Card, Skeleton, Button} from \"@nextui-org/react\";\n\nexport default function App() {\n  const [isLoaded, setIsLoaded] = React.useState(false);\n\n  const toggleLoad = () => {\n    setIsLoaded(!isLoaded);\n  };\n\n  return (\n    <div className=\"flex flex-col gap-3\">\n      <Card className=\"w-[200px] space-y-5 p-4\" radius=\"lg\">\n        <Skeleton isLoaded={isLoaded} className=\"rounded-lg\">\n          <div className=\"h-24 rounded-lg bg-secondary\"></div>\n        </Skeleton>\n        <div className=\"space-y-3\">\n          <Skeleton isLoaded={isLoaded} className=\"w-3/5 rounded-lg\">\n            <div className=\"h-3 w-full rounded-lg bg-secondary\"></div>\n          </Skeleton>\n          <Skeleton isLoaded={isLoaded} className=\"w-4/5 rounded-lg\">\n            <div className=\"h-3 w-full rounded-lg bg-secondary-300\"></div>\n          </Skeleton>\n          <Skeleton isLoaded={isLoaded} className=\"w-2/5 rounded-lg\">\n            <div className=\"h-3 w-full rounded-lg bg-secondary-200\"></div>\n          </Skeleton>\n        </div>\n      </Card>\n      <Button size=\"sm\" variant=\"flat\" color=\"secondary\" onPress={toggleLoad}>\n        {isLoaded ? \"Show\" : \"Hide\"} Skeleton\n      </Button>\n    </div>\n  );\n}`,P={\"/App.jsx\":T},k={...P};var s={usage:f,standalone:g,loaded:k};var B={title:\"Skeleton\",description:\"Skeleton is a placeholder to show a loading state and the expected shape of a component.\"};function x(n){let e={code:\"code\",h1:\"h1\",h2:\"h2\",h3:\"h3\",hr:\"hr\",li:\"li\",p:\"p\",strong:\"strong\",table:\"table\",tbody:\"tbody\",td:\"td\",th:\"th\",thead:\"thead\",tr:\"tr\",ul:\"ul\",...n.components},{CarbonAd:o,CodeDemo:l,ComponentLinks:d,ImportTabs:c,PackageManagers:h,Spacer:i}=e;return o||a(\"CarbonAd\",!0),l||a(\"CodeDemo\",!0),d||a(\"ComponentLinks\",!0),c||a(\"ImportTabs\",!0),h||a(\"PackageManagers\",!0),i||a(\"Spacer\",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h1,{id:\"skeleton\",children:\"Skeleton\"}),`\n`,(0,t.jsx)(e.p,{children:\"Skeleton is a placeholder to show a loading state and the expected shape of a component.\"}),`\n`,(0,t.jsx)(d,{component:\"skeleton\"}),`\n`,(0,t.jsx)(e.hr,{}),`\n`,(0,t.jsx)(o,{}),`\n`,(0,t.jsx)(e.h2,{id:\"installation\",children:\"Installation\"}),`\n`,(0,t.jsx)(h,{showGlobalInstallWarning:!0,commands:{cli:\"npx nextui-cli@latest add skeleton\",npm:\"npm install @nextui-org/skeleton\",yarn:\"yarn add @nextui-org/skeleton\",pnpm:\"pnpm add @nextui-org/skeleton\",bun:\"bun add @nextui-org/skeleton\"}}),`\n`,(0,t.jsx)(e.h2,{id:\"import\",children:\"Import\"}),`\n`,(0,t.jsx)(c,{commands:{main:'import {Skeleton} from \"@nextui-org/react\";',individual:'import {Skeleton} from \"@nextui-org/skeleton\";'}}),`\n`,(0,t.jsx)(e.h2,{id:\"usage\",children:\"Usage\"}),`\n`,(0,t.jsx)(l,{title:\"Usage\",files:s.usage}),`\n`,(0,t.jsx)(e.h3,{id:\"standalone\",children:\"Standalone\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"Skeleton takes the shape of its \",(0,t.jsx)(e.code,{children:\"children\"}),` component by default, but you can also use\nit as a standalone component.`]}),`\n`,(0,t.jsx)(l,{title:\"Standalone\",files:s.standalone}),`\n`,(0,t.jsx)(e.h3,{id:\"loaded-state\",children:\"Loaded State\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"You can use the \",(0,t.jsx)(e.code,{children:\"isLoaded\"}),\" prop to stop the skeleton animation and show the children component.\"]}),`\n`,(0,t.jsx)(l,{title:\"Loaded State\",files:s.loaded}),`\n`,(0,t.jsx)(e.h2,{id:\"slots\",children:\"Slots\"}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:\"base\"}),\": The base slot of the skeleton, it contains the \",(0,t.jsx)(e.code,{children:\"before\"}),\" and \",(0,t.jsx)(e.code,{children:\"after\"}),\" pseudo elements to create the animation.\"]}),`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:\"content\"}),\": The wrapped component to show the skeleton shape. It is visible only when the \",(0,t.jsx)(e.code,{children:\"isLoaded\"}),\" prop is \",(0,t.jsx)(e.code,{children:\"true\"}),\".\"]}),`\n`]}),`\n`,(0,t.jsx)(i,{y:4}),`\n`,(0,t.jsx)(e.h2,{id:\"data-attributes\",children:\"Data Attributes\"}),`\n`,(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.code,{children:\"Skeleton\"}),\" has the following attributes on the \",(0,t.jsx)(e.code,{children:\"base\"}),\" element:\"]}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:\"data-loaded\"}),`:\nIndicates the loaded state of the skeleton. Based on the `,(0,t.jsx)(e.code,{children:\"isLoaded\"}),\" prop.\"]}),`\n`]}),`\n`,(0,t.jsx)(i,{y:4}),`\n`,(0,t.jsx)(e.h2,{id:\"api\",children:\"API\"}),`\n`,(0,t.jsx)(e.h3,{id:\"skeleton-props\",children:\"Skeleton Props\"}),`\n`,(0,t.jsxs)(e.table,{children:[(0,t.jsx)(e.thead,{children:(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.th,{children:\"Attribute\"}),(0,t.jsx)(e.th,{children:\"Type\"}),(0,t.jsx)(e.th,{children:\"Description\"}),(0,t.jsx)(e.th,{children:\"Default\"})]})}),(0,t.jsxs)(e.tbody,{children:[(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:\"children\"}),(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:\"ReactNode\"})}),(0,t.jsx)(e.td,{children:\"The content of the skeleton.\"}),(0,t.jsx)(e.td,{children:\"-\"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:\"isLoaded\"}),(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:\"boolean\"})}),(0,t.jsx)(e.td,{children:\"Whether the skeleton is loaded.\"}),(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:\"false\"})})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:\"disableAnimation\"}),(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:\"boolean\"})}),(0,t.jsx)(e.td,{children:\"Whether to disable the animations.\"}),(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:\"false\"})})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:\"classNames\"}),(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:'Record<\"base\"\\uFF5C\"content\", string>'})}),(0,t.jsx)(e.td,{children:\"Allows to set custom class names for the skeleton slots.\"}),(0,t.jsx)(e.td,{children:\"-\"})]})]})]})]})}function S(n={}){let{wrapper:e}=n.components||{};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(x,{...n})}):x(n)}function a(n,e){throw new Error(\"Expected \"+(e?\"component\":\"object\")+\" `\"+n+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return I(R);})();\n;return Component;"
  },
  "_id": "docs/components/skeleton.mdx",
  "_raw": {
    "sourceFilePath": "docs/components/skeleton.mdx",
    "sourceFileName": "skeleton.mdx",
    "sourceFileDir": "docs/components",
    "contentType": "mdx",
    "flattenedPath": "docs/components/skeleton"
  },
  "type": "Doc",
  "slug": "/docs/components/skeleton",
  "slugAsParams": "components/skeleton",
  "url": "/docs/components/skeleton"
}