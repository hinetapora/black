{
  "title": "Alert",
  "description": "Alerts are temporary notifications that provide concise feedback about an action or event.",
  "body": {
    "raw": "\nimport {alertContent} from \"@/content/components/alert\";\n\n# Alert\n\nAlerts are temporary notifications that provide concise feedback about an action or event.\n\n<ComponentLinks component=\"alert\" />\n\n---\n\n<CarbonAd />\n\n## Installation\n\n<PackageManagers\n  showGlobalInstallWarning\n  commands={{\n    cli: \"npx nextui-cli@latest add alert\",\n    npm: \"npm install @nextui-org/alert\",\n    yarn: \"yarn add @nextui-org/alert\",\n    pnpm: \"pnpm add @nextui-org/alert\",\n    bun: \"bun add @nextui-org/alert\",\n  }}\n/>\n\n## Import\n\n<ImportTabs\n  commands={{\n    main: 'import {Alert} from \"@nextui-org/react\";',\n    individual: 'import {Alert} from \"@nextui-org/alert\";',\n  }}\n/>\n\n## Usage\n\n<CodeDemo title=\"Usage\" files={alertContent.usage} />\n\n### Colors\n\nAlert comes with 6 color variants to convey different meanings.\n\n<CodeDemo title=\"Colors\" files={alertContent.colors} />\n\n### Variants\n\n<CodeDemo title=\"Variants\" files={alertContent.variants} />\n\n### Radius\n\n<CodeDemo title=\"Radius\" files={alertContent.radius} />\n\n### With Icon\n\nBy default, Alert displays an appropriate icon based on the `color` prop. You can override this by providing a custom icon using the `icon` prop.\n\n<CodeDemo title=\"With Icon\" files={alertContent.withIcon} />\n\n### Controlled Visibility\n\nYou can control the alert visibility using the `isVisible` and `onVisibleChange` props.\n\n<CodeDemo title=\"Controlled\" files={alertContent.controlled} />\n\n### Custom Styles\n\nYou can customize the alert by passing custom Tailwind CSS classes to the component slots.\n\n<CodeDemo title=\"Custom Styles\" files={alertContent.customStyles} />\n\n### Custom Implementation\n\nYou can use the `useAlert` hook to create your own alert component.\n\n<CodeDemo showPreview={false} title=\"Custom Implementation\" files={alertContent.customImpl} />\n\n<Spacer y={4} />\n\n## Data Attributes\n\nAlert has the following attributes on the `base` element:\n\n- **data-visible**: When the alert is visible\n- **data-closeable**: When the alert can be closed\n- **data-has-title**: When the alert has a title\n- **data-has-description**: When the alert has a description\n\n<Spacer y={4} />\n\n## Accessibility\n\n- Alert has role of `alert`\n- Close button has aria-label=\"Close\" by default\n- When closed, alert is removed from the DOM\n\n<Spacer y={4} />\n\n## API\n\n### Alert Props\n\n| Attribute        | Type                                                                        | Description                                 | Default   |\n| ---------------- | --------------------------------------------------------------------------- | ------------------------------------------- | --------- |\n| title            | `string`                                                                    | The alert title                             | -         |\n| icon             | `ReactNode`                                                                 | The alert icon - overrides the default icon | -         |\n| description      | `ReactNode`                                                                 | The alert description                       | -         |\n| color            | `default` \\| `primary` \\| `secondary` \\| `success` \\| `warning` \\| `danger` | The alert color theme                       | `default` |\n| variant          | `solid` \\| `bordered` \\| `flat`                                             | The alert variant                           | `flat`    |\n| radius           | `none` \\| `sm` \\| `md` \\| `lg` \\| `full`                                    | The alert border radius                     | `md`      |\n| isVisible        | `boolean`                                                                   | Whether the alert is visible                | -         |\n| isClosable       | `boolean`                                                                   | Whether the alert can be closed             | `false`   |\n| closeButtonProps | `ButtonProps`                                                               | Props for the close button                  | -         |\n\n### Alert Events\n\n| Attribute       | Type                           | Description                                      |\n| --------------- | ------------------------------ | ------------------------------------------------ |\n| onClose         | `() => void`                   | Handler called when the close button is clicked  |\n| onVisibleChange | `(isVisible: boolean) => void` | Handler called when the alert visibility changes |\n",
    "code": "var Component=(()=>{var k=Object.create;var c=Object.defineProperty;var P=Object.getOwnPropertyDescriptor;var M=Object.getOwnPropertyNames;var j=Object.getPrototypeOf,W=Object.prototype.hasOwnProperty;var T=(r,e)=>()=>(e||r((e={exports:{}}).exports,e),e.exports),V=(r,e)=>{for(var o in e)c(r,o,{get:e[o],enumerable:!0})},p=(r,e,o,i)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let l of M(e))!W.call(r,l)&&l!==o&&c(r,l,{get:()=>e[l],enumerable:!(i=P(e,l))||i.enumerable});return r};var N=(r,e,o)=>(o=r!=null?k(j(r)):{},p(e||!r||!r.__esModule?c(o,\"default\",{value:r,enumerable:!0}):o,r)),B=r=>p(c({},\"__esModule\",{value:!0}),r);var f=T((te,u)=>{u.exports=_jsx_runtime});var Q={};V(Q,{default:()=>I,frontmatter:()=>K});var t=N(f());var S=`import {Alert} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <div className=\"flex items-center justify-center w-full\">\n      <div className=\"flex flex-col w-full\">\n        {[\"default\", \"primary\", \"secondary\", \"success\", \"warning\", \"danger\"].map((color) => (\n          <div key={color} className=\"w-full flex items-center my-3\">\n            <Alert \n              color={color} \n              title={\\`This is a \\${color} alert\\`}\n            />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}`,D={\"/App.jsx\":S},m={...D};var R=`import {Alert} from \"@nextui-org/react\";\n\nexport default function App() {\n  const title = \"This is an alert\";\n  const description = \"Thanks for subscribing to our newsletter!\";\n  \n  return (\n    <div className=\"flex items-center justify-center w-full\">\n      <Alert title={title} description={description} />\n    </div>\n  );\n}`,L={\"/App.jsx\":R},b={...L};var _=`import {Alert} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <div className=\"flex items-center justify-center w-full\">\n      <div className=\"flex flex-col w-full\">\n        {[\"none\", \"sm\", \"md\", \"lg\", \"full\"].map((radius) => (\n          <div key={radius} className=\"w-full flex items-center my-3\">\n            <Alert \n              radius={radius} \n              title={\\`This is a \\${radius} radius alert\\`}\n            />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}`,z={\"/App.jsx\":_},g={...z};var Y=`export const InfoCircleIcon = (props) => (\n  <svg\n    fill=\"none\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    width=\"24\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    {...props}\n  >\n    <path\n      d=\"M12 22C17.51 22 22 17.51 22 12C22 6.49 17.51 2 12 2C6.49 2 2 6.49 2 12C2 17.51 6.49 22 12 22ZM12.75 16C12.75 16.41 12.41 16.75 12 16.75C11.59 16.75 11.25 16.41 11.25 16L11.25 11C11.25 10.59 11.59 10.25 12 10.25C12.41 10.25 12.75 10.59 12.75 11L12.75 16ZM11.08 7.62C11.13 7.49 11.2 7.39 11.29 7.29C11.39 7.2 11.5 7.13 11.62 7.08C11.74 7.03 11.87 7 12 7C12.13 7 12.26 7.03 12.38 7.08C12.5 7.13 12.61 7.2 12.71 7.29C12.8 7.39 12.87 7.49 12.92 7.62C12.97 7.74 13 7.87 13 8C13 8.13 12.97 8.26 12.92 8.38C12.87 8.5 12.8 8.61 12.71 8.71C12.61 8.8 12.5 8.87 12.38 8.92C12.14 9.02 11.86 9.02 11.62 8.92C11.5 8.87 11.39 8.8 11.29 8.71C11.2 8.61 11.13 8.5 11.08 8.38C11.03 8.26 11 8.13 11 8C11 7.87 11.03 7.74 11.08 7.62Z\"\n    />\n  </svg>\n);`,E=`export const CloseIcon = (props) => (\n  <svg\n    aria-hidden=\"true\"\n    fill=\"none\"\n    focusable=\"false\"\n    height=\"1em\"\n    role=\"presentation\"\n    stroke=\"currentColor\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n    strokeWidth={2}\n    viewBox=\"0 0 24 24\"\n    width=\"1em\"\n    {...props}\n  >\n    <path d=\"M18 6L6 18M6 6l12 12\" />\n  </svg>\n);`,U=`import React, {forwardRef, useMemo} from \"react\";\nimport {useAlert} from \"@nextui-org/react\";\nimport {InfoCircleIcon} from \"./InfoCircleIcon\";\nimport {CloseIcon} from \"./CloseIcon\"\n\nconst styles = {\n  base: [\n    \"bg-slate-100\",\n    \"border\",\n    \"shadow\",\n    \"hover:bg-slate-200\",\n    \"focus-within:!bg-slate-100\",\n    \"dark:bg-slate-900\",\n    \"dark:hover:bg-slate-800\",\n    \"dark:border-slate-800\",\n    \"dark:focus-within:!bg-slate-900\",\n    \"cursor-pointer\"\n  ],\n  title: [\n    \"text-base\",\n    \"text-slate-500\",\n    \"font-bold\"\n  ],\n  description: [\n    \"text-base\",\n    \"text-slate-500\",\n  ],\n}\n\nconst MyAlert = forwardRef((props, ref) => {\n  const {\n    title,\n    description,\n    isClosable,\n    domRef,\n    handleClose,\n    getBaseProps,\n    getMainWrapperProps,\n    getDescriptionProps,\n    getTitleProps,\n    getCloseButtonProps,\n    color,\n    isVisible,\n    onClose,\n    getCloseIconProps,\n    getAlertIconProps,\n  } = useAlert({\n      ...props,\n      ref,\n      // this is just for the example, the props bellow should be passed by the parent component\n      title: \"Email Sent!!\",\n      description: \"You will get a reply soon\",\n      // custom styles\n      classNames: {\n        ...styles,\n      },\n    });\n\n  const mainWrapper = useMemo(() => {\n    return (\n      <div {...getMainWrapperProps()}>\n        {title && <div {...getTitleProps()}>{title}</div>}\n        <div {...getDescriptionProps()}>{description}</div>\n      </div>\n    );\n  }, [title, description, getMainWrapperProps, getTitleProps, getDescriptionProps]);\n\n  const baseWrapper = useMemo(() => {\n    return isVisible ? (\n      <div ref={domRef} {...getBaseProps()}>\n        <InfoCircleIcon {...getAlertIconProps()} />\n        {mainWrapper}\n        {(isClosable || onClose) && (\n          <button onClick={handleClose} {...getCloseButtonProps()}>\n            <CloseIcon />\n          </button>\n        )}\n      </div>\n    ) : null;\n  }, [\n    mainWrapper,\n    isClosable,\n    getCloseButtonProps,\n    isVisible,\n    domRef,\n    getBaseProps,\n    handleClose,\n    color,\n    onClose,\n    getAlertIconProps,\n  ]);\n\n  return <>{baseWrapper}</>;\n});\n\nMyAlert.displayName = \"MyAlert\";\n\nexport default MyAlert;`,Z={\"/App.jsx\":U,\"/InfoCircleIcon\":Y,\"/CloseIcon\":E},x={...Z};var F=`import {Alert} from \"@nextui-org/react\";\n\nexport default function App() {\n  const title = \"Success\";\n  const description = \"Thanks for subscribing to our newsletter!\";\n  \n  return (\n    <div className=\"flex items-center justify-center w-full\">\n      <Alert\n        title={title}\n        description={description}\n        classNames={{\n           base: [\n            \"bg-background\",\n            \"border\",\n            \"border-foreground-400\",\n            \"shadow\",\n            \"hover:bg-slate-200\",\n            \"cursor-pointer\",\n          ],\n          title: [\"text-base\", \"text-foreground\", \"font-semibold\"],\n          description: [\"text-base\", \"text-foreground-600\"],\n        }}\n      />\n    </div>\n  );\n}`,H={\"/App.jsx\":F},v={...H};var X=`import {Alert} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <div className=\"flex flex-col gap-4 w-full\">\n      <Alert variant=\"solid\">\n        A solid variant alert\n      </Alert>\n      <Alert variant=\"bordered\">\n        A bordered variant alert\n      </Alert>\n      <Alert variant=\"flat\">\n        A flat variant alert\n      </Alert>\n    </div>\n  );\n}`,$={\"/App.jsx\":X},C={...$};var G=`import {Alert} from \"@nextui-org/react\";\n\nconst UserIcon = ({\n  fill = 'currentColor',\n  filled,\n  size,\n  height,\n  width,\n  label,\n  ...props\n}) => {\n  return (\n    <svg\n      data-name=\"Iconly/Curved/Profile\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      width={size || width || 24}\n      height={size || height || 24}\n      {...props}\n    >\n      <g\n        fill=\"none\"\n        stroke={fill}\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeMiterlimit={10}\n        strokeWidth={1.5}\n      >\n        <path\n          data-name=\"Stroke 1\"\n          d=\"M11.845 21.662C8.153 21.662 5 21.088 5 18.787s3.133-4.425 6.845-4.425c3.692 0 6.845 2.1 6.845 4.4s-3.134 2.9-6.845 2.9z\"\n        />\n        <path\n          data-name=\"Stroke 3\"\n          d=\"M11.837 11.174a4.372 4.372 0 10-.031 0z\"\n        />\n      </g>\n    </svg>\n  );\n};\n\nexport default function App() {\n  return (\n    <Alert icon={<UserIcon />}>An alert with a custom icon</Alert>\n  );\n}`,O={\"/App.jsx\":G},A={...O};var q=`import {Alert, Button} from \"@nextui-org/react\";\n\nexport default function App() {\n  const [isVisible, setIsVisible] = React.useState(true);\n\n  const title = \"Success Notification\";\n  const description = \"Your action has been completed successfully. We'll notify you when updates are available.\";\n\n  return (\n    <div className=\"flex flex-col gap-4\">\n      {isVisible ? (\n        <Alert \n          title={title}\n          description={description}\n          isVisible={isVisible} \n          onClose={() => setIsVisible(false)}\n        />\n      ) : (\n        <Button \n          variant=\"bordered\" \n          onPress={() => setIsVisible(true)}\n        >\n          Show Alert\n        </Button>\n      )}\n    </div>\n  );\n}`,J={\"/App.jsx\":q},y={...J};var n={colors:m,usage:b,radius:g,customImpl:x,customStyles:v,variants:C,withIcon:A,controlled:y};var K={title:\"Alert\",description:\"Alerts are temporary notifications that provide concise feedback about an action or event.\"};function w(r){let e={code:\"code\",h1:\"h1\",h2:\"h2\",h3:\"h3\",hr:\"hr\",li:\"li\",p:\"p\",strong:\"strong\",table:\"table\",tbody:\"tbody\",td:\"td\",th:\"th\",thead:\"thead\",tr:\"tr\",ul:\"ul\",...r.components},{CarbonAd:o,CodeDemo:i,ComponentLinks:l,ImportTabs:a,PackageManagers:h,Spacer:d}=e;return o||s(\"CarbonAd\",!0),i||s(\"CodeDemo\",!0),l||s(\"ComponentLinks\",!0),a||s(\"ImportTabs\",!0),h||s(\"PackageManagers\",!0),d||s(\"Spacer\",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h1,{id:\"alert\",children:\"Alert\"}),`\n`,(0,t.jsx)(e.p,{children:\"Alerts are temporary notifications that provide concise feedback about an action or event.\"}),`\n`,(0,t.jsx)(l,{component:\"alert\"}),`\n`,(0,t.jsx)(e.hr,{}),`\n`,(0,t.jsx)(o,{}),`\n`,(0,t.jsx)(e.h2,{id:\"installation\",children:\"Installation\"}),`\n`,(0,t.jsx)(h,{showGlobalInstallWarning:!0,commands:{cli:\"npx nextui-cli@latest add alert\",npm:\"npm install @nextui-org/alert\",yarn:\"yarn add @nextui-org/alert\",pnpm:\"pnpm add @nextui-org/alert\",bun:\"bun add @nextui-org/alert\"}}),`\n`,(0,t.jsx)(e.h2,{id:\"import\",children:\"Import\"}),`\n`,(0,t.jsx)(a,{commands:{main:'import {Alert} from \"@nextui-org/react\";',individual:'import {Alert} from \"@nextui-org/alert\";'}}),`\n`,(0,t.jsx)(e.h2,{id:\"usage\",children:\"Usage\"}),`\n`,(0,t.jsx)(i,{title:\"Usage\",files:n.usage}),`\n`,(0,t.jsx)(e.h3,{id:\"colors\",children:\"Colors\"}),`\n`,(0,t.jsx)(e.p,{children:\"Alert comes with 6 color variants to convey different meanings.\"}),`\n`,(0,t.jsx)(i,{title:\"Colors\",files:n.colors}),`\n`,(0,t.jsx)(e.h3,{id:\"variants\",children:\"Variants\"}),`\n`,(0,t.jsx)(i,{title:\"Variants\",files:n.variants}),`\n`,(0,t.jsx)(e.h3,{id:\"radius\",children:\"Radius\"}),`\n`,(0,t.jsx)(i,{title:\"Radius\",files:n.radius}),`\n`,(0,t.jsx)(e.h3,{id:\"with-icon\",children:\"With Icon\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"By default, Alert displays an appropriate icon based on the \",(0,t.jsx)(e.code,{children:\"color\"}),\" prop. You can override this by providing a custom icon using the \",(0,t.jsx)(e.code,{children:\"icon\"}),\" prop.\"]}),`\n`,(0,t.jsx)(i,{title:\"With Icon\",files:n.withIcon}),`\n`,(0,t.jsx)(e.h3,{id:\"controlled-visibility\",children:\"Controlled Visibility\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"You can control the alert visibility using the \",(0,t.jsx)(e.code,{children:\"isVisible\"}),\" and \",(0,t.jsx)(e.code,{children:\"onVisibleChange\"}),\" props.\"]}),`\n`,(0,t.jsx)(i,{title:\"Controlled\",files:n.controlled}),`\n`,(0,t.jsx)(e.h3,{id:\"custom-styles\",children:\"Custom Styles\"}),`\n`,(0,t.jsx)(e.p,{children:\"You can customize the alert by passing custom Tailwind CSS classes to the component slots.\"}),`\n`,(0,t.jsx)(i,{title:\"Custom Styles\",files:n.customStyles}),`\n`,(0,t.jsx)(e.h3,{id:\"custom-implementation\",children:\"Custom Implementation\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"You can use the \",(0,t.jsx)(e.code,{children:\"useAlert\"}),\" hook to create your own alert component.\"]}),`\n`,(0,t.jsx)(i,{showPreview:!1,title:\"Custom Implementation\",files:n.customImpl}),`\n`,(0,t.jsx)(d,{y:4}),`\n`,(0,t.jsx)(e.h2,{id:\"data-attributes\",children:\"Data Attributes\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"Alert has the following attributes on the \",(0,t.jsx)(e.code,{children:\"base\"}),\" element:\"]}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:\"data-visible\"}),\": When the alert is visible\"]}),`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:\"data-closeable\"}),\": When the alert can be closed\"]}),`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:\"data-has-title\"}),\": When the alert has a title\"]}),`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:\"data-has-description\"}),\": When the alert has a description\"]}),`\n`]}),`\n`,(0,t.jsx)(d,{y:4}),`\n`,(0,t.jsx)(e.h2,{id:\"accessibility\",children:\"Accessibility\"}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsxs)(e.li,{children:[\"Alert has role of \",(0,t.jsx)(e.code,{children:\"alert\"})]}),`\n`,(0,t.jsx)(e.li,{children:'Close button has aria-label=\"Close\" by default'}),`\n`,(0,t.jsx)(e.li,{children:\"When closed, alert is removed from the DOM\"}),`\n`]}),`\n`,(0,t.jsx)(d,{y:4}),`\n`,(0,t.jsx)(e.h2,{id:\"api\",children:\"API\"}),`\n`,(0,t.jsx)(e.h3,{id:\"alert-props\",children:\"Alert Props\"}),`\n`,(0,t.jsxs)(e.table,{children:[(0,t.jsx)(e.thead,{children:(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.th,{children:\"Attribute\"}),(0,t.jsx)(e.th,{children:\"Type\"}),(0,t.jsx)(e.th,{children:\"Description\"}),(0,t.jsx)(e.th,{children:\"Default\"})]})}),(0,t.jsxs)(e.tbody,{children:[(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:\"title\"}),(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:\"string\"})}),(0,t.jsx)(e.td,{children:\"The alert title\"}),(0,t.jsx)(e.td,{children:\"-\"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:\"icon\"}),(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:\"ReactNode\"})}),(0,t.jsx)(e.td,{children:\"The alert icon - overrides the default icon\"}),(0,t.jsx)(e.td,{children:\"-\"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:\"description\"}),(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:\"ReactNode\"})}),(0,t.jsx)(e.td,{children:\"The alert description\"}),(0,t.jsx)(e.td,{children:\"-\"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:\"color\"}),(0,t.jsxs)(e.td,{children:[(0,t.jsx)(e.code,{children:\"default\"}),\" | \",(0,t.jsx)(e.code,{children:\"primary\"}),\" | \",(0,t.jsx)(e.code,{children:\"secondary\"}),\" | \",(0,t.jsx)(e.code,{children:\"success\"}),\" | \",(0,t.jsx)(e.code,{children:\"warning\"}),\" | \",(0,t.jsx)(e.code,{children:\"danger\"})]}),(0,t.jsx)(e.td,{children:\"The alert color theme\"}),(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:\"default\"})})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:\"variant\"}),(0,t.jsxs)(e.td,{children:[(0,t.jsx)(e.code,{children:\"solid\"}),\" | \",(0,t.jsx)(e.code,{children:\"bordered\"}),\" | \",(0,t.jsx)(e.code,{children:\"flat\"})]}),(0,t.jsx)(e.td,{children:\"The alert variant\"}),(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:\"flat\"})})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:\"radius\"}),(0,t.jsxs)(e.td,{children:[(0,t.jsx)(e.code,{children:\"none\"}),\" | \",(0,t.jsx)(e.code,{children:\"sm\"}),\" | \",(0,t.jsx)(e.code,{children:\"md\"}),\" | \",(0,t.jsx)(e.code,{children:\"lg\"}),\" | \",(0,t.jsx)(e.code,{children:\"full\"})]}),(0,t.jsx)(e.td,{children:\"The alert border radius\"}),(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:\"md\"})})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:\"isVisible\"}),(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:\"boolean\"})}),(0,t.jsx)(e.td,{children:\"Whether the alert is visible\"}),(0,t.jsx)(e.td,{children:\"-\"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:\"isClosable\"}),(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:\"boolean\"})}),(0,t.jsx)(e.td,{children:\"Whether the alert can be closed\"}),(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:\"false\"})})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:\"closeButtonProps\"}),(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:\"ButtonProps\"})}),(0,t.jsx)(e.td,{children:\"Props for the close button\"}),(0,t.jsx)(e.td,{children:\"-\"})]})]})]}),`\n`,(0,t.jsx)(e.h3,{id:\"alert-events\",children:\"Alert Events\"}),`\n`,(0,t.jsxs)(e.table,{children:[(0,t.jsx)(e.thead,{children:(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.th,{children:\"Attribute\"}),(0,t.jsx)(e.th,{children:\"Type\"}),(0,t.jsx)(e.th,{children:\"Description\"})]})}),(0,t.jsxs)(e.tbody,{children:[(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:\"onClose\"}),(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:\"() => void\"})}),(0,t.jsx)(e.td,{children:\"Handler called when the close button is clicked\"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:\"onVisibleChange\"}),(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:\"(isVisible: boolean) => void\"})}),(0,t.jsx)(e.td,{children:\"Handler called when the alert visibility changes\"})]})]})]})]})}function I(r={}){let{wrapper:e}=r.components||{};return e?(0,t.jsx)(e,{...r,children:(0,t.jsx)(w,{...r})}):w(r)}function s(r,e){throw new Error(\"Expected \"+(e?\"component\":\"object\")+\" `\"+r+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return B(Q);})();\n;return Component;"
  },
  "_id": "docs/components/alert.mdx",
  "_raw": {
    "sourceFilePath": "docs/components/alert.mdx",
    "sourceFileName": "alert.mdx",
    "sourceFileDir": "docs/components",
    "contentType": "mdx",
    "flattenedPath": "docs/components/alert"
  },
  "type": "Doc",
  "slug": "/docs/components/alert",
  "slugAsParams": "components/alert",
  "url": "/docs/components/alert"
}