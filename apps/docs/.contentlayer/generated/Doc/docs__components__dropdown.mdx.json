{
  "title": "Dropdown",
  "description": "Displays a list of actions or options that a user can choose.",
  "body": {
    "raw": "\nimport {dropdownContent} from \"@/content/components/dropdown\";\n\n# Dropdown\n\nDisplays a list of actions or options that a user can choose.\n\n<ComponentLinks component=\"dropdown\" reactAriaHook=\"useMenu\" />\n\n---\n\n<CarbonAd/>\n\n## Installation\n\n<PackageManagers\n  showGlobalInstallWarning\n  commands={{\n    cli: \"npx nextui-cli@latest add dropdown\",\n    npm: \"npm install @nextui-org/dropdown\",\n    yarn: \"yarn add @nextui-org/dropdown\",\n    pnpm: \"pnpm add @nextui-org/dropdown\",\n    bun: \"bun add @nextui-org/dropdown\"\n  }}\n/>\n\n\n## Import\n\nNextUI exports 5 dropdown-related components:\n\n- **Dropdown**: The main component, which is a wrapper for the other components. This component is an extension of the [Popover](/docs/components/popover) component, so it accepts all the props of the Popover component.\n- **DropdownTrigger**: The component that triggers the dropdown menu to open.\n- **DropdownMenu**: The component that contains the dropdown items.\n- **DropdownSection**: The component that contains a group of dropdown items.\n- **DropdownItem**: The component that represents a dropdown item.\n\n<ImportTabs\n  commands={{\n    main: `import {\n  Dropdown,\n  DropdownTrigger,\n  DropdownMenu,\n  DropdownSection,\n  DropdownItem\n} from \"@nextui-org/react\";`,\n    individual: `import {\n  Dropdown,\n  DropdownTrigger,\n  DropdownMenu,\n  DropdownSection,\n  DropdownItem\n} from \"@nextui-org/dropdown\";`,\n  }}\n/>\n\n## Usage\n\n<CodeDemo title=\"Usage\" files={dropdownContent.usage} />\n\n### Dynamic items\n\nDropdown follows the [Collection Components API](https://react-spectrum.adobe.com/react-stately/collections.html), accepting both static and dynamic collections.\n\n- **Static**: The usage example above shows the static implementation, which can be used when the full list of options is known ahead of time.\n- **Dynamic**: The example below can be used when the options come from an external data source such as an API call, or update over time.\n\n<CodeDemo title=\"Dynamic items\" files={dropdownContent.dynamic} />\n\n### Disabled Keys\n\nDropdown items can be disabled using the `disabledKeys` prop to the `DropdownMenu` component.\n\n<CodeDemo title=\"Disabled Keys\" highlightedLines=\"17\" files={dropdownContent.disabledKeys} />\n\n> **Note**: It's important to have a unique key for each item, otherwise the disabled keys will not work.\n\n### Action event\n\nYou can use the `onAction` prop to get the key of the selected item.\n\n<CodeDemo title=\"Action event\" highlightedLines=\"15\" files={dropdownContent.action} />\n\n### Variants\n\nYou can use the `variant` in the `DropdownMenu` component to change the `hover` style of the dropdown items.\n\n<CodeDemo title=\"Variants\" highlightedLines=\"21-22\" files={dropdownContent.variants} />\n\n### Single Selection\n\nYou can set the `selectionMode` property as `single` to allow the user to select only one item at a time.\n\n<CodeDemo\n  title=\"Single Selection\"\n  files={dropdownContent.singleSelection}\n/>\n\n### Multiple Selection\n\nYou can set the `selectionMode` property as `multiple` to allow the user to select multiple items at a time.\n\n<CodeDemo\n  title=\"Multiple Selection\"\n  files={dropdownContent.multipleSelection}\n/>\n\n> **Note**: To allow empty selection, you can set the `disallowEmptySelection` property as `false`.\n\n### With Shortcut\n\nYou can use the `shortcut` prop to add a shortcut to the dropdown item.\n\n<CodeDemo title=\"With Shortcut\" highlightedLines=\"14-19\" files={dropdownContent.shortcut} />\n\n> **Note**: Dropdown does not handle the shortcut event, you need to handle it yourself.\n\n### With Icons\n\nIt is possible to add icons to the dropdown items using the `startContent` / `endContent` props.\n\n<CodeDemo title=\"With Icons\" highlightedLines=\"23,30,37,47\" files={dropdownContent.icons} />\n\n> **Note**: If you use `currentColor` as the icon color, the icon will have the same color as the item text.\n\n### With Description\n\nYou can use the `description` prop to add a description to the dropdown item.\n\n<CodeDemo\n  title=\"With Description\"\n  highlightedLines=\"23,31,39,50\"\n  files={dropdownContent.description}\n/>\n\n### With Sections\n\nYou can use the `DropdownSection` component to group dropdown items.\n\n<CodeDemo title=\"With Sections\" highlightedLines=\"20,46\" files={dropdownContent.sections} />\n\n> **Note**: Sections without a `title` must provide an `aria-label` for accessibility.\n\n### Custom Trigger\n\nYou can use any component as a trigger for the dropdown menu, just wrap it in the `DropdownTrigger` component.\n\n<CodeDemo title=\"Custom Trigger\" highlightedLines=\"17-18\" files={dropdownContent.customTrigger} />\n\n### Changing the backdrop\n\nAs we mentioned earlier, the `Dropdown` component is an extension of the [Popover](/docs/components/popover) component,\nso it accepts all the props of the Popover component, including the `backdrop` prop.\n\n<CodeDemo title=\"Changing the backdrop\" highlightedLines=\"17\" files={dropdownContent.backdrop} />\n\n### Routing\n\nThe `<DropdownItem>` component works with frameworks and client side routers like [Next.js](https://nextjs.org/) and\n[React Router](https://reactrouter.com/en/main). See the [Routing](/docs/guide/routing) guide to learn how to set this up.\n\n```jsx\nimport {Dropdown, DropdownMenu, DropdownTrigger, DropdownItem, Button} from \"@nextui-org/react\";\n\nfunction App() {\n  return (\n    <Dropdown>\n      <DropdownTrigger>\n        <Button variant=\"bordered\">Open Menu</Button>\n      </DropdownTrigger>\n      <DropdownMenu aria-label=\"Link Actions\">\n        <DropdownItem key=\"home\" href=\"/home\">\n          Home\n        </DropdownItem>\n        <DropdownItem key=\"about\" href=\"/about\">\n          About\n        </DropdownItem>\n      </DropdownMenu>\n    </Dropdown>\n  );\n}\n```\n\n## Slots\n\nDropdown has 3 components with slots the `DropdownMenu`, `DropdownItem` and `DropdownSection` components.\n\n### DropdownMenu\n\n- **base**: The main wrapper for the menu component. This slot wraps the `topContent`, `bottomContent` and the `list` slot.\n- **list**: The slot for the menu list component. You can see this slot as the `ul` slot.\n- **emptyContent**: The slot content to display when the collection is empty.\n\n### DropdownItem\n\n- **base**: The main slot for the dropdown item. It wraps all the other slots.\n- **wrapper**: The `title` and `description` wrapper.\n- **title**: The title of the dropdown item.\n- **description**: The description of the dropdown item.\n- **shortcut**: The shortcut slot.\n- **selectedIcon**: The selected icon slot. This is only visible when the item is selected.\n\n### DropdownSection\n\n- **base**: The main slot for the dropdown section. It wraps all the other slots.\n- **heading**: The title that is render on top of the section group.\n- **group**: The group of dropdown items.\n- **divider**: The divider that is render between the groups. This is only visible when `showDivider` is `true`.\n\n### Customizing the dropdown popover\n\nThe `Dropdown` component is an extension of the [Popover](/docs/components/popover) component, so you can use the same\nslots to customize the dropdown.\n\n<CodeDemo\n  title=\"Custom Popover Styles\"\n  highlightedLines=\"14-15\"\n  files={dropdownContent.customPopoverStyles}\n/>\n\n### Customizing the dropdown items style\n\nYou can customize the dropdown items either by using the `DropdownMenu` `itemClasses` prop or by using the\n`DropdownItem` slots, the `itemClasses` allows you to customize all the items at once, while the slots allow\nyou to customize each item individually.\n\n<CodeDemo title=\"Custom Dropdown Items Styles\" files={dropdownContent.customItemsStyles} />\n\n<Spacer y={4} />\n\n### Keyboard Interactions\n\n| Key                              | Description                                                                                                                                   |\n| -------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------- |\n| <Kbd>Space</Kbd>                 | When focus is on `DropdownTrigger`, opens the dropdown menu and focuses the first item. When focus is on an item, activates the focused item. |\n| <Kbd>Enter</Kbd>                 | When focus is on `DropdownTrigger`, opens the dropdown menu and focuses the first item. When focus is on an item, activates the focused item. |\n| <Kbd>ArrowDown</Kbd>             | When focus is on `DropdownTrigger`, opens the dropdown menu. When focus is on an item, moves focus to the next item.                          |\n| <Kbd>ArrowUp</Kbd>               | When focus is on an item, moves focus to the previous item.                                                                                   |\n| <Kbd>Esc</Kbd>                   | Closes the dropdown menu and moves focus to `DropdownTrigger`.                                                                                |\n| <Kbd>A-Z</Kbd> or <Kbd>a-z</Kbd> | When the menu is open, moves focus to the next menu item with a label that starts with the typed character if such an menu item exists.       |\n\n<Spacer y={4} />\n\n## Data Attributes\n\n`DropdownItem` has the following attributes on the `base` element:\n\n- **data-disabled**:\n  When the dropdown item is disabled. Based on dropdown `disabledKeys` prop.\n- **data-selected**:\n  When the dropdown item is selected. Based on dropdown `selectedKeys` prop.\n- **data-hover**:\n  When the dropdown item is being hovered. Based on [useHover](https://react-spectrum.adobe.com/react-aria/useHover.html)\n- **data-pressed**:\n  When the dropdown item is pressed. Based on [usePress](https://react-spectrum.adobe.com/react-aria/usePress.html)\n- **data-focus**:\n  When the dropdown item is being focused. Based on [useFocusRing](https://react-spectrum.adobe.com/react-aria/useFocusRing.html).\n- **data-focus-visible**:\n  When the dropdown item is being focused with the keyboard. Based on [useFocusRing](https://react-spectrum.adobe.com/react-aria/useFocusRing.html).\n\n<Spacer y={4} />\n\n## Accessibility\n\n- Exposed to assistive technology as a `button` with a `menu` using ARIA.\n- Support for single, multiple, or no selection.\n- Support for disabled items.\n- Support for sections.\n- Complex item labeling support for accessibility.\n- Keyboard navigation support including arrow keys, home/end, page up/down. See [Keyboard Interactions](#keyboard-interactions) for more details.\n- Automatic scrolling support during keyboard navigation.\n- Keyboard support for opening the menu using the arrow keys, including automatically focusing the first or last item accordingly.\n- Typeahead to allow focusing items by typing text.\n- Virtualized scrolling support for performance with long lists.\n\n<Spacer y={4} />\n\n## API\n\n### Dropdown Props\n\n| Attribute         | Type                                     | Description                                                                                           | Default |\n| ----------------- | ---------------------------------------- | ----------------------------------------------------------------------------------------------------- | ------- |\n| children\\*        | `ReactNode[]`                            | The children to render. Usually a `DropdownTrigger` and `DropdownMenu` elements.                      | -       |\n| type              | `menu` \\| `listbox`                      | Type of overlay that is opened by the dropdown trigger.                                               | `menu`  |\n| trigger           | `press` \\| `longPress`                   | How the dropdown menu is triggered.                                                                   | `press` |\n| isDisabled        | `boolean`                                | Whether the dropdown trigger is disabled.                                                             | `false` |\n| closeOnSelect     | `boolean`                                | Whether the dropdown menu should be closed when an item is selected.                                  | `true`  |\n| shouldBlockScroll | `boolean`                                | Whether the dropdown menu should block scrolling outside the menu.                                    | `true`  |\n| PopoverProps      | [PopoverProps](/docs/components/popover) | Since the dropdown is an extension of the popover, it accepts all the props of the popover component. | -       |\n\n### Dropdown Events\n\n| Attribute                    | Type                        | Description                                                                                                             |\n| ---------------------------- | --------------------------- | ----------------------------------------------------------------------------------------------------------------------- |\n| onOpenChange                 | `(isOpen: boolean) => void` | Handler that is called when the dropdown's open state changes.                                                          |\n| shouldCloseOnInteractOutside | `(e: HTMLElement) => void`  | When user interacts with the argument element outside of the dropdown ref, return `true` if `onClose` should be called. |\n| onClose                      | `() => void`                | Handler that is called when the dropdown should close.                                                                  |\n\n---\n\n### DropdownTrigger Props\n\n| Attribute | Type        | Description                                                                                                                                                                   | Default |\n| --------- | ----------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------- |\n| children  | `ReactNode` | The dropdown trigger component, ensure the `children` passed is focusable. Users can tab to it using their keyboard, and it can take a ref. It is critical for accessibility. | -       |\n\n---\n\n### DropdownMenu Props\n\n| Attribute              | Type                                                                                                   | Description                                                                                             |             |\n| ---------------------- | ------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------- | ----------- |\n| children\\*             | `ReactNode` \\| `((item: T) => ReactElement)`                                                           | The contents of the collection. It's usually the `DropdownItem` or `DropdownSection`. (static)          | -           |\n| items                  | [`Iterable<T>`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols) | Item objects in the collection. (dynamic)                                                               | -           |\n| variant                | `solid` \\| `bordered` \\| `light` \\| `flat` \\| `faded` \\| `shadow`                                      | The dropdown items appearance style.                                                                    | `solid`     |\n| color                  | `default` \\| `primary` \\| `secondary` \\| `success` \\| `warning` \\| `danger`                            | The dropdown items color theme.                                                                         | `default`   |\n| selectionMode          | `none` \\| `single` \\| `multiple`                                                                       | The type of selection that is allowed in the collection.                                                | -           |\n| selectedKeys           | `all` \\| `Iterable<React.Key>`                                                                                          | The currently selected keys in the collection (controlled).                                             | -           |\n| disabledKeys           | `Iterable<React.Key>`                                                                                          | The item keys that are disabled. These items cannot be selected, focused, or otherwise interacted with. | -           |\n| defaultSelectedKeys    | `all` \\| `Iterable<React.Key>`                                                                                 | The initial selected keys in the collection (uncontrolled).                                             | -           |\n| disallowEmptySelection | `boolean`                                                                                              | Whether the collection allows empty selection.                                                          | `false`     |\n| autoFocus              | `boolean` \\| `first` \\| `last`                                                                         | Where the focus should be set.                                                                          | `false`     |\n| topContent             | `ReactNode`                                                                                            | The content to display above the listbox items.                                                         | -           |\n| bottomContent          | `ReactNode`                                                                                            | The content to display below the listbox items.                                                         | -           |\n| emptyContent           | `ReactNode`                                                                                            | The content to display when the collection is empty.                                                    | `No items.` |\n| hideEmptyContent       | `boolean`                                                                                              | Whether to not display the empty content when the collection is empty.                                  | `false`     |\n| hideSelectedIcon       | `boolean`                                                                                              | Whether to hide the check icon when the items are selected.                                             | `false`     |\n| shouldFocusWrap        | `boolean`                                                                                              | Whether keyboard navigation is circular.                                                                | `false`     |\n| closeOnSelect          | `boolean`                                                                                              | Whether the dropdown menu should be closed when an item is selected.                                    | `true`      |\n| disableAnimation       | `boolean`                                                                                              | Whether to disable the animation of the dropdown items.                                                 | `false`     |\n| classNames             | `Record<\"base\"｜ \"list\"｜ \"emptyContent\", string>`                                                     | Allows to set custom class names for the dropdown menu slots.                                           | -           |\n| itemClasses            | `Record<\"base\"｜ \"wrapper\"｜ \"title\"｜ \"description\"｜ \"shortcut\" ｜ \"selectedIcon\", string>`          | Allows to set custom class names for the dropdown item slots.                                           | -           |\n\n### DropdownMenu Events\n\n| Attribute         | Type                          | Description                                                                |\n| ----------------- | ----------------------------- | -------------------------------------------------------------------------- |\n| onAction          | `(key: React.Key) => void`    | Handler that is called when an item is selected.                           |\n| onSelectionChange | `(keys: \"all\" \\| Set<React.Key> & {anchorKey?: string; currentKey?: string}) => void` | Handler that is called when the selection changes.                         |\n| onClose           | `() => void`                  | Handler that is called when the menu should close after selecting an item. |\n\n---\n\n### DropdownSection Props\n\n| Attribute        | Type                                                                                                   | Description                                                                                 | Default |\n| ---------------- | ------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------- | ------- |\n| children\\*       | `ReactNode`                                                                                            | The contents of the dropdown section. Usually a list of `DropdownItem` components. (static) | -       |\n| title            | `string`                                                                                               | The title of the dropdown section.                                                          | -       |\n| items            | [`Iterable<T>`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols) | Item objects in the collection. (dynamic)                                                   | -       |\n| hideSelectedIcon | `boolean`                                                                                              | Whether to hide the check icon when the items are selected.                                 | `false` |\n| showDivider      | `boolean`                                                                                              | Whether to show the divider between the groups.                                             | `false` |\n| dividerProps     | [DividerProps](/docs/components/divider)                                                               | The divider component props.                                                                | -       |\n| classNames       | `Record<\"base\"｜ \"heading\"｜ \"group\"｜ \"divider\", string>`                                             | Allows to set custom class names for the dropdown section slots.                            | -       |\n| itemClasses      | `Record<\"base\"｜ \"wrapper\"｜ \"title\"｜ \"description\"｜ \"shortcut\" ｜ \"selectedIcon\", string>`          | Allows to set custom class names for the dropdown item slots.                               | -       |\n\n---\n\n### DropdownItem Props\n\n| Attribute        | Type                                                                                          | Description                                                                                                                                                                      | Default |\n| ---------------- | --------------------------------------------------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------- |\n| children\\*       | `ReactNode`                                                                                   | The contents of the dropdown item.                                                                                                                                               | -       |\n| key              | `React.Key`                                                                                   | The unique key for the dropdown item.                                                                                                                                            | -       |\n| title            | `string` \\| `ReactNode`                                                                       | The title of the dropdown item.                                                                                                                                                  | -       |\n| textValue        | `string`                                                                                      | A string representation of the item's contents, used for features like typeahead.                                                                                                | -       |\n| description      | `string` \\| `ReactNode`                                                                       | The description of the dropdown item.                                                                                                                                            | -       |\n| shortcut         | `string` \\| `ReactNode`                                                                       | The dropdown item keyboard shortcut.                                                                                                                                             | -       |\n| startContent     | `ReactNode`                                                                                   | The start content of the dropdown item.                                                                                                                                          | -       |\n| endContent       | `ReactNode`                                                                                   | The end content of the dropdown item. This is positioned after the shortcut and the selected icon.                                                                               | -       |\n| selectedIcon     | [SelectedIconProps](#dropdown-item-selected-icon-props)                                       | Custom icon to render when the item is selected.                                                                                                                                 | -       |\n| showDivider      | `boolean`                                                                                     | Whether to show a divider below the item.                                                                                                                                        | `false` |\n| href             | `string`                                                                                      | A URL to link to. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#href).                                                                                   | -       |\n| target           | `HTMLAttributeAnchorTarget`                                                                   | The target window for the link. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#target).                                                                   | -       |\n| rel              | `string`                                                                                      | The relationship between the linked resource and the current page. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/rel).                                  | -       |\n| download         | `boolean` \\| `string`                                                                         | Causes the browser to download the linked URL. A string may be provided to suggest a file name. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#download). | -       |\n| ping             | `string`                                                                                      | A space-separated list of URLs to ping when the link is followed. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#ping).                                   | -       |\n| referrerPolicy   | `HTMLAttributeReferrerPolicy`                                                                 | How much of the referrer to send when following the link. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#referrerpolicy).                                 | -       |\n| isDisabled       | `boolean`                                                                                     | Whether the dropdown item should be disabled. (**Deprecated**) pass **disabledKeys** to `DropdownMenu` instead.                                                                  | `false` |\n| isSelected       | `boolean`                                                                                     | Whether the dropdown item should be selected. (**Deprecated**) pass **selectedKeys** to `DropdownMenu` instead.                                                                  | `false` |\n| isReadOnly       | `boolean`                                                                                     | Whether the dropdown item press events should be ignored.                                                                                                                        | `false` |\n| hideSelectedIcon | `boolean`                                                                                     | Whether to hide the check icon when the item is selected.                                                                                                                        | `false` |\n| closeOnSelect    | `boolean`                                                                                     | Whether the dropdown menu should be closed when the item is selected.                                                                                                            | `true`  |\n| classNames       | `Record<\"base\"｜ \"wrapper\"｜ \"title\"｜ \"description\"｜ \"shortcut\" ｜ \"selectedIcon\", string>` | Allows to set custom class names for the dropdown item slots.                                                                                                                    | -       |\n\n### DropdownItem Events\n\n| Attribute     | Type                           | Description                                                                                                                  |\n| ------------- | ------------------------------ | ---------------------------------------------------------------------------------------------------------------------------- |\n| onAction      | `() => void`                   | Handler that is called when the dropdown item is selected. (**Deprecated**) pass to `DropdownMenu` instead.                  |\n| onClose       | `() => void`                   | Handler that is called when the dropdown item should close after selecting. (**Deprecated**) pass to `DropdownMenu` instead. |\n| onPress       | `(e: PressEvent) => void`      | Handler called when the press is released over the target.                                                                   |\n| onPressStart  | `(e: PressEvent) => void`      | Handler called when a press interaction starts.                                                                              |\n| onPressEnd    | `(e: PressEvent) => void`      | Handler called when a press interaction ends, either over the target or when the pointer leaves the target.                  |\n| onPressChange | `(isPressed: boolean) => void` | Handler called when the press state changes.                                                                                 |\n| onPressUp     | `(e: PressEvent) => void`      | Handler called when a press is released over the target, regardless of whether it started on the target or not.              |\n| onKeyDown     | `(e: KeyboardEvent) => void`   | Handler called when a key is pressed.                                                                                        |\n| onKeyUp       | `(e: KeyboardEvent) => void`   | Handler called when a key is released.                                                                                       |\n| onClick       | `MouseEventHandler`            | The native button click event handler (**Deprecated**) use **onPress** instead.                                              |\n\n---\n\n### Types\n\n#### Dropdown Item Selected Icon Props\n\n```ts\nexport type DropdownItemSelectedIconProps = {\n  /**\n   * The current icon, usually an checkmark icon.\n   */\n  icon?: ReactNode;\n  /**\n   * The current selected status.\n   */\n  isSelected?: boolean;\n  /**\n   * The current disabled status.\n   * @default false\n   */\n  isDisabled?: boolean;\n};\n\ntype selectedIcon?: ReactNode | ((props: DropdownItemSelectedIconProps) => ReactNode) | null;\n```\n",
    "code": "var Component=(()=>{var E=Object.create;var h=Object.defineProperty;var j=Object.getOwnPropertyDescriptor;var H=Object.getOwnPropertyNames;var K=Object.getPrototypeOf,P=Object.prototype.hasOwnProperty;var Z=(t,o)=>()=>(o||t((o={exports:{}}).exports,o),o.exports),V=(t,o)=>{for(var d in o)h(t,d,{get:o[d],enumerable:!0})},m=(t,o,d,n)=>{if(o&&typeof o==\"object\"||typeof o==\"function\")for(let i of H(o))!P.call(t,i)&&i!==d&&h(t,i,{get:()=>o[i],enumerable:!(n=j(o,i))||n.enumerable});return t};var W=(t,o,d)=>(d=t!=null?E(K(t)):{},m(o||!t||!t.__esModule?h(d,\"default\",{value:t,enumerable:!0}):d,t)),L=t=>m(h({},\"__esModule\",{value:!0}),t);var w=Z((We,u)=>{u.exports=_jsx_runtime});var Ze={};V(Ze,{default:()=>B,frontmatter:()=>Pe});var e=W(w());var z=`import {Dropdown, DropdownTrigger, DropdownMenu, DropdownItem, Button} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <Dropdown>\n      <DropdownTrigger>\n        <Button \n          variant=\"bordered\" \n        >\n          Open Menu\n        </Button>\n      </DropdownTrigger>\n      <DropdownMenu aria-label=\"Static Actions\">\n        <DropdownItem key=\"new\">New file</DropdownItem>\n        <DropdownItem key=\"copy\">Copy link</DropdownItem>\n        <DropdownItem key=\"edit\">Edit file</DropdownItem>\n        <DropdownItem key=\"delete\" className=\"text-danger\" color=\"danger\">\n          Delete file\n        </DropdownItem>\n      </DropdownMenu>\n    </Dropdown>\n  );\n}`,_={\"/App.jsx\":z},D={..._};var O=`import {Dropdown, DropdownTrigger, DropdownMenu, DropdownItem, Button} from \"@nextui-org/react\";\n\nexport default function App() {\n  const items = [\n    {\n      key: \"new\",\n      label: \"New file\",\n    },\n    {\n      key: \"copy\",\n      label: \"Copy link\",\n    },\n    {\n      key: \"edit\",\n      label: \"Edit file\",\n    },\n    {\n      key: \"delete\",\n      label: \"Delete file\",\n    }\n  ];\n\n  return (\n    <Dropdown>\n      <DropdownTrigger>\n        <Button \n          variant=\"bordered\" \n        >\n          Open Menu\n        </Button>\n      </DropdownTrigger>\n      <DropdownMenu aria-label=\"Dynamic Actions\" items={items}>\n        {(item) => (\n          <DropdownItem\n            key={item.key}\n            color={item.key === \"delete\" ? \"danger\" : \"default\"}\n            className={item.key === \"delete\" ? \"text-danger\" : \"\"}\n          >\n            {item.label}\n          </DropdownItem>\n        )}\n      </DropdownMenu>\n    </Dropdown>\n  );\n}`,U={\"/App.jsx\":O},g={...U};var F=`import {Dropdown, DropdownTrigger, DropdownMenu, DropdownItem, Button} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <Dropdown >\n      <DropdownTrigger>\n        <Button \n          variant=\"bordered\" \n        >\n          Open Menu\n        </Button>\n      </DropdownTrigger>\n      <DropdownMenu aria-label=\"Example with disabled actions\" disabledKeys={[\"edit\", \"delete\"]}>\n        <DropdownItem key=\"new\">New file</DropdownItem>\n        <DropdownItem key=\"copy\">Copy link</DropdownItem>\n        <DropdownItem key=\"edit\">Edit file</DropdownItem>\n        <DropdownItem key=\"delete\" className=\"text-danger\" color=\"danger\">\n          Delete file\n        </DropdownItem>\n      </DropdownMenu>\n    </Dropdown>\n  );\n}`,q={\"/App.jsx\":F},f={...q};var Y=`import {Dropdown, DropdownTrigger, DropdownMenu, DropdownItem, Button} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <Dropdown>\n      <DropdownTrigger>\n        <Button \n          variant=\"bordered\" \n        >\n          Open Menu\n        </Button>\n      </DropdownTrigger>\n      <DropdownMenu \n        aria-label=\"Action event example\" \n        onAction={(key) => alert(key)}\n      >\n        <DropdownItem key=\"new\">New file</DropdownItem>\n        <DropdownItem key=\"copy\">Copy link</DropdownItem>\n        <DropdownItem key=\"edit\">Edit file</DropdownItem>\n        <DropdownItem key=\"delete\" className=\"text-danger\" color=\"danger\">\n          Delete file\n        </DropdownItem>\n      </DropdownMenu>\n    </Dropdown>\n  );\n}`,G={\"/App.jsx\":Y},y={...G};var J=`import {Dropdown, DropdownTrigger, DropdownMenu, DropdownItem, Button, RadioGroup, Radio} from \"@nextui-org/react\";\n\nexport default function App() {\n  const [selectedColor, setSelectedColor] = React.useState(\"default\")\n\n  const variants = [\"solid\", \"bordered\", \"light\", \"flat\", \"faded\", \"shadow\"];\n\n  const DropdownContent = ({variant, color}) => (\n    <Dropdown>\n      <DropdownTrigger>\n        <Button \n          color={color}\n          variant={variant}\n          className=\"capitalize\"\n        >\n          {variant}\n        </Button>\n      </DropdownTrigger>\n      <DropdownMenu \n        aria-label=\"Dropdown Variants\"\n        color={color} \n        variant={variant}\n      >\n        <DropdownItem key=\"new\">New file</DropdownItem>\n        <DropdownItem key=\"copy\">Copy link</DropdownItem>\n        <DropdownItem key=\"edit\">Edit file</DropdownItem>\n        <DropdownItem key=\"delete\" className=\"text-danger\" color=\"danger\">\n          Delete file\n        </DropdownItem>\n      </DropdownMenu>\n    </Dropdown>\n  )\n\n  return (\n    <div className=\"flex flex-wrap gap-4\">\n      {variants.map((variant) => (\n        <DropdownContent key={variant} color={selectedColor} variant={variant} />\n      ))}\n      <RadioGroup\n        label=\"Select dropdown color\"\n        orientation=\"horizontal\"\n        color={selectedColor}\n        defaultValue=\"default\"\n        onValueChange={setSelectedColor}\n      >\n        <Radio value=\"default\">Default</Radio>\n        <Radio value=\"primary\">Primary</Radio>\n        <Radio value=\"secondary\">Secondary</Radio>\n        <Radio value=\"success\">Success</Radio>\n        <Radio value=\"warning\">Warning</Radio>\n        <Radio value=\"danger\">Danger</Radio>\n      </RadioGroup>\n    </div>\n  );\n}`,X={\"/App.jsx\":J},I={...X};var Q=`import {Dropdown, DropdownTrigger, DropdownMenu, DropdownItem, Button} from \"@nextui-org/react\";\n\nexport default function App() {\n  const [selectedKeys, setSelectedKeys] = React.useState(new Set([\"text\"]));\n\n  const selectedValue = React.useMemo(\n    () => Array.from(selectedKeys).join(\", \").replaceAll(\"_\", \" \"),\n    [selectedKeys]\n  );\n\n  return (\n    <Dropdown>\n      <DropdownTrigger>\n        <Button \n          variant=\"bordered\" \n          className=\"capitalize\"\n        >\n          {selectedValue}\n        </Button>\n      </DropdownTrigger>\n      <DropdownMenu \n        aria-label=\"Single selection example\"\n        variant=\"flat\"\n        disallowEmptySelection\n        selectionMode=\"single\"\n        selectedKeys={selectedKeys}\n        onSelectionChange={setSelectedKeys}\n      >\n        <DropdownItem key=\"text\">Text</DropdownItem>\n        <DropdownItem key=\"number\">Number</DropdownItem>\n        <DropdownItem key=\"date\">Date</DropdownItem>\n        <DropdownItem key=\"single_date\">Single Date</DropdownItem>\n        <DropdownItem key=\"iteration\">Iteration</DropdownItem>\n      </DropdownMenu>\n    </Dropdown>\n  );\n}`,$=`import {Dropdown, DropdownTrigger, DropdownMenu, DropdownItem, Button} from \"@nextui-org/react\";\nimport type { Selection } from \"@nextui-org/react\";\n\nexport default function App() {\n  const [selectedKeys, setSelectedKeys] = React.useState<Selection>(new Set([\"text\"]));\n\n  const selectedValue = React.useMemo(\n    () => Array.from(selectedKeys).join(\", \").replaceAll(\"_\", \" \"),\n    [selectedKeys]\n  );\n\n  return (\n    <Dropdown>\n      <DropdownTrigger>\n        <Button \n          variant=\"bordered\" \n          className=\"capitalize\"\n        >\n          {selectedValue}\n        </Button>\n      </DropdownTrigger>\n      <DropdownMenu \n        aria-label=\"Single selection example\"\n        variant=\"flat\"\n        disallowEmptySelection\n        selectionMode=\"single\"\n        selectedKeys={selectedKeys}\n        onSelectionChange={setSelectedKeys}\n      >\n        <DropdownItem key=\"text\">Text</DropdownItem>\n        <DropdownItem key=\"number\">Number</DropdownItem>\n        <DropdownItem key=\"date\">Date</DropdownItem>\n        <DropdownItem key=\"single_date\">Single Date</DropdownItem>\n        <DropdownItem key=\"iteration\">Iteration</DropdownItem>\n      </DropdownMenu>\n    </Dropdown>\n  );\n}`,ee={\"/App.jsx\":Q,\"/App.tsx\":$},b={...ee};var oe=`import {Dropdown, DropdownTrigger, DropdownMenu, DropdownItem, Button} from \"@nextui-org/react\";\n\nexport default function App() {\n  const [selectedKeys, setSelectedKeys] = React.useState(new Set([\"text\"]));\n\n  const selectedValue = React.useMemo(\n    () => Array.from(selectedKeys).join(\", \").replaceAll(\"_\", \" \"),\n    [selectedKeys]\n  );\n\n  return (\n    <Dropdown>\n      <DropdownTrigger>\n        <Button \n          variant=\"bordered\" \n          className=\"capitalize\"\n        >\n          {selectedValue}\n        </Button>\n      </DropdownTrigger>\n      <DropdownMenu \n        aria-label=\"Multiple selection example\"\n        variant=\"flat\"\n        closeOnSelect={false}\n        disallowEmptySelection\n        selectionMode=\"multiple\"\n        selectedKeys={selectedKeys}\n        onSelectionChange={setSelectedKeys}\n      >\n        <DropdownItem key=\"text\">Text</DropdownItem>\n        <DropdownItem key=\"number\">Number</DropdownItem>\n        <DropdownItem key=\"date\">Date</DropdownItem>\n        <DropdownItem key=\"single_date\">Single Date</DropdownItem>\n        <DropdownItem key=\"iteration\">Iteration</DropdownItem>\n      </DropdownMenu>\n    </Dropdown>\n  );\n}`,te=`import {Dropdown, DropdownTrigger, DropdownMenu, DropdownItem, Button} from \"@nextui-org/react\";\nimport type { Selection } from \"@nextui-org/react\";\n\nexport default function App() {\n  const [selectedKeys, setSelectedKeys] = React.useState<Selection>(new Set([\"text\"]));\n\n  const selectedValue = React.useMemo(\n    () => Array.from(selectedKeys).join(\", \").replaceAll(\"_\", \" \"),\n    [selectedKeys]\n  );\n\n  return (\n    <Dropdown>\n      <DropdownTrigger>\n        <Button \n          variant=\"bordered\" \n          className=\"capitalize\"\n        >\n          {selectedValue}\n        </Button>\n      </DropdownTrigger>\n      <DropdownMenu \n        aria-label=\"Multiple selection example\"\n        variant=\"flat\"\n        closeOnSelect={false}\n        disallowEmptySelection\n        selectionMode=\"multiple\"\n        selectedKeys={selectedKeys}\n        onSelectionChange={setSelectedKeys}\n      >\n        <DropdownItem key=\"text\">Text</DropdownItem>\n        <DropdownItem key=\"number\">Number</DropdownItem>\n        <DropdownItem key=\"date\">Date</DropdownItem>\n        <DropdownItem key=\"single_date\">Single Date</DropdownItem>\n        <DropdownItem key=\"iteration\">Iteration</DropdownItem>\n      </DropdownMenu>\n    </Dropdown>\n  );\n}`,ne={\"/App.jsx\":oe,\"/App.tsx\":te},v={...ne};var re=`import {Dropdown, DropdownTrigger, DropdownMenu, DropdownItem, Button} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <Dropdown>\n      <DropdownTrigger>\n        <Button \n          variant=\"bordered\" \n        >\n          Open Menu\n        </Button>\n      </DropdownTrigger>\n      <DropdownMenu variant=\"flat\" aria-label=\"Dropdown menu with shortcut\">\n        <DropdownItem key=\"new\" shortcut=\"\\u2318N\">New file</DropdownItem>\n        <DropdownItem key=\"copy\" shortcut=\"\\u2318C\">Copy link</DropdownItem>\n        <DropdownItem key=\"edit\" shortcut=\"\\u2318\\u21E7E\">Edit file</DropdownItem>\n        <DropdownItem key=\"delete\" shortcut=\"\\u2318\\u21E7D\" className=\"text-danger\" color=\"danger\">\n          Delete file\n        </DropdownItem>\n      </DropdownMenu>\n    </Dropdown>\n  );\n}`,de={\"/App.jsx\":re},x={...de};var ie=`export const AddNoteIcon = (props) => (\n  <svg\n    aria-hidden=\"true\"\n    fill=\"none\"\n    focusable=\"false\"\n    height=\"1em\"\n    role=\"presentation\"\n    viewBox=\"0 0 24 24\"\n    width=\"1em\"\n    {...props}\n  >\n    <path\n      d=\"M7.37 22h9.25a4.87 4.87 0 0 0 4.87-4.87V8.37a4.87 4.87 0 0 0-4.87-4.87H7.37A4.87 4.87 0 0 0 2.5 8.37v8.75c0 2.7 2.18 4.88 4.87 4.88Z\"\n      fill=\"currentColor\"\n      opacity={0.4}\n    />\n    <path\n      d=\"M8.29 6.29c-.42 0-.75-.34-.75-.75V2.75a.749.749 0 1 1 1.5 0v2.78c0 .42-.33.76-.75.76ZM15.71 6.29c-.42 0-.75-.34-.75-.75V2.75a.749.749 0 1 1 1.5 0v2.78c0 .42-.33.76-.75.76ZM12 14.75h-1.69V13c0-.41-.34-.75-.75-.75s-.75.34-.75.75v1.75H7c-.41 0-.75.34-.75.75s.34.75.75.75h1.81V18c0 .41.34.75.75.75s.75-.34.75-.75v-1.75H12c.41 0 .75-.34.75-.75s-.34-.75-.75-.75Z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);`,ce=`export const CopyDocumentIcon = (props) => (\n  <svg\n    aria-hidden=\"true\"\n    fill=\"none\"\n    focusable=\"false\"\n    height=\"1em\"\n    role=\"presentation\"\n    viewBox=\"0 0 24 24\"\n    width=\"1em\"\n    {...props}\n  >\n    <path\n      d=\"M15.5 13.15h-2.17c-1.78 0-3.23-1.44-3.23-3.23V7.75c0-.41-.33-.75-.75-.75H6.18C3.87 7 2 8.5 2 11.18v6.64C2 20.5 3.87 22 6.18 22h5.89c2.31 0 4.18-1.5 4.18-4.18V13.9c0-.42-.34-.75-.75-.75Z\"\n      fill=\"currentColor\"\n      opacity={0.4}\n    />\n    <path\n      d=\"M17.82 2H11.93C9.67 2 7.84 3.44 7.76 6.01c.06 0 .11-.01.17-.01h5.89C16.13 6 18 7.5 18 10.18V16.83c0 .06-.01.11-.01.16 2.23-.07 4.01-1.55 4.01-4.16V6.18C22 3.5 20.13 2 17.82 2Z\"\n      fill=\"currentColor\"\n    />\n    <path\n      d=\"M11.98 7.15c-.31-.31-.84-.1-.84.33v2.62c0 1.1.93 2 2.07 2 .71.01 1.7.01 2.55.01.43 0 .65-.5.35-.8-1.09-1.09-3.03-3.04-4.13-4.16Z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);`,le=`export const EditDocumentIcon = (props) => (\n  <svg\n    aria-hidden=\"true\"\n    fill=\"none\"\n    focusable=\"false\"\n    height=\"1em\"\n    role=\"presentation\"\n    viewBox=\"0 0 24 24\"\n    width=\"1em\"\n    {...props}\n  >\n    <path\n      d=\"M15.48 3H7.52C4.07 3 2 5.06 2 8.52v7.95C2 19.94 4.07 22 7.52 22h7.95c3.46 0 5.52-2.06 5.52-5.52V8.52C21 5.06 18.93 3 15.48 3Z\"\n      fill=\"currentColor\"\n      opacity={0.4}\n    />\n    <path\n      d=\"M21.02 2.98c-1.79-1.8-3.54-1.84-5.38 0L14.51 4.1c-.1.1-.13.24-.09.37.7 2.45 2.66 4.41 5.11 5.11.03.01.08.01.11.01.1 0 .2-.04.27-.11l1.11-1.12c.91-.91 1.36-1.78 1.36-2.67 0-.9-.45-1.79-1.36-2.71ZM17.86 10.42c-.27-.13-.53-.26-.77-.41-.2-.12-.4-.25-.59-.39-.16-.1-.34-.25-.52-.4-.02-.01-.08-.06-.16-.14-.31-.25-.64-.59-.95-.96-.02-.02-.08-.08-.13-.17-.1-.11-.25-.3-.38-.51-.11-.14-.24-.34-.36-.55-.15-.25-.28-.5-.4-.76-.13-.28-.23-.54-.32-.79L7.9 10.72c-.35.35-.69 1.01-.76 1.5l-.43 2.98c-.09.63.08 1.22.47 1.61.33.33.78.5 1.28.5.11 0 .22-.01.33-.02l2.97-.42c.49-.07 1.15-.4 1.5-.76l5.38-5.38c-.25-.08-.5-.19-.78-.31Z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);`,se=`export const DeleteDocumentIcon = (props) => (\n  <svg\n    aria-hidden=\"true\"\n    fill=\"none\"\n    focusable=\"false\"\n    height=\"1em\"\n    role=\"presentation\"\n    viewBox=\"0 0 24 24\"\n    width=\"1em\"\n    {...props}\n  >\n    <path\n      d=\"M21.07 5.23c-1.61-.16-3.22-.28-4.84-.37v-.01l-.22-1.3c-.15-.92-.37-2.3-2.71-2.3h-2.62c-2.33 0-2.55 1.32-2.71 2.29l-.21 1.28c-.93.06-1.86.12-2.79.21l-2.04.2c-.42.04-.72.41-.68.82.04.41.4.71.82.67l2.04-.2c5.24-.52 10.52-.32 15.82.21h.08c.38 0 .71-.29.75-.68a.766.766 0 0 0-.69-.82Z\"\n      fill=\"currentColor\"\n    />\n    <path\n      d=\"M19.23 8.14c-.24-.25-.57-.39-.91-.39H5.68c-.34 0-.68.14-.91.39-.23.25-.36.59-.34.94l.62 10.26c.11 1.52.25 3.42 3.74 3.42h6.42c3.49 0 3.63-1.89 3.74-3.42l.62-10.25c.02-.36-.11-.7-.34-.95Z\"\n      fill=\"currentColor\"\n      opacity={0.399}\n    />\n    <path\n      clipRule=\"evenodd\"\n      d=\"M9.58 17a.75.75 0 0 1 .75-.75h3.33a.75.75 0 0 1 0 1.5h-3.33a.75.75 0 0 1-.75-.75ZM8.75 13a.75.75 0 0 1 .75-.75h5a.75.75 0 0 1 0 1.5h-5a.75.75 0 0 1-.75-.75Z\"\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n    />\n  </svg>\n);`,he=`import {Dropdown, DropdownTrigger, DropdownMenu, DropdownItem, Button, cn} from \"@nextui-org/react\";\nimport {AddNoteIcon} from \"./AddNoteIcon.jsx\";\nimport {CopyDocumentIcon} from \"./CopyDocumentIcon.jsx\";\nimport {EditDocumentIcon} from \"./EditDocumentIcon.jsx\";\nimport {DeleteDocumentIcon} from \"./DeleteDocumentIcon.jsx\";\n\nexport default function App() {\n  const iconClasses = \"text-xl text-default-500 pointer-events-none flex-shrink-0\";\n\n  return (\n    <Dropdown>\n      <DropdownTrigger>\n        <Button \n          variant=\"bordered\" \n        >\n          Open Menu\n        </Button>\n      </DropdownTrigger>\n      <DropdownMenu variant=\"faded\" aria-label=\"Dropdown menu with icons\">\n        <DropdownItem\n          key=\"new\"\n          shortcut=\"\\u2318N\"\n          startContent={<AddNoteIcon className={iconClasses} />}\n        >\n          New file\n        </DropdownItem>\n        <DropdownItem\n          key=\"copy\"\n          shortcut=\"\\u2318C\"\n          startContent={<CopyDocumentIcon className={iconClasses} />}\n        >\n          Copy link\n        </DropdownItem>\n        <DropdownItem\n          key=\"edit\"\n          shortcut=\"\\u2318\\u21E7E\"\n          startContent={<EditDocumentIcon className={iconClasses} />}\n        >\n          Edit file\n        </DropdownItem>\n        <DropdownItem\n          key=\"delete\"\n          className=\"text-danger\"\n          color=\"danger\"\n          shortcut=\"\\u2318\\u21E7D\"\n          startContent={<DeleteDocumentIcon className={cn(iconClasses, \"text-danger\")} />}\n        >\n          Delete file\n        </DropdownItem>\n      </DropdownMenu>\n    </Dropdown>\n  );\n}`,ae={\"/App.jsx\":he,\"/AddNoteIcon.jsx\":ie,\"/CopyDocumentIcon.jsx\":ce,\"/EditDocumentIcon.jsx\":le,\"/DeleteDocumentIcon.jsx\":se},C={...ae};var pe=`export const AddNoteIcon = (props) => (\n  <svg\n    aria-hidden=\"true\"\n    fill=\"none\"\n    focusable=\"false\"\n    height=\"1em\"\n    role=\"presentation\"\n    viewBox=\"0 0 24 24\"\n    width=\"1em\"\n    {...props}\n  >\n    <path\n      d=\"M7.37 22h9.25a4.87 4.87 0 0 0 4.87-4.87V8.37a4.87 4.87 0 0 0-4.87-4.87H7.37A4.87 4.87 0 0 0 2.5 8.37v8.75c0 2.7 2.18 4.88 4.87 4.88Z\"\n      fill=\"currentColor\"\n      opacity={0.4}\n    />\n    <path\n      d=\"M8.29 6.29c-.42 0-.75-.34-.75-.75V2.75a.749.749 0 1 1 1.5 0v2.78c0 .42-.33.76-.75.76ZM15.71 6.29c-.42 0-.75-.34-.75-.75V2.75a.749.749 0 1 1 1.5 0v2.78c0 .42-.33.76-.75.76ZM12 14.75h-1.69V13c0-.41-.34-.75-.75-.75s-.75.34-.75.75v1.75H7c-.41 0-.75.34-.75.75s.34.75.75.75h1.81V18c0 .41.34.75.75.75s.75-.34.75-.75v-1.75H12c.41 0 .75-.34.75-.75s-.34-.75-.75-.75Z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);`,me=`export const CopyDocumentIcon = (props) => (\n  <svg\n    aria-hidden=\"true\"\n    fill=\"none\"\n    focusable=\"false\"\n    height=\"1em\"\n    role=\"presentation\"\n    viewBox=\"0 0 24 24\"\n    width=\"1em\"\n    {...props}\n  >\n    <path\n      d=\"M15.5 13.15h-2.17c-1.78 0-3.23-1.44-3.23-3.23V7.75c0-.41-.33-.75-.75-.75H6.18C3.87 7 2 8.5 2 11.18v6.64C2 20.5 3.87 22 6.18 22h5.89c2.31 0 4.18-1.5 4.18-4.18V13.9c0-.42-.34-.75-.75-.75Z\"\n      fill=\"currentColor\"\n      opacity={0.4}\n    />\n    <path\n      d=\"M17.82 2H11.93C9.67 2 7.84 3.44 7.76 6.01c.06 0 .11-.01.17-.01h5.89C16.13 6 18 7.5 18 10.18V16.83c0 .06-.01.11-.01.16 2.23-.07 4.01-1.55 4.01-4.16V6.18C22 3.5 20.13 2 17.82 2Z\"\n      fill=\"currentColor\"\n    />\n    <path\n      d=\"M11.98 7.15c-.31-.31-.84-.1-.84.33v2.62c0 1.1.93 2 2.07 2 .71.01 1.7.01 2.55.01.43 0 .65-.5.35-.8-1.09-1.09-3.03-3.04-4.13-4.16Z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);`,ue=`export const EditDocumentIcon = (props) => (\n  <svg\n    aria-hidden=\"true\"\n    fill=\"none\"\n    focusable=\"false\"\n    height=\"1em\"\n    role=\"presentation\"\n    viewBox=\"0 0 24 24\"\n    width=\"1em\"\n    {...props}\n  >\n    <path\n      d=\"M15.48 3H7.52C4.07 3 2 5.06 2 8.52v7.95C2 19.94 4.07 22 7.52 22h7.95c3.46 0 5.52-2.06 5.52-5.52V8.52C21 5.06 18.93 3 15.48 3Z\"\n      fill=\"currentColor\"\n      opacity={0.4}\n    />\n    <path\n      d=\"M21.02 2.98c-1.79-1.8-3.54-1.84-5.38 0L14.51 4.1c-.1.1-.13.24-.09.37.7 2.45 2.66 4.41 5.11 5.11.03.01.08.01.11.01.1 0 .2-.04.27-.11l1.11-1.12c.91-.91 1.36-1.78 1.36-2.67 0-.9-.45-1.79-1.36-2.71ZM17.86 10.42c-.27-.13-.53-.26-.77-.41-.2-.12-.4-.25-.59-.39-.16-.1-.34-.25-.52-.4-.02-.01-.08-.06-.16-.14-.31-.25-.64-.59-.95-.96-.02-.02-.08-.08-.13-.17-.1-.11-.25-.3-.38-.51-.11-.14-.24-.34-.36-.55-.15-.25-.28-.5-.4-.76-.13-.28-.23-.54-.32-.79L7.9 10.72c-.35.35-.69 1.01-.76 1.5l-.43 2.98c-.09.63.08 1.22.47 1.61.33.33.78.5 1.28.5.11 0 .22-.01.33-.02l2.97-.42c.49-.07 1.15-.4 1.5-.76l5.38-5.38c-.25-.08-.5-.19-.78-.31Z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);`,we=`export const DeleteDocumentIcon = (props) => (\n  <svg\n    aria-hidden=\"true\"\n    fill=\"none\"\n    focusable=\"false\"\n    height=\"1em\"\n    role=\"presentation\"\n    viewBox=\"0 0 24 24\"\n    width=\"1em\"\n    {...props}\n  >\n    <path\n      d=\"M21.07 5.23c-1.61-.16-3.22-.28-4.84-.37v-.01l-.22-1.3c-.15-.92-.37-2.3-2.71-2.3h-2.62c-2.33 0-2.55 1.32-2.71 2.29l-.21 1.28c-.93.06-1.86.12-2.79.21l-2.04.2c-.42.04-.72.41-.68.82.04.41.4.71.82.67l2.04-.2c5.24-.52 10.52-.32 15.82.21h.08c.38 0 .71-.29.75-.68a.766.766 0 0 0-.69-.82Z\"\n      fill=\"currentColor\"\n    />\n    <path\n      d=\"M19.23 8.14c-.24-.25-.57-.39-.91-.39H5.68c-.34 0-.68.14-.91.39-.23.25-.36.59-.34.94l.62 10.26c.11 1.52.25 3.42 3.74 3.42h6.42c3.49 0 3.63-1.89 3.74-3.42l.62-10.25c.02-.36-.11-.7-.34-.95Z\"\n      fill=\"currentColor\"\n      opacity={0.399}\n    />\n    <path\n      clipRule=\"evenodd\"\n      d=\"M9.58 17a.75.75 0 0 1 .75-.75h3.33a.75.75 0 0 1 0 1.5h-3.33a.75.75 0 0 1-.75-.75ZM8.75 13a.75.75 0 0 1 .75-.75h5a.75.75 0 0 1 0 1.5h-5a.75.75 0 0 1-.75-.75Z\"\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n    />\n  </svg>\n);`,De=`import {Dropdown, DropdownTrigger, DropdownMenu, DropdownItem, Button, cn} from \"@nextui-org/react\";\nimport {AddNoteIcon} from \"./AddNoteIcon.jsx\";\nimport {CopyDocumentIcon} from \"./CopyDocumentIcon.jsx\";\nimport {EditDocumentIcon} from \"./EditDocumentIcon.jsx\";\nimport {DeleteDocumentIcon} from \"./DeleteDocumentIcon.jsx\";\n\nexport default function App() {\n  const iconClasses = \"text-xl text-default-500 pointer-events-none flex-shrink-0\";\n\n  return (\n    <Dropdown>\n      <DropdownTrigger>\n        <Button \n          variant=\"bordered\" \n        >\n          Open Menu\n        </Button>\n      </DropdownTrigger>\n      <DropdownMenu variant=\"faded\" aria-label=\"Dropdown menu with description\">\n        <DropdownItem\n          key=\"new\"\n          shortcut=\"\\u2318N\"\n          description=\"Create a new file\"\n          startContent={<AddNoteIcon className={iconClasses} />}\n        >\n          New file\n        </DropdownItem>\n        <DropdownItem\n          key=\"copy\"\n          shortcut=\"\\u2318C\"\n          description=\"Copy the file link\"\n          startContent={<CopyDocumentIcon className={iconClasses} />}\n        >\n          Copy link\n        </DropdownItem>\n        <DropdownItem\n          key=\"edit\"\n          shortcut=\"\\u2318\\u21E7E\"\n          showDivider\n          description=\"Allows you to edit the file\"\n          startContent={<EditDocumentIcon className={iconClasses} />}\n        >\n          Edit file\n        </DropdownItem>\n        <DropdownItem\n          key=\"delete\"\n          className=\"text-danger\"\n          color=\"danger\"\n          shortcut=\"\\u2318\\u21E7D\"\n          description=\"Permanently delete the file\"\n          startContent={<DeleteDocumentIcon className={cn(iconClasses, \"text-danger\")} />}\n        >\n          Delete file\n        </DropdownItem>\n      </DropdownMenu>\n    </Dropdown>\n  );\n}`,ge={\"/App.jsx\":De,\"/AddNoteIcon.jsx\":pe,\"/CopyDocumentIcon.jsx\":me,\"/EditDocumentIcon.jsx\":ue,\"/DeleteDocumentIcon.jsx\":we},k={...ge};var fe=`export const AddNoteIcon = (props) => (\n  <svg\n    aria-hidden=\"true\"\n    fill=\"none\"\n    focusable=\"false\"\n    height=\"1em\"\n    role=\"presentation\"\n    viewBox=\"0 0 24 24\"\n    width=\"1em\"\n    {...props}\n  >\n    <path\n      d=\"M7.37 22h9.25a4.87 4.87 0 0 0 4.87-4.87V8.37a4.87 4.87 0 0 0-4.87-4.87H7.37A4.87 4.87 0 0 0 2.5 8.37v8.75c0 2.7 2.18 4.88 4.87 4.88Z\"\n      fill=\"currentColor\"\n      opacity={0.4}\n    />\n    <path\n      d=\"M8.29 6.29c-.42 0-.75-.34-.75-.75V2.75a.749.749 0 1 1 1.5 0v2.78c0 .42-.33.76-.75.76ZM15.71 6.29c-.42 0-.75-.34-.75-.75V2.75a.749.749 0 1 1 1.5 0v2.78c0 .42-.33.76-.75.76ZM12 14.75h-1.69V13c0-.41-.34-.75-.75-.75s-.75.34-.75.75v1.75H7c-.41 0-.75.34-.75.75s.34.75.75.75h1.81V18c0 .41.34.75.75.75s.75-.34.75-.75v-1.75H12c.41 0 .75-.34.75-.75s-.34-.75-.75-.75Z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);`,ye=`export const CopyDocumentIcon = (props) => (\n  <svg\n    aria-hidden=\"true\"\n    fill=\"none\"\n    focusable=\"false\"\n    height=\"1em\"\n    role=\"presentation\"\n    viewBox=\"0 0 24 24\"\n    width=\"1em\"\n    {...props}\n  >\n    <path\n      d=\"M15.5 13.15h-2.17c-1.78 0-3.23-1.44-3.23-3.23V7.75c0-.41-.33-.75-.75-.75H6.18C3.87 7 2 8.5 2 11.18v6.64C2 20.5 3.87 22 6.18 22h5.89c2.31 0 4.18-1.5 4.18-4.18V13.9c0-.42-.34-.75-.75-.75Z\"\n      fill=\"currentColor\"\n      opacity={0.4}\n    />\n    <path\n      d=\"M17.82 2H11.93C9.67 2 7.84 3.44 7.76 6.01c.06 0 .11-.01.17-.01h5.89C16.13 6 18 7.5 18 10.18V16.83c0 .06-.01.11-.01.16 2.23-.07 4.01-1.55 4.01-4.16V6.18C22 3.5 20.13 2 17.82 2Z\"\n      fill=\"currentColor\"\n    />\n    <path\n      d=\"M11.98 7.15c-.31-.31-.84-.1-.84.33v2.62c0 1.1.93 2 2.07 2 .71.01 1.7.01 2.55.01.43 0 .65-.5.35-.8-1.09-1.09-3.03-3.04-4.13-4.16Z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);`,Ie=`export const EditDocumentIcon = (props) => (\n  <svg\n    aria-hidden=\"true\"\n    fill=\"none\"\n    focusable=\"false\"\n    height=\"1em\"\n    role=\"presentation\"\n    viewBox=\"0 0 24 24\"\n    width=\"1em\"\n    {...props}\n  >\n    <path\n      d=\"M15.48 3H7.52C4.07 3 2 5.06 2 8.52v7.95C2 19.94 4.07 22 7.52 22h7.95c3.46 0 5.52-2.06 5.52-5.52V8.52C21 5.06 18.93 3 15.48 3Z\"\n      fill=\"currentColor\"\n      opacity={0.4}\n    />\n    <path\n      d=\"M21.02 2.98c-1.79-1.8-3.54-1.84-5.38 0L14.51 4.1c-.1.1-.13.24-.09.37.7 2.45 2.66 4.41 5.11 5.11.03.01.08.01.11.01.1 0 .2-.04.27-.11l1.11-1.12c.91-.91 1.36-1.78 1.36-2.67 0-.9-.45-1.79-1.36-2.71ZM17.86 10.42c-.27-.13-.53-.26-.77-.41-.2-.12-.4-.25-.59-.39-.16-.1-.34-.25-.52-.4-.02-.01-.08-.06-.16-.14-.31-.25-.64-.59-.95-.96-.02-.02-.08-.08-.13-.17-.1-.11-.25-.3-.38-.51-.11-.14-.24-.34-.36-.55-.15-.25-.28-.5-.4-.76-.13-.28-.23-.54-.32-.79L7.9 10.72c-.35.35-.69 1.01-.76 1.5l-.43 2.98c-.09.63.08 1.22.47 1.61.33.33.78.5 1.28.5.11 0 .22-.01.33-.02l2.97-.42c.49-.07 1.15-.4 1.5-.76l5.38-5.38c-.25-.08-.5-.19-.78-.31Z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);`,be=`export const DeleteDocumentIcon = (props) => (\n  <svg\n    aria-hidden=\"true\"\n    fill=\"none\"\n    focusable=\"false\"\n    height=\"1em\"\n    role=\"presentation\"\n    viewBox=\"0 0 24 24\"\n    width=\"1em\"\n    {...props}\n  >\n    <path\n      d=\"M21.07 5.23c-1.61-.16-3.22-.28-4.84-.37v-.01l-.22-1.3c-.15-.92-.37-2.3-2.71-2.3h-2.62c-2.33 0-2.55 1.32-2.71 2.29l-.21 1.28c-.93.06-1.86.12-2.79.21l-2.04.2c-.42.04-.72.41-.68.82.04.41.4.71.82.67l2.04-.2c5.24-.52 10.52-.32 15.82.21h.08c.38 0 .71-.29.75-.68a.766.766 0 0 0-.69-.82Z\"\n      fill=\"currentColor\"\n    />\n    <path\n      d=\"M19.23 8.14c-.24-.25-.57-.39-.91-.39H5.68c-.34 0-.68.14-.91.39-.23.25-.36.59-.34.94l.62 10.26c.11 1.52.25 3.42 3.74 3.42h6.42c3.49 0 3.63-1.89 3.74-3.42l.62-10.25c.02-.36-.11-.7-.34-.95Z\"\n      fill=\"currentColor\"\n      opacity={0.399}\n    />\n    <path\n      clipRule=\"evenodd\"\n      d=\"M9.58 17a.75.75 0 0 1 .75-.75h3.33a.75.75 0 0 1 0 1.5h-3.33a.75.75 0 0 1-.75-.75ZM8.75 13a.75.75 0 0 1 .75-.75h5a.75.75 0 0 1 0 1.5h-5a.75.75 0 0 1-.75-.75Z\"\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n    />\n  </svg>\n);`,ve=`import {Dropdown, DropdownTrigger, DropdownMenu, DropdownSection, DropdownItem, Button, cn} from \"@nextui-org/react\";\nimport {AddNoteIcon} from \"./AddNoteIcon.jsx\";\nimport {CopyDocumentIcon} from \"./CopyDocumentIcon.jsx\";\nimport {EditDocumentIcon} from \"./EditDocumentIcon.jsx\";\nimport {DeleteDocumentIcon} from \"./DeleteDocumentIcon.jsx\";\n\nexport default function App() {\n  const iconClasses = \"text-xl text-default-500 pointer-events-none flex-shrink-0\";\n\n  return (\n    <Dropdown>\n      <DropdownTrigger>\n        <Button \n          variant=\"bordered\" \n        >\n          Open Menu\n        </Button>\n      </DropdownTrigger>\n      <DropdownMenu variant=\"faded\" aria-label=\"Dropdown menu with description\">\n      <DropdownSection title=\"Actions\" showDivider>  \n        <DropdownItem\n            key=\"new\"\n            shortcut=\"\\u2318N\"\n            description=\"Create a new file\"\n            startContent={<AddNoteIcon className={iconClasses} />}\n          >\n            New file\n          </DropdownItem>\n          <DropdownItem\n            key=\"copy\"\n            shortcut=\"\\u2318C\"\n            description=\"Copy the file link\"\n            startContent={<CopyDocumentIcon className={iconClasses} />}\n          >\n            Copy link\n          </DropdownItem>\n          <DropdownItem\n            key=\"edit\"\n            shortcut=\"\\u2318\\u21E7E\"\n            description=\"Allows you to edit the file\"\n            startContent={<EditDocumentIcon className={iconClasses} />}\n          >\n            Edit file\n          </DropdownItem>\n        </DropdownSection>\n        <DropdownSection title=\"Danger zone\">  \n          <DropdownItem\n            key=\"delete\"\n            className=\"text-danger\"\n            color=\"danger\"\n            shortcut=\"\\u2318\\u21E7D\"\n            description=\"Permanently delete the file\"\n            startContent={<DeleteDocumentIcon className={cn(iconClasses, \"text-danger\")} />}\n          >\n            Delete file\n          </DropdownItem>\n        </DropdownSection>\n      </DropdownMenu>\n    </Dropdown>\n  );\n}`,xe={\"/App.jsx\":ve,\"/AddNoteIcon.jsx\":fe,\"/CopyDocumentIcon.jsx\":ye,\"/EditDocumentIcon.jsx\":Ie,\"/DeleteDocumentIcon.jsx\":be},M={...xe};var Ce=`import {Dropdown, DropdownTrigger, DropdownMenu, DropdownItem, Avatar, User} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <div className=\"flex items-center gap-4\">\n      <Dropdown placement=\"bottom-end\">\n        <DropdownTrigger>\n          <Avatar\n            isBordered\n            as=\"button\"\n            className=\"transition-transform\"\n            src=\"https://i.pravatar.cc/150?u=a042581f4e29026704d\"\n          />\n        </DropdownTrigger>\n        <DropdownMenu aria-label=\"Profile Actions\" variant=\"flat\">\n          <DropdownItem key=\"profile\" className=\"h-14 gap-2\">\n            <p className=\"font-semibold\">Signed in as</p>\n            <p className=\"font-semibold\">zoey@example.com</p>\n          </DropdownItem>\n          <DropdownItem key=\"settings\">\n            My Settings\n          </DropdownItem>\n          <DropdownItem key=\"team_settings\">Team Settings</DropdownItem>\n          <DropdownItem key=\"analytics\">\n            Analytics\n          </DropdownItem>\n          <DropdownItem key=\"system\">System</DropdownItem>\n          <DropdownItem key=\"configurations\">Configurations</DropdownItem>\n          <DropdownItem key=\"help_and_feedback\">\n            Help & Feedback\n          </DropdownItem>\n          <DropdownItem key=\"logout\" color=\"danger\">\n            Log Out\n          </DropdownItem>\n        </DropdownMenu>\n      </Dropdown>\n      <Dropdown placement=\"bottom-start\">\n        <DropdownTrigger>\n          <User\n            as=\"button\"\n            avatarProps={{\n              isBordered: true,\n              src: \"https://i.pravatar.cc/150?u=a042581f4e29026024d\",\n            }}\n            className=\"transition-transform\"\n            description=\"@tonyreichert\"\n            name=\"Tony Reichert\"\n          />\n        </DropdownTrigger>\n        <DropdownMenu aria-label=\"User Actions\" variant=\"flat\">\n          <DropdownItem key=\"profile\" className=\"h-14 gap-2\">\n            <p className=\"font-bold\">Signed in as</p>\n            <p className=\"font-bold\">@tonyreichert</p>\n          </DropdownItem>\n          <DropdownItem key=\"settings\">\n            My Settings\n          </DropdownItem>\n          <DropdownItem key=\"team_settings\">Team Settings</DropdownItem>\n          <DropdownItem key=\"analytics\">\n            Analytics\n          </DropdownItem>\n          <DropdownItem key=\"system\">System</DropdownItem>\n          <DropdownItem key=\"configurations\">Configurations</DropdownItem>\n          <DropdownItem key=\"help_and_feedback\">\n            Help & Feedback\n          </DropdownItem>\n          <DropdownItem key=\"logout\" color=\"danger\">\n            Log Out\n          </DropdownItem>\n        </DropdownMenu>\n      </Dropdown>\n    </div>\n  );\n}`,ke={\"/App.jsx\":Ce},T={...ke};var Me=`import {Dropdown, DropdownTrigger, DropdownMenu, DropdownItem, Button} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <Dropdown backdrop=\"blur\">\n      <DropdownTrigger>\n        <Button \n          variant=\"bordered\" \n        >\n          Open Menu\n        </Button>\n      </DropdownTrigger>\n      <DropdownMenu variant=\"faded\" aria-label=\"Static Actions\">\n        <DropdownItem key=\"new\">New file</DropdownItem>\n        <DropdownItem key=\"copy\">Copy link</DropdownItem>\n        <DropdownItem key=\"edit\">Edit file</DropdownItem>\n        <DropdownItem key=\"delete\" className=\"text-danger\" color=\"danger\">\n          Delete file\n        </DropdownItem>\n      </DropdownMenu>\n    </Dropdown>\n  );\n}`,Te={\"/App.jsx\":Me},A={...Te};var Ae=`export const AddNoteIcon = (props) => (\n  <svg\n    aria-hidden=\"true\"\n    fill=\"none\"\n    focusable=\"false\"\n    height=\"1em\"\n    role=\"presentation\"\n    viewBox=\"0 0 24 24\"\n    width=\"1em\"\n    {...props}\n  >\n    <path\n      d=\"M7.37 22h9.25a4.87 4.87 0 0 0 4.87-4.87V8.37a4.87 4.87 0 0 0-4.87-4.87H7.37A4.87 4.87 0 0 0 2.5 8.37v8.75c0 2.7 2.18 4.88 4.87 4.88Z\"\n      fill=\"currentColor\"\n      opacity={0.4}\n    />\n    <path\n      d=\"M8.29 6.29c-.42 0-.75-.34-.75-.75V2.75a.749.749 0 1 1 1.5 0v2.78c0 .42-.33.76-.75.76ZM15.71 6.29c-.42 0-.75-.34-.75-.75V2.75a.749.749 0 1 1 1.5 0v2.78c0 .42-.33.76-.75.76ZM12 14.75h-1.69V13c0-.41-.34-.75-.75-.75s-.75.34-.75.75v1.75H7c-.41 0-.75.34-.75.75s.34.75.75.75h1.81V18c0 .41.34.75.75.75s.75-.34.75-.75v-1.75H12c.41 0 .75-.34.75-.75s-.34-.75-.75-.75Z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);`,Se=`export const CopyDocumentIcon = (props) => (\n  <svg\n    aria-hidden=\"true\"\n    fill=\"none\"\n    focusable=\"false\"\n    height=\"1em\"\n    role=\"presentation\"\n    viewBox=\"0 0 24 24\"\n    width=\"1em\"\n    {...props}\n  >\n    <path\n      d=\"M15.5 13.15h-2.17c-1.78 0-3.23-1.44-3.23-3.23V7.75c0-.41-.33-.75-.75-.75H6.18C3.87 7 2 8.5 2 11.18v6.64C2 20.5 3.87 22 6.18 22h5.89c2.31 0 4.18-1.5 4.18-4.18V13.9c0-.42-.34-.75-.75-.75Z\"\n      fill=\"currentColor\"\n      opacity={0.4}\n    />\n    <path\n      d=\"M17.82 2H11.93C9.67 2 7.84 3.44 7.76 6.01c.06 0 .11-.01.17-.01h5.89C16.13 6 18 7.5 18 10.18V16.83c0 .06-.01.11-.01.16 2.23-.07 4.01-1.55 4.01-4.16V6.18C22 3.5 20.13 2 17.82 2Z\"\n      fill=\"currentColor\"\n    />\n    <path\n      d=\"M11.98 7.15c-.31-.31-.84-.1-.84.33v2.62c0 1.1.93 2 2.07 2 .71.01 1.7.01 2.55.01.43 0 .65-.5.35-.8-1.09-1.09-3.03-3.04-4.13-4.16Z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);`,Ne=`export const EditDocumentIcon = (props) => (\n  <svg\n    aria-hidden=\"true\"\n    fill=\"none\"\n    focusable=\"false\"\n    height=\"1em\"\n    role=\"presentation\"\n    viewBox=\"0 0 24 24\"\n    width=\"1em\"\n    {...props}\n  >\n    <path\n      d=\"M15.48 3H7.52C4.07 3 2 5.06 2 8.52v7.95C2 19.94 4.07 22 7.52 22h7.95c3.46 0 5.52-2.06 5.52-5.52V8.52C21 5.06 18.93 3 15.48 3Z\"\n      fill=\"currentColor\"\n      opacity={0.4}\n    />\n    <path\n      d=\"M21.02 2.98c-1.79-1.8-3.54-1.84-5.38 0L14.51 4.1c-.1.1-.13.24-.09.37.7 2.45 2.66 4.41 5.11 5.11.03.01.08.01.11.01.1 0 .2-.04.27-.11l1.11-1.12c.91-.91 1.36-1.78 1.36-2.67 0-.9-.45-1.79-1.36-2.71ZM17.86 10.42c-.27-.13-.53-.26-.77-.41-.2-.12-.4-.25-.59-.39-.16-.1-.34-.25-.52-.4-.02-.01-.08-.06-.16-.14-.31-.25-.64-.59-.95-.96-.02-.02-.08-.08-.13-.17-.1-.11-.25-.3-.38-.51-.11-.14-.24-.34-.36-.55-.15-.25-.28-.5-.4-.76-.13-.28-.23-.54-.32-.79L7.9 10.72c-.35.35-.69 1.01-.76 1.5l-.43 2.98c-.09.63.08 1.22.47 1.61.33.33.78.5 1.28.5.11 0 .22-.01.33-.02l2.97-.42c.49-.07 1.15-.4 1.5-.76l5.38-5.38c-.25-.08-.5-.19-.78-.31Z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);`,Re=`export const DeleteDocumentIcon = (props) => (\n  <svg\n    aria-hidden=\"true\"\n    fill=\"none\"\n    focusable=\"false\"\n    height=\"1em\"\n    role=\"presentation\"\n    viewBox=\"0 0 24 24\"\n    width=\"1em\"\n    {...props}\n  >\n    <path\n      d=\"M21.07 5.23c-1.61-.16-3.22-.28-4.84-.37v-.01l-.22-1.3c-.15-.92-.37-2.3-2.71-2.3h-2.62c-2.33 0-2.55 1.32-2.71 2.29l-.21 1.28c-.93.06-1.86.12-2.79.21l-2.04.2c-.42.04-.72.41-.68.82.04.41.4.71.82.67l2.04-.2c5.24-.52 10.52-.32 15.82.21h.08c.38 0 .71-.29.75-.68a.766.766 0 0 0-.69-.82Z\"\n      fill=\"currentColor\"\n    />\n    <path\n      d=\"M19.23 8.14c-.24-.25-.57-.39-.91-.39H5.68c-.34 0-.68.14-.91.39-.23.25-.36.59-.34.94l.62 10.26c.11 1.52.25 3.42 3.74 3.42h6.42c3.49 0 3.63-1.89 3.74-3.42l.62-10.25c.02-.36-.11-.7-.34-.95Z\"\n      fill=\"currentColor\"\n      opacity={0.399}\n    />\n    <path\n      clipRule=\"evenodd\"\n      d=\"M9.58 17a.75.75 0 0 1 .75-.75h3.33a.75.75 0 0 1 0 1.5h-3.33a.75.75 0 0 1-.75-.75ZM8.75 13a.75.75 0 0 1 .75-.75h5a.75.75 0 0 1 0 1.5h-5a.75.75 0 0 1-.75-.75Z\"\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n    />\n  </svg>\n);`,Be=`import {Dropdown, DropdownTrigger, DropdownMenu, DropdownItem, Button, cn} from \"@nextui-org/react\";\nimport {AddNoteIcon} from \"./AddNoteIcon.jsx\";\nimport {CopyDocumentIcon} from \"./CopyDocumentIcon.jsx\";\nimport {EditDocumentIcon} from \"./EditDocumentIcon.jsx\";\nimport {DeleteDocumentIcon} from \"./DeleteDocumentIcon.jsx\";\n\nexport default function App() {\n  const iconClasses = \"text-xl text-default-500 pointer-events-none flex-shrink-0\";\n\n  return (\n    <Dropdown\n      showArrow\n      classNames={{\n        base: \"before:bg-default-200\", // change arrow background\n        content: \"py-1 px-1 border border-default-200 bg-gradient-to-br from-white to-default-200 dark:from-default-50 dark:to-black\",\n      }}\n    >\n      <DropdownTrigger>\n        <Button \n          variant=\"bordered\" \n        >\n          Open Menu\n        </Button>\n      </DropdownTrigger>\n      <DropdownMenu variant=\"faded\" aria-label=\"Dropdown menu with description\">\n      <DropdownSection title=\"Actions\">  \n        <DropdownItem\n            key=\"new\"\n            shortcut=\"\\u2318N\"\n            description=\"Create a new file\"\n            startContent={<AddNoteIcon className={iconClasses} />}\n          >\n            New file\n          </DropdownItem>\n          <DropdownItem\n            key=\"copy\"\n            shortcut=\"\\u2318C\"\n            description=\"Copy the file link\"\n            startContent={<CopyDocumentIcon className={iconClasses} />}\n          >\n            Copy link\n          </DropdownItem>\n          <DropdownItem\n            key=\"edit\"\n            shortcut=\"\\u2318\\u21E7E\"\n            description=\"Allows you to edit the file\"\n            startContent={<EditDocumentIcon className={iconClasses} />}\n          >\n            Edit file\n          </DropdownItem>\n        </DropdownSection>\n        <DropdownSection title=\"Danger zone\">  \n          <DropdownItem\n            key=\"delete\"\n            className=\"text-danger\"\n            color=\"danger\"\n            shortcut=\"\\u2318\\u21E7D\"\n            description=\"Permanently delete the file\"\n            startContent={<DeleteDocumentIcon className={cn(iconClasses, \"text-danger\")} />}\n          >\n            Delete file\n          </DropdownItem>\n        </DropdownSection>\n      </DropdownMenu>\n    </Dropdown>\n  );\n}`,Ee={\"/App.jsx\":Be,\"/AddNoteIcon.jsx\":Ae,\"/CopyDocumentIcon.jsx\":Se,\"/EditDocumentIcon.jsx\":Ne,\"/DeleteDocumentIcon.jsx\":Re},S={...Ee};var je=`export const PlusIcon = (props) => (\n  <svg\n    aria-hidden=\"true\"\n    fill=\"none\"\n    focusable=\"false\"\n    height=\"1em\"\n    role=\"presentation\"\n    viewBox=\"0 0 24 24\"\n    width=\"1em\"\n    {...props}\n  >\n    <g\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={1.5}\n    >\n      <path d=\"M6 12h12\" />\n      <path d=\"M12 18V6\" />\n    </g>\n  </svg>\n);`,He=`import {Dropdown, DropdownTrigger, DropdownMenu, DropdownSection, DropdownItem, Button, User} from \"@nextui-org/react\";\nimport {PlusIcon} from \"./PlusIcon.jsx\";\nexport default function App() {\n  return (\n    <Dropdown\n      showArrow\n      radius=\"sm\"\n      classNames={{\n        base: \"before:bg-default-200\", // change arrow background\n        content: \"p-0 border-small border-divider bg-background\",\n      }}\n    >\n      <DropdownTrigger>\n        <Button variant=\"ghost\" disableRipple>Open Menu</Button>\n      </DropdownTrigger>\n      <DropdownMenu\n        aria-label=\"Custom item styles\"\n        disabledKeys={[\"profile\"]}\n        className=\"p-3\"\n        itemClasses={{\n          base: [\n            \"rounded-md\",\n            \"text-default-500\",\n            \"transition-opacity\",\n            \"data-[hover=true]:text-foreground\",\n            \"data-[hover=true]:bg-default-100\",\n            \"dark:data-[hover=true]:bg-default-50\",\n            \"data-[selectable=true]:focus:bg-default-50\",\n            \"data-[pressed=true]:opacity-70\",\n            \"data-[focus-visible=true]:ring-default-500\",\n          ],\n        }}\n      >\n        <DropdownSection aria-label=\"Profile & Actions\" showDivider>\n          <DropdownItem\n            isReadOnly\n            key=\"profile\"\n            className=\"h-14 gap-2 opacity-100\"\n          >\n            <User\n              name=\"Junior Garcia\"\n              description=\"@jrgarciadev\"\n              classNames={{\n                name: \"text-default-600\",\n                description: \"text-default-500\",\n              }}\n              avatarProps={{\n                size: \"sm\",\n                src: \"https://avatars.githubusercontent.com/u/30373425?v=4\",\n              }}\n            />\n          </DropdownItem>\n          <DropdownItem key=\"dashboard\">\n            Dashboard\n          </DropdownItem>\n          <DropdownItem key=\"settings\">Settings</DropdownItem>\n          <DropdownItem\n            key=\"new_project\"\n            endContent={<PlusIcon className=\"text-large\" />}\n          >\n            New Project\n          </DropdownItem>\n        </DropdownSection>\n\n        <DropdownSection aria-label=\"Preferences\" showDivider>\n          <DropdownItem key=\"quick_search\" shortcut=\"\\u2318K\">\n            Quick search\n          </DropdownItem>\n          <DropdownItem\n            isReadOnly\n            key=\"theme\"\n            className=\"cursor-default\"\n            endContent={\n              <select\n                className=\"z-10 outline-none w-16 py-0.5 rounded-md text-tiny group-data-[hover=true]:border-default-500 border-small border-default-300 dark:border-default-200 bg-transparent text-default-500\"\n                id=\"theme\"\n                name=\"theme\"\n              >\n                <option>System</option>\n                <option>Dark</option>\n                <option>Light</option>\n              </select>\n            }\n          >\n            Theme\n          </DropdownItem>\n        </DropdownSection>  \n\n        <DropdownSection aria-label=\"Help & Feedback\">\n          <DropdownItem key=\"help_and_feedback\">\n            Help & Feedback\n          </DropdownItem>\n          <DropdownItem key=\"logout\">Log Out</DropdownItem>\n        </DropdownSection> \n      </DropdownMenu>\n    </Dropdown>\n  );\n}`,Ke={\"/App.jsx\":He,\"/PlusIcon.jsx\":je},N={...Ke};var r={usage:D,dynamic:g,disabledKeys:f,action:y,variants:I,singleSelection:b,multipleSelection:v,shortcut:x,icons:C,description:k,sections:M,customTrigger:T,backdrop:A,customPopoverStyles:S,customItemsStyles:N};var Pe={title:\"Dropdown\",description:\"Displays a list of actions or options that a user can choose.\"};function R(t){let o={a:\"a\",blockquote:\"blockquote\",code:\"code\",h1:\"h1\",h2:\"h2\",h3:\"h3\",h4:\"h4\",hr:\"hr\",li:\"li\",p:\"p\",pre:\"pre\",strong:\"strong\",table:\"table\",tbody:\"tbody\",td:\"td\",th:\"th\",thead:\"thead\",tr:\"tr\",ul:\"ul\",...t.components},{CarbonAd:d,CodeDemo:n,ComponentLinks:i,ImportTabs:a,Kbd:c,PackageManagers:p,Spacer:s}=o;return d||l(\"CarbonAd\",!0),n||l(\"CodeDemo\",!0),i||l(\"ComponentLinks\",!0),a||l(\"ImportTabs\",!0),c||l(\"Kbd\",!0),p||l(\"PackageManagers\",!0),s||l(\"Spacer\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(o.h1,{id:\"dropdown\",children:\"Dropdown\"}),`\n`,(0,e.jsx)(o.p,{children:\"Displays a list of actions or options that a user can choose.\"}),`\n`,(0,e.jsx)(i,{component:\"dropdown\",reactAriaHook:\"useMenu\"}),`\n`,(0,e.jsx)(o.hr,{}),`\n`,(0,e.jsx)(d,{}),`\n`,(0,e.jsx)(o.h2,{id:\"installation\",children:\"Installation\"}),`\n`,(0,e.jsx)(p,{showGlobalInstallWarning:!0,commands:{cli:\"npx nextui-cli@latest add dropdown\",npm:\"npm install @nextui-org/dropdown\",yarn:\"yarn add @nextui-org/dropdown\",pnpm:\"pnpm add @nextui-org/dropdown\",bun:\"bun add @nextui-org/dropdown\"}}),`\n`,(0,e.jsx)(o.h2,{id:\"import\",children:\"Import\"}),`\n`,(0,e.jsx)(o.p,{children:\"NextUI exports 5 dropdown-related components:\"}),`\n`,(0,e.jsxs)(o.ul,{children:[`\n`,(0,e.jsxs)(o.li,{children:[(0,e.jsx)(o.strong,{children:\"Dropdown\"}),\": The main component, which is a wrapper for the other components. This component is an extension of the \",(0,e.jsx)(o.a,{href:\"/docs/components/popover\",children:\"Popover\"}),\" component, so it accepts all the props of the Popover component.\"]}),`\n`,(0,e.jsxs)(o.li,{children:[(0,e.jsx)(o.strong,{children:\"DropdownTrigger\"}),\": The component that triggers the dropdown menu to open.\"]}),`\n`,(0,e.jsxs)(o.li,{children:[(0,e.jsx)(o.strong,{children:\"DropdownMenu\"}),\": The component that contains the dropdown items.\"]}),`\n`,(0,e.jsxs)(o.li,{children:[(0,e.jsx)(o.strong,{children:\"DropdownSection\"}),\": The component that contains a group of dropdown items.\"]}),`\n`,(0,e.jsxs)(o.li,{children:[(0,e.jsx)(o.strong,{children:\"DropdownItem\"}),\": The component that represents a dropdown item.\"]}),`\n`]}),`\n`,(0,e.jsx)(a,{commands:{main:`import {\nDropdown,\nDropdownTrigger,\nDropdownMenu,\nDropdownSection,\nDropdownItem\n} from \"@nextui-org/react\";`,individual:`import {\nDropdown,\nDropdownTrigger,\nDropdownMenu,\nDropdownSection,\nDropdownItem\n} from \"@nextui-org/dropdown\";`}}),`\n`,(0,e.jsx)(o.h2,{id:\"usage\",children:\"Usage\"}),`\n`,(0,e.jsx)(n,{title:\"Usage\",files:r.usage}),`\n`,(0,e.jsx)(o.h3,{id:\"dynamic-items\",children:\"Dynamic items\"}),`\n`,(0,e.jsxs)(o.p,{children:[\"Dropdown follows the \",(0,e.jsx)(o.a,{href:\"https://react-spectrum.adobe.com/react-stately/collections.html\",children:\"Collection Components API\"}),\", accepting both static and dynamic collections.\"]}),`\n`,(0,e.jsxs)(o.ul,{children:[`\n`,(0,e.jsxs)(o.li,{children:[(0,e.jsx)(o.strong,{children:\"Static\"}),\": The usage example above shows the static implementation, which can be used when the full list of options is known ahead of time.\"]}),`\n`,(0,e.jsxs)(o.li,{children:[(0,e.jsx)(o.strong,{children:\"Dynamic\"}),\": The example below can be used when the options come from an external data source such as an API call, or update over time.\"]}),`\n`]}),`\n`,(0,e.jsx)(n,{title:\"Dynamic items\",files:r.dynamic}),`\n`,(0,e.jsx)(o.h3,{id:\"disabled-keys\",children:\"Disabled Keys\"}),`\n`,(0,e.jsxs)(o.p,{children:[\"Dropdown items can be disabled using the \",(0,e.jsx)(o.code,{children:\"disabledKeys\"}),\" prop to the \",(0,e.jsx)(o.code,{children:\"DropdownMenu\"}),\" component.\"]}),`\n`,(0,e.jsx)(n,{title:\"Disabled Keys\",highlightedLines:\"17\",files:r.disabledKeys}),`\n`,(0,e.jsxs)(o.blockquote,{children:[`\n`,(0,e.jsxs)(o.p,{children:[(0,e.jsx)(o.strong,{children:\"Note\"}),\": It's important to have a unique key for each item, otherwise the disabled keys will not work.\"]}),`\n`]}),`\n`,(0,e.jsx)(o.h3,{id:\"action-event\",children:\"Action event\"}),`\n`,(0,e.jsxs)(o.p,{children:[\"You can use the \",(0,e.jsx)(o.code,{children:\"onAction\"}),\" prop to get the key of the selected item.\"]}),`\n`,(0,e.jsx)(n,{title:\"Action event\",highlightedLines:\"15\",files:r.action}),`\n`,(0,e.jsx)(o.h3,{id:\"variants\",children:\"Variants\"}),`\n`,(0,e.jsxs)(o.p,{children:[\"You can use the \",(0,e.jsx)(o.code,{children:\"variant\"}),\" in the \",(0,e.jsx)(o.code,{children:\"DropdownMenu\"}),\" component to change the \",(0,e.jsx)(o.code,{children:\"hover\"}),\" style of the dropdown items.\"]}),`\n`,(0,e.jsx)(n,{title:\"Variants\",highlightedLines:\"21-22\",files:r.variants}),`\n`,(0,e.jsx)(o.h3,{id:\"single-selection\",children:\"Single Selection\"}),`\n`,(0,e.jsxs)(o.p,{children:[\"You can set the \",(0,e.jsx)(o.code,{children:\"selectionMode\"}),\" property as \",(0,e.jsx)(o.code,{children:\"single\"}),\" to allow the user to select only one item at a time.\"]}),`\n`,(0,e.jsx)(n,{title:\"Single Selection\",files:r.singleSelection}),`\n`,(0,e.jsx)(o.h3,{id:\"multiple-selection\",children:\"Multiple Selection\"}),`\n`,(0,e.jsxs)(o.p,{children:[\"You can set the \",(0,e.jsx)(o.code,{children:\"selectionMode\"}),\" property as \",(0,e.jsx)(o.code,{children:\"multiple\"}),\" to allow the user to select multiple items at a time.\"]}),`\n`,(0,e.jsx)(n,{title:\"Multiple Selection\",files:r.multipleSelection}),`\n`,(0,e.jsxs)(o.blockquote,{children:[`\n`,(0,e.jsxs)(o.p,{children:[(0,e.jsx)(o.strong,{children:\"Note\"}),\": To allow empty selection, you can set the \",(0,e.jsx)(o.code,{children:\"disallowEmptySelection\"}),\" property as \",(0,e.jsx)(o.code,{children:\"false\"}),\".\"]}),`\n`]}),`\n`,(0,e.jsx)(o.h3,{id:\"with-shortcut\",children:\"With Shortcut\"}),`\n`,(0,e.jsxs)(o.p,{children:[\"You can use the \",(0,e.jsx)(o.code,{children:\"shortcut\"}),\" prop to add a shortcut to the dropdown item.\"]}),`\n`,(0,e.jsx)(n,{title:\"With Shortcut\",highlightedLines:\"14-19\",files:r.shortcut}),`\n`,(0,e.jsxs)(o.blockquote,{children:[`\n`,(0,e.jsxs)(o.p,{children:[(0,e.jsx)(o.strong,{children:\"Note\"}),\": Dropdown does not handle the shortcut event, you need to handle it yourself.\"]}),`\n`]}),`\n`,(0,e.jsx)(o.h3,{id:\"with-icons\",children:\"With Icons\"}),`\n`,(0,e.jsxs)(o.p,{children:[\"It is possible to add icons to the dropdown items using the \",(0,e.jsx)(o.code,{children:\"startContent\"}),\" / \",(0,e.jsx)(o.code,{children:\"endContent\"}),\" props.\"]}),`\n`,(0,e.jsx)(n,{title:\"With Icons\",highlightedLines:\"23,30,37,47\",files:r.icons}),`\n`,(0,e.jsxs)(o.blockquote,{children:[`\n`,(0,e.jsxs)(o.p,{children:[(0,e.jsx)(o.strong,{children:\"Note\"}),\": If you use \",(0,e.jsx)(o.code,{children:\"currentColor\"}),\" as the icon color, the icon will have the same color as the item text.\"]}),`\n`]}),`\n`,(0,e.jsx)(o.h3,{id:\"with-description\",children:\"With Description\"}),`\n`,(0,e.jsxs)(o.p,{children:[\"You can use the \",(0,e.jsx)(o.code,{children:\"description\"}),\" prop to add a description to the dropdown item.\"]}),`\n`,(0,e.jsx)(n,{title:\"With Description\",highlightedLines:\"23,31,39,50\",files:r.description}),`\n`,(0,e.jsx)(o.h3,{id:\"with-sections\",children:\"With Sections\"}),`\n`,(0,e.jsxs)(o.p,{children:[\"You can use the \",(0,e.jsx)(o.code,{children:\"DropdownSection\"}),\" component to group dropdown items.\"]}),`\n`,(0,e.jsx)(n,{title:\"With Sections\",highlightedLines:\"20,46\",files:r.sections}),`\n`,(0,e.jsxs)(o.blockquote,{children:[`\n`,(0,e.jsxs)(o.p,{children:[(0,e.jsx)(o.strong,{children:\"Note\"}),\": Sections without a \",(0,e.jsx)(o.code,{children:\"title\"}),\" must provide an \",(0,e.jsx)(o.code,{children:\"aria-label\"}),\" for accessibility.\"]}),`\n`]}),`\n`,(0,e.jsx)(o.h3,{id:\"custom-trigger\",children:\"Custom Trigger\"}),`\n`,(0,e.jsxs)(o.p,{children:[\"You can use any component as a trigger for the dropdown menu, just wrap it in the \",(0,e.jsx)(o.code,{children:\"DropdownTrigger\"}),\" component.\"]}),`\n`,(0,e.jsx)(n,{title:\"Custom Trigger\",highlightedLines:\"17-18\",files:r.customTrigger}),`\n`,(0,e.jsx)(o.h3,{id:\"changing-the-backdrop\",children:\"Changing the backdrop\"}),`\n`,(0,e.jsxs)(o.p,{children:[\"As we mentioned earlier, the \",(0,e.jsx)(o.code,{children:\"Dropdown\"}),\" component is an extension of the \",(0,e.jsx)(o.a,{href:\"/docs/components/popover\",children:\"Popover\"}),` component,\nso it accepts all the props of the Popover component, including the `,(0,e.jsx)(o.code,{children:\"backdrop\"}),\" prop.\"]}),`\n`,(0,e.jsx)(n,{title:\"Changing the backdrop\",highlightedLines:\"17\",files:r.backdrop}),`\n`,(0,e.jsx)(o.h3,{id:\"routing\",children:\"Routing\"}),`\n`,(0,e.jsxs)(o.p,{children:[\"The \",(0,e.jsx)(o.code,{children:\"<DropdownItem>\"}),\" component works with frameworks and client side routers like \",(0,e.jsx)(o.a,{href:\"https://nextjs.org/\",children:\"Next.js\"}),` and\n`,(0,e.jsx)(o.a,{href:\"https://reactrouter.com/en/main\",children:\"React Router\"}),\". See the \",(0,e.jsx)(o.a,{href:\"/docs/guide/routing\",children:\"Routing\"}),\" guide to learn how to set this up.\"]}),`\n`,(0,e.jsx)(o.pre,{children:(0,e.jsx)(o.code,{className:\"language-jsx\",children:`import {Dropdown, DropdownMenu, DropdownTrigger, DropdownItem, Button} from \"@nextui-org/react\";\n\nfunction App() {\n  return (\n    <Dropdown>\n      <DropdownTrigger>\n        <Button variant=\"bordered\">Open Menu</Button>\n      </DropdownTrigger>\n      <DropdownMenu aria-label=\"Link Actions\">\n        <DropdownItem key=\"home\" href=\"/home\">\n          Home\n        </DropdownItem>\n        <DropdownItem key=\"about\" href=\"/about\">\n          About\n        </DropdownItem>\n      </DropdownMenu>\n    </Dropdown>\n  );\n}\n`})}),`\n`,(0,e.jsx)(o.h2,{id:\"slots\",children:\"Slots\"}),`\n`,(0,e.jsxs)(o.p,{children:[\"Dropdown has 3 components with slots the \",(0,e.jsx)(o.code,{children:\"DropdownMenu\"}),\", \",(0,e.jsx)(o.code,{children:\"DropdownItem\"}),\" and \",(0,e.jsx)(o.code,{children:\"DropdownSection\"}),\" components.\"]}),`\n`,(0,e.jsx)(o.h3,{id:\"dropdownmenu\",children:\"DropdownMenu\"}),`\n`,(0,e.jsxs)(o.ul,{children:[`\n`,(0,e.jsxs)(o.li,{children:[(0,e.jsx)(o.strong,{children:\"base\"}),\": The main wrapper for the menu component. This slot wraps the \",(0,e.jsx)(o.code,{children:\"topContent\"}),\", \",(0,e.jsx)(o.code,{children:\"bottomContent\"}),\" and the \",(0,e.jsx)(o.code,{children:\"list\"}),\" slot.\"]}),`\n`,(0,e.jsxs)(o.li,{children:[(0,e.jsx)(o.strong,{children:\"list\"}),\": The slot for the menu list component. You can see this slot as the \",(0,e.jsx)(o.code,{children:\"ul\"}),\" slot.\"]}),`\n`,(0,e.jsxs)(o.li,{children:[(0,e.jsx)(o.strong,{children:\"emptyContent\"}),\": The slot content to display when the collection is empty.\"]}),`\n`]}),`\n`,(0,e.jsx)(o.h3,{id:\"dropdownitem\",children:\"DropdownItem\"}),`\n`,(0,e.jsxs)(o.ul,{children:[`\n`,(0,e.jsxs)(o.li,{children:[(0,e.jsx)(o.strong,{children:\"base\"}),\": The main slot for the dropdown item. It wraps all the other slots.\"]}),`\n`,(0,e.jsxs)(o.li,{children:[(0,e.jsx)(o.strong,{children:\"wrapper\"}),\": The \",(0,e.jsx)(o.code,{children:\"title\"}),\" and \",(0,e.jsx)(o.code,{children:\"description\"}),\" wrapper.\"]}),`\n`,(0,e.jsxs)(o.li,{children:[(0,e.jsx)(o.strong,{children:\"title\"}),\": The title of the dropdown item.\"]}),`\n`,(0,e.jsxs)(o.li,{children:[(0,e.jsx)(o.strong,{children:\"description\"}),\": The description of the dropdown item.\"]}),`\n`,(0,e.jsxs)(o.li,{children:[(0,e.jsx)(o.strong,{children:\"shortcut\"}),\": The shortcut slot.\"]}),`\n`,(0,e.jsxs)(o.li,{children:[(0,e.jsx)(o.strong,{children:\"selectedIcon\"}),\": The selected icon slot. This is only visible when the item is selected.\"]}),`\n`]}),`\n`,(0,e.jsx)(o.h3,{id:\"dropdownsection\",children:\"DropdownSection\"}),`\n`,(0,e.jsxs)(o.ul,{children:[`\n`,(0,e.jsxs)(o.li,{children:[(0,e.jsx)(o.strong,{children:\"base\"}),\": The main slot for the dropdown section. It wraps all the other slots.\"]}),`\n`,(0,e.jsxs)(o.li,{children:[(0,e.jsx)(o.strong,{children:\"heading\"}),\": The title that is render on top of the section group.\"]}),`\n`,(0,e.jsxs)(o.li,{children:[(0,e.jsx)(o.strong,{children:\"group\"}),\": The group of dropdown items.\"]}),`\n`,(0,e.jsxs)(o.li,{children:[(0,e.jsx)(o.strong,{children:\"divider\"}),\": The divider that is render between the groups. This is only visible when \",(0,e.jsx)(o.code,{children:\"showDivider\"}),\" is \",(0,e.jsx)(o.code,{children:\"true\"}),\".\"]}),`\n`]}),`\n`,(0,e.jsx)(o.h3,{id:\"customizing-the-dropdown-popover\",children:\"Customizing the dropdown popover\"}),`\n`,(0,e.jsxs)(o.p,{children:[\"The \",(0,e.jsx)(o.code,{children:\"Dropdown\"}),\" component is an extension of the \",(0,e.jsx)(o.a,{href:\"/docs/components/popover\",children:\"Popover\"}),` component, so you can use the same\nslots to customize the dropdown.`]}),`\n`,(0,e.jsx)(n,{title:\"Custom Popover Styles\",highlightedLines:\"14-15\",files:r.customPopoverStyles}),`\n`,(0,e.jsx)(o.h3,{id:\"customizing-the-dropdown-items-style\",children:\"Customizing the dropdown items style\"}),`\n`,(0,e.jsxs)(o.p,{children:[\"You can customize the dropdown items either by using the \",(0,e.jsx)(o.code,{children:\"DropdownMenu\"}),\" \",(0,e.jsx)(o.code,{children:\"itemClasses\"}),` prop or by using the\n`,(0,e.jsx)(o.code,{children:\"DropdownItem\"}),\" slots, the \",(0,e.jsx)(o.code,{children:\"itemClasses\"}),` allows you to customize all the items at once, while the slots allow\nyou to customize each item individually.`]}),`\n`,(0,e.jsx)(n,{title:\"Custom Dropdown Items Styles\",files:r.customItemsStyles}),`\n`,(0,e.jsx)(s,{y:4}),`\n`,(0,e.jsx)(o.h3,{id:\"keyboard-interactions\",children:\"Keyboard Interactions\"}),`\n`,(0,e.jsxs)(o.table,{children:[(0,e.jsx)(o.thead,{children:(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.th,{children:\"Key\"}),(0,e.jsx)(o.th,{children:\"Description\"})]})}),(0,e.jsxs)(o.tbody,{children:[(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:(0,e.jsx)(c,{children:\"Space\"})}),(0,e.jsxs)(o.td,{children:[\"When focus is on \",(0,e.jsx)(o.code,{children:\"DropdownTrigger\"}),\", opens the dropdown menu and focuses the first item. When focus is on an item, activates the focused item.\"]})]}),(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:(0,e.jsx)(c,{children:\"Enter\"})}),(0,e.jsxs)(o.td,{children:[\"When focus is on \",(0,e.jsx)(o.code,{children:\"DropdownTrigger\"}),\", opens the dropdown menu and focuses the first item. When focus is on an item, activates the focused item.\"]})]}),(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:(0,e.jsx)(c,{children:\"ArrowDown\"})}),(0,e.jsxs)(o.td,{children:[\"When focus is on \",(0,e.jsx)(o.code,{children:\"DropdownTrigger\"}),\", opens the dropdown menu. When focus is on an item, moves focus to the next item.\"]})]}),(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:(0,e.jsx)(c,{children:\"ArrowUp\"})}),(0,e.jsx)(o.td,{children:\"When focus is on an item, moves focus to the previous item.\"})]}),(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:(0,e.jsx)(c,{children:\"Esc\"})}),(0,e.jsxs)(o.td,{children:[\"Closes the dropdown menu and moves focus to \",(0,e.jsx)(o.code,{children:\"DropdownTrigger\"}),\".\"]})]}),(0,e.jsxs)(o.tr,{children:[(0,e.jsxs)(o.td,{children:[(0,e.jsx)(c,{children:\"A-Z\"}),\" or \",(0,e.jsx)(c,{children:\"a-z\"})]}),(0,e.jsx)(o.td,{children:\"When the menu is open, moves focus to the next menu item with a label that starts with the typed character if such an menu item exists.\"})]})]})]}),`\n`,(0,e.jsx)(s,{y:4}),`\n`,(0,e.jsx)(o.h2,{id:\"data-attributes\",children:\"Data Attributes\"}),`\n`,(0,e.jsxs)(o.p,{children:[(0,e.jsx)(o.code,{children:\"DropdownItem\"}),\" has the following attributes on the \",(0,e.jsx)(o.code,{children:\"base\"}),\" element:\"]}),`\n`,(0,e.jsxs)(o.ul,{children:[`\n`,(0,e.jsxs)(o.li,{children:[(0,e.jsx)(o.strong,{children:\"data-disabled\"}),`:\nWhen the dropdown item is disabled. Based on dropdown `,(0,e.jsx)(o.code,{children:\"disabledKeys\"}),\" prop.\"]}),`\n`,(0,e.jsxs)(o.li,{children:[(0,e.jsx)(o.strong,{children:\"data-selected\"}),`:\nWhen the dropdown item is selected. Based on dropdown `,(0,e.jsx)(o.code,{children:\"selectedKeys\"}),\" prop.\"]}),`\n`,(0,e.jsxs)(o.li,{children:[(0,e.jsx)(o.strong,{children:\"data-hover\"}),`:\nWhen the dropdown item is being hovered. Based on `,(0,e.jsx)(o.a,{href:\"https://react-spectrum.adobe.com/react-aria/useHover.html\",children:\"useHover\"})]}),`\n`,(0,e.jsxs)(o.li,{children:[(0,e.jsx)(o.strong,{children:\"data-pressed\"}),`:\nWhen the dropdown item is pressed. Based on `,(0,e.jsx)(o.a,{href:\"https://react-spectrum.adobe.com/react-aria/usePress.html\",children:\"usePress\"})]}),`\n`,(0,e.jsxs)(o.li,{children:[(0,e.jsx)(o.strong,{children:\"data-focus\"}),`:\nWhen the dropdown item is being focused. Based on `,(0,e.jsx)(o.a,{href:\"https://react-spectrum.adobe.com/react-aria/useFocusRing.html\",children:\"useFocusRing\"}),\".\"]}),`\n`,(0,e.jsxs)(o.li,{children:[(0,e.jsx)(o.strong,{children:\"data-focus-visible\"}),`:\nWhen the dropdown item is being focused with the keyboard. Based on `,(0,e.jsx)(o.a,{href:\"https://react-spectrum.adobe.com/react-aria/useFocusRing.html\",children:\"useFocusRing\"}),\".\"]}),`\n`]}),`\n`,(0,e.jsx)(s,{y:4}),`\n`,(0,e.jsx)(o.h2,{id:\"accessibility\",children:\"Accessibility\"}),`\n`,(0,e.jsxs)(o.ul,{children:[`\n`,(0,e.jsxs)(o.li,{children:[\"Exposed to assistive technology as a \",(0,e.jsx)(o.code,{children:\"button\"}),\" with a \",(0,e.jsx)(o.code,{children:\"menu\"}),\" using ARIA.\"]}),`\n`,(0,e.jsx)(o.li,{children:\"Support for single, multiple, or no selection.\"}),`\n`,(0,e.jsx)(o.li,{children:\"Support for disabled items.\"}),`\n`,(0,e.jsx)(o.li,{children:\"Support for sections.\"}),`\n`,(0,e.jsx)(o.li,{children:\"Complex item labeling support for accessibility.\"}),`\n`,(0,e.jsxs)(o.li,{children:[\"Keyboard navigation support including arrow keys, home/end, page up/down. See \",(0,e.jsx)(o.a,{href:\"#keyboard-interactions\",children:\"Keyboard Interactions\"}),\" for more details.\"]}),`\n`,(0,e.jsx)(o.li,{children:\"Automatic scrolling support during keyboard navigation.\"}),`\n`,(0,e.jsx)(o.li,{children:\"Keyboard support for opening the menu using the arrow keys, including automatically focusing the first or last item accordingly.\"}),`\n`,(0,e.jsx)(o.li,{children:\"Typeahead to allow focusing items by typing text.\"}),`\n`,(0,e.jsx)(o.li,{children:\"Virtualized scrolling support for performance with long lists.\"}),`\n`]}),`\n`,(0,e.jsx)(s,{y:4}),`\n`,(0,e.jsx)(o.h2,{id:\"api\",children:\"API\"}),`\n`,(0,e.jsx)(o.h3,{id:\"dropdown-props\",children:\"Dropdown Props\"}),`\n`,(0,e.jsxs)(o.table,{children:[(0,e.jsx)(o.thead,{children:(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.th,{children:\"Attribute\"}),(0,e.jsx)(o.th,{children:\"Type\"}),(0,e.jsx)(o.th,{children:\"Description\"}),(0,e.jsx)(o.th,{children:\"Default\"})]})}),(0,e.jsxs)(o.tbody,{children:[(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:\"children*\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:\"ReactNode[]\"})}),(0,e.jsxs)(o.td,{children:[\"The children to render. Usually a \",(0,e.jsx)(o.code,{children:\"DropdownTrigger\"}),\" and \",(0,e.jsx)(o.code,{children:\"DropdownMenu\"}),\" elements.\"]}),(0,e.jsx)(o.td,{children:\"-\"})]}),(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:\"type\"}),(0,e.jsxs)(o.td,{children:[(0,e.jsx)(o.code,{children:\"menu\"}),\" | \",(0,e.jsx)(o.code,{children:\"listbox\"})]}),(0,e.jsx)(o.td,{children:\"Type of overlay that is opened by the dropdown trigger.\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:\"menu\"})})]}),(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:\"trigger\"}),(0,e.jsxs)(o.td,{children:[(0,e.jsx)(o.code,{children:\"press\"}),\" | \",(0,e.jsx)(o.code,{children:\"longPress\"})]}),(0,e.jsx)(o.td,{children:\"How the dropdown menu is triggered.\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:\"press\"})})]}),(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:\"isDisabled\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:\"boolean\"})}),(0,e.jsx)(o.td,{children:\"Whether the dropdown trigger is disabled.\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:\"false\"})})]}),(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:\"closeOnSelect\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:\"boolean\"})}),(0,e.jsx)(o.td,{children:\"Whether the dropdown menu should be closed when an item is selected.\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:\"true\"})})]}),(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:\"shouldBlockScroll\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:\"boolean\"})}),(0,e.jsx)(o.td,{children:\"Whether the dropdown menu should block scrolling outside the menu.\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:\"true\"})})]}),(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:\"PopoverProps\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.a,{href:\"/docs/components/popover\",children:\"PopoverProps\"})}),(0,e.jsx)(o.td,{children:\"Since the dropdown is an extension of the popover, it accepts all the props of the popover component.\"}),(0,e.jsx)(o.td,{children:\"-\"})]})]})]}),`\n`,(0,e.jsx)(o.h3,{id:\"dropdown-events\",children:\"Dropdown Events\"}),`\n`,(0,e.jsxs)(o.table,{children:[(0,e.jsx)(o.thead,{children:(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.th,{children:\"Attribute\"}),(0,e.jsx)(o.th,{children:\"Type\"}),(0,e.jsx)(o.th,{children:\"Description\"})]})}),(0,e.jsxs)(o.tbody,{children:[(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:\"onOpenChange\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:\"(isOpen: boolean) => void\"})}),(0,e.jsx)(o.td,{children:\"Handler that is called when the dropdown's open state changes.\"})]}),(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:\"shouldCloseOnInteractOutside\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:\"(e: HTMLElement) => void\"})}),(0,e.jsxs)(o.td,{children:[\"When user interacts with the argument element outside of the dropdown ref, return \",(0,e.jsx)(o.code,{children:\"true\"}),\" if \",(0,e.jsx)(o.code,{children:\"onClose\"}),\" should be called.\"]})]}),(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:\"onClose\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:\"() => void\"})}),(0,e.jsx)(o.td,{children:\"Handler that is called when the dropdown should close.\"})]})]})]}),`\n`,(0,e.jsx)(o.hr,{}),`\n`,(0,e.jsx)(o.h3,{id:\"dropdowntrigger-props\",children:\"DropdownTrigger Props\"}),`\n`,(0,e.jsxs)(o.table,{children:[(0,e.jsx)(o.thead,{children:(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.th,{children:\"Attribute\"}),(0,e.jsx)(o.th,{children:\"Type\"}),(0,e.jsx)(o.th,{children:\"Description\"}),(0,e.jsx)(o.th,{children:\"Default\"})]})}),(0,e.jsx)(o.tbody,{children:(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:\"children\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:\"ReactNode\"})}),(0,e.jsxs)(o.td,{children:[\"The dropdown trigger component, ensure the \",(0,e.jsx)(o.code,{children:\"children\"}),\" passed is focusable. Users can tab to it using their keyboard, and it can take a ref. It is critical for accessibility.\"]}),(0,e.jsx)(o.td,{children:\"-\"})]})})]}),`\n`,(0,e.jsx)(o.hr,{}),`\n`,(0,e.jsx)(o.h3,{id:\"dropdownmenu-props\",children:\"DropdownMenu Props\"}),`\n`,(0,e.jsxs)(o.table,{children:[(0,e.jsx)(o.thead,{children:(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.th,{children:\"Attribute\"}),(0,e.jsx)(o.th,{children:\"Type\"}),(0,e.jsx)(o.th,{children:\"Description\"}),(0,e.jsx)(o.th,{})]})}),(0,e.jsxs)(o.tbody,{children:[(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:\"children*\"}),(0,e.jsxs)(o.td,{children:[(0,e.jsx)(o.code,{children:\"ReactNode\"}),\" | \",(0,e.jsx)(o.code,{children:\"((item: T) => ReactElement)\"})]}),(0,e.jsxs)(o.td,{children:[\"The contents of the collection. It's usually the \",(0,e.jsx)(o.code,{children:\"DropdownItem\"}),\" or \",(0,e.jsx)(o.code,{children:\"DropdownSection\"}),\". (static)\"]}),(0,e.jsx)(o.td,{children:\"-\"})]}),(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:\"items\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\",children:(0,e.jsx)(o.code,{children:\"Iterable<T>\"})})}),(0,e.jsx)(o.td,{children:\"Item objects in the collection. (dynamic)\"}),(0,e.jsx)(o.td,{children:\"-\"})]}),(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:\"variant\"}),(0,e.jsxs)(o.td,{children:[(0,e.jsx)(o.code,{children:\"solid\"}),\" | \",(0,e.jsx)(o.code,{children:\"bordered\"}),\" | \",(0,e.jsx)(o.code,{children:\"light\"}),\" | \",(0,e.jsx)(o.code,{children:\"flat\"}),\" | \",(0,e.jsx)(o.code,{children:\"faded\"}),\" | \",(0,e.jsx)(o.code,{children:\"shadow\"})]}),(0,e.jsx)(o.td,{children:\"The dropdown items appearance style.\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:\"solid\"})})]}),(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:\"color\"}),(0,e.jsxs)(o.td,{children:[(0,e.jsx)(o.code,{children:\"default\"}),\" | \",(0,e.jsx)(o.code,{children:\"primary\"}),\" | \",(0,e.jsx)(o.code,{children:\"secondary\"}),\" | \",(0,e.jsx)(o.code,{children:\"success\"}),\" | \",(0,e.jsx)(o.code,{children:\"warning\"}),\" | \",(0,e.jsx)(o.code,{children:\"danger\"})]}),(0,e.jsx)(o.td,{children:\"The dropdown items color theme.\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:\"default\"})})]}),(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:\"selectionMode\"}),(0,e.jsxs)(o.td,{children:[(0,e.jsx)(o.code,{children:\"none\"}),\" | \",(0,e.jsx)(o.code,{children:\"single\"}),\" | \",(0,e.jsx)(o.code,{children:\"multiple\"})]}),(0,e.jsx)(o.td,{children:\"The type of selection that is allowed in the collection.\"}),(0,e.jsx)(o.td,{children:\"-\"})]}),(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:\"selectedKeys\"}),(0,e.jsxs)(o.td,{children:[(0,e.jsx)(o.code,{children:\"all\"}),\" | \",(0,e.jsx)(o.code,{children:\"Iterable<React.Key>\"})]}),(0,e.jsx)(o.td,{children:\"The currently selected keys in the collection (controlled).\"}),(0,e.jsx)(o.td,{children:\"-\"})]}),(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:\"disabledKeys\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:\"Iterable<React.Key>\"})}),(0,e.jsx)(o.td,{children:\"The item keys that are disabled. These items cannot be selected, focused, or otherwise interacted with.\"}),(0,e.jsx)(o.td,{children:\"-\"})]}),(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:\"defaultSelectedKeys\"}),(0,e.jsxs)(o.td,{children:[(0,e.jsx)(o.code,{children:\"all\"}),\" | \",(0,e.jsx)(o.code,{children:\"Iterable<React.Key>\"})]}),(0,e.jsx)(o.td,{children:\"The initial selected keys in the collection (uncontrolled).\"}),(0,e.jsx)(o.td,{children:\"-\"})]}),(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:\"disallowEmptySelection\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:\"boolean\"})}),(0,e.jsx)(o.td,{children:\"Whether the collection allows empty selection.\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:\"false\"})})]}),(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:\"autoFocus\"}),(0,e.jsxs)(o.td,{children:[(0,e.jsx)(o.code,{children:\"boolean\"}),\" | \",(0,e.jsx)(o.code,{children:\"first\"}),\" | \",(0,e.jsx)(o.code,{children:\"last\"})]}),(0,e.jsx)(o.td,{children:\"Where the focus should be set.\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:\"false\"})})]}),(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:\"topContent\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:\"ReactNode\"})}),(0,e.jsx)(o.td,{children:\"The content to display above the listbox items.\"}),(0,e.jsx)(o.td,{children:\"-\"})]}),(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:\"bottomContent\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:\"ReactNode\"})}),(0,e.jsx)(o.td,{children:\"The content to display below the listbox items.\"}),(0,e.jsx)(o.td,{children:\"-\"})]}),(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:\"emptyContent\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:\"ReactNode\"})}),(0,e.jsx)(o.td,{children:\"The content to display when the collection is empty.\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:\"No items.\"})})]}),(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:\"hideEmptyContent\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:\"boolean\"})}),(0,e.jsx)(o.td,{children:\"Whether to not display the empty content when the collection is empty.\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:\"false\"})})]}),(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:\"hideSelectedIcon\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:\"boolean\"})}),(0,e.jsx)(o.td,{children:\"Whether to hide the check icon when the items are selected.\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:\"false\"})})]}),(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:\"shouldFocusWrap\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:\"boolean\"})}),(0,e.jsx)(o.td,{children:\"Whether keyboard navigation is circular.\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:\"false\"})})]}),(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:\"closeOnSelect\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:\"boolean\"})}),(0,e.jsx)(o.td,{children:\"Whether the dropdown menu should be closed when an item is selected.\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:\"true\"})})]}),(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:\"disableAnimation\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:\"boolean\"})}),(0,e.jsx)(o.td,{children:\"Whether to disable the animation of the dropdown items.\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:\"false\"})})]}),(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:\"classNames\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:'Record<\"base\"\\uFF5C \"list\"\\uFF5C \"emptyContent\", string>'})}),(0,e.jsx)(o.td,{children:\"Allows to set custom class names for the dropdown menu slots.\"}),(0,e.jsx)(o.td,{children:\"-\"})]}),(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:\"itemClasses\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:'Record<\"base\"\\uFF5C \"wrapper\"\\uFF5C \"title\"\\uFF5C \"description\"\\uFF5C \"shortcut\" \\uFF5C \"selectedIcon\", string>'})}),(0,e.jsx)(o.td,{children:\"Allows to set custom class names for the dropdown item slots.\"}),(0,e.jsx)(o.td,{children:\"-\"})]})]})]}),`\n`,(0,e.jsx)(o.h3,{id:\"dropdownmenu-events\",children:\"DropdownMenu Events\"}),`\n`,(0,e.jsxs)(o.table,{children:[(0,e.jsx)(o.thead,{children:(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.th,{children:\"Attribute\"}),(0,e.jsx)(o.th,{children:\"Type\"}),(0,e.jsx)(o.th,{children:\"Description\"})]})}),(0,e.jsxs)(o.tbody,{children:[(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:\"onAction\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:\"(key: React.Key) => void\"})}),(0,e.jsx)(o.td,{children:\"Handler that is called when an item is selected.\"})]}),(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:\"onSelectionChange\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:'(keys: \"all\" | Set<React.Key> & {anchorKey?: string; currentKey?: string}) => void'})}),(0,e.jsx)(o.td,{children:\"Handler that is called when the selection changes.\"})]}),(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:\"onClose\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:\"() => void\"})}),(0,e.jsx)(o.td,{children:\"Handler that is called when the menu should close after selecting an item.\"})]})]})]}),`\n`,(0,e.jsx)(o.hr,{}),`\n`,(0,e.jsx)(o.h3,{id:\"dropdownsection-props\",children:\"DropdownSection Props\"}),`\n`,(0,e.jsxs)(o.table,{children:[(0,e.jsx)(o.thead,{children:(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.th,{children:\"Attribute\"}),(0,e.jsx)(o.th,{children:\"Type\"}),(0,e.jsx)(o.th,{children:\"Description\"}),(0,e.jsx)(o.th,{children:\"Default\"})]})}),(0,e.jsxs)(o.tbody,{children:[(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:\"children*\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:\"ReactNode\"})}),(0,e.jsxs)(o.td,{children:[\"The contents of the dropdown section. Usually a list of \",(0,e.jsx)(o.code,{children:\"DropdownItem\"}),\" components. (static)\"]}),(0,e.jsx)(o.td,{children:\"-\"})]}),(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:\"title\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:\"string\"})}),(0,e.jsx)(o.td,{children:\"The title of the dropdown section.\"}),(0,e.jsx)(o.td,{children:\"-\"})]}),(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:\"items\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\",children:(0,e.jsx)(o.code,{children:\"Iterable<T>\"})})}),(0,e.jsx)(o.td,{children:\"Item objects in the collection. (dynamic)\"}),(0,e.jsx)(o.td,{children:\"-\"})]}),(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:\"hideSelectedIcon\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:\"boolean\"})}),(0,e.jsx)(o.td,{children:\"Whether to hide the check icon when the items are selected.\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:\"false\"})})]}),(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:\"showDivider\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:\"boolean\"})}),(0,e.jsx)(o.td,{children:\"Whether to show the divider between the groups.\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:\"false\"})})]}),(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:\"dividerProps\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.a,{href:\"/docs/components/divider\",children:\"DividerProps\"})}),(0,e.jsx)(o.td,{children:\"The divider component props.\"}),(0,e.jsx)(o.td,{children:\"-\"})]}),(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:\"classNames\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:'Record<\"base\"\\uFF5C \"heading\"\\uFF5C \"group\"\\uFF5C \"divider\", string>'})}),(0,e.jsx)(o.td,{children:\"Allows to set custom class names for the dropdown section slots.\"}),(0,e.jsx)(o.td,{children:\"-\"})]}),(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:\"itemClasses\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:'Record<\"base\"\\uFF5C \"wrapper\"\\uFF5C \"title\"\\uFF5C \"description\"\\uFF5C \"shortcut\" \\uFF5C \"selectedIcon\", string>'})}),(0,e.jsx)(o.td,{children:\"Allows to set custom class names for the dropdown item slots.\"}),(0,e.jsx)(o.td,{children:\"-\"})]})]})]}),`\n`,(0,e.jsx)(o.hr,{}),`\n`,(0,e.jsx)(o.h3,{id:\"dropdownitem-props\",children:\"DropdownItem Props\"}),`\n`,(0,e.jsxs)(o.table,{children:[(0,e.jsx)(o.thead,{children:(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.th,{children:\"Attribute\"}),(0,e.jsx)(o.th,{children:\"Type\"}),(0,e.jsx)(o.th,{children:\"Description\"}),(0,e.jsx)(o.th,{children:\"Default\"})]})}),(0,e.jsxs)(o.tbody,{children:[(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:\"children*\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:\"ReactNode\"})}),(0,e.jsx)(o.td,{children:\"The contents of the dropdown item.\"}),(0,e.jsx)(o.td,{children:\"-\"})]}),(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:\"key\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:\"React.Key\"})}),(0,e.jsx)(o.td,{children:\"The unique key for the dropdown item.\"}),(0,e.jsx)(o.td,{children:\"-\"})]}),(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:\"title\"}),(0,e.jsxs)(o.td,{children:[(0,e.jsx)(o.code,{children:\"string\"}),\" | \",(0,e.jsx)(o.code,{children:\"ReactNode\"})]}),(0,e.jsx)(o.td,{children:\"The title of the dropdown item.\"}),(0,e.jsx)(o.td,{children:\"-\"})]}),(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:\"textValue\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:\"string\"})}),(0,e.jsx)(o.td,{children:\"A string representation of the item's contents, used for features like typeahead.\"}),(0,e.jsx)(o.td,{children:\"-\"})]}),(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:\"description\"}),(0,e.jsxs)(o.td,{children:[(0,e.jsx)(o.code,{children:\"string\"}),\" | \",(0,e.jsx)(o.code,{children:\"ReactNode\"})]}),(0,e.jsx)(o.td,{children:\"The description of the dropdown item.\"}),(0,e.jsx)(o.td,{children:\"-\"})]}),(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:\"shortcut\"}),(0,e.jsxs)(o.td,{children:[(0,e.jsx)(o.code,{children:\"string\"}),\" | \",(0,e.jsx)(o.code,{children:\"ReactNode\"})]}),(0,e.jsx)(o.td,{children:\"The dropdown item keyboard shortcut.\"}),(0,e.jsx)(o.td,{children:\"-\"})]}),(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:\"startContent\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:\"ReactNode\"})}),(0,e.jsx)(o.td,{children:\"The start content of the dropdown item.\"}),(0,e.jsx)(o.td,{children:\"-\"})]}),(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:\"endContent\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:\"ReactNode\"})}),(0,e.jsx)(o.td,{children:\"The end content of the dropdown item. This is positioned after the shortcut and the selected icon.\"}),(0,e.jsx)(o.td,{children:\"-\"})]}),(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:\"selectedIcon\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.a,{href:\"#dropdown-item-selected-icon-props\",children:\"SelectedIconProps\"})}),(0,e.jsx)(o.td,{children:\"Custom icon to render when the item is selected.\"}),(0,e.jsx)(o.td,{children:\"-\"})]}),(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:\"showDivider\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:\"boolean\"})}),(0,e.jsx)(o.td,{children:\"Whether to show a divider below the item.\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:\"false\"})})]}),(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:\"href\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:\"string\"})}),(0,e.jsxs)(o.td,{children:[\"A URL to link to. See \",(0,e.jsx)(o.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#href\",children:\"MDN\"}),\".\"]}),(0,e.jsx)(o.td,{children:\"-\"})]}),(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:\"target\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:\"HTMLAttributeAnchorTarget\"})}),(0,e.jsxs)(o.td,{children:[\"The target window for the link. See \",(0,e.jsx)(o.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#target\",children:\"MDN\"}),\".\"]}),(0,e.jsx)(o.td,{children:\"-\"})]}),(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:\"rel\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:\"string\"})}),(0,e.jsxs)(o.td,{children:[\"The relationship between the linked resource and the current page. See \",(0,e.jsx)(o.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/rel\",children:\"MDN\"}),\".\"]}),(0,e.jsx)(o.td,{children:\"-\"})]}),(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:\"download\"}),(0,e.jsxs)(o.td,{children:[(0,e.jsx)(o.code,{children:\"boolean\"}),\" | \",(0,e.jsx)(o.code,{children:\"string\"})]}),(0,e.jsxs)(o.td,{children:[\"Causes the browser to download the linked URL. A string may be provided to suggest a file name. See \",(0,e.jsx)(o.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#download\",children:\"MDN\"}),\".\"]}),(0,e.jsx)(o.td,{children:\"-\"})]}),(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:\"ping\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:\"string\"})}),(0,e.jsxs)(o.td,{children:[\"A space-separated list of URLs to ping when the link is followed. See \",(0,e.jsx)(o.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#ping\",children:\"MDN\"}),\".\"]}),(0,e.jsx)(o.td,{children:\"-\"})]}),(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:\"referrerPolicy\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:\"HTMLAttributeReferrerPolicy\"})}),(0,e.jsxs)(o.td,{children:[\"How much of the referrer to send when following the link. See \",(0,e.jsx)(o.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#referrerpolicy\",children:\"MDN\"}),\".\"]}),(0,e.jsx)(o.td,{children:\"-\"})]}),(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:\"isDisabled\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:\"boolean\"})}),(0,e.jsxs)(o.td,{children:[\"Whether the dropdown item should be disabled. (\",(0,e.jsx)(o.strong,{children:\"Deprecated\"}),\") pass \",(0,e.jsx)(o.strong,{children:\"disabledKeys\"}),\" to \",(0,e.jsx)(o.code,{children:\"DropdownMenu\"}),\" instead.\"]}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:\"false\"})})]}),(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:\"isSelected\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:\"boolean\"})}),(0,e.jsxs)(o.td,{children:[\"Whether the dropdown item should be selected. (\",(0,e.jsx)(o.strong,{children:\"Deprecated\"}),\") pass \",(0,e.jsx)(o.strong,{children:\"selectedKeys\"}),\" to \",(0,e.jsx)(o.code,{children:\"DropdownMenu\"}),\" instead.\"]}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:\"false\"})})]}),(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:\"isReadOnly\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:\"boolean\"})}),(0,e.jsx)(o.td,{children:\"Whether the dropdown item press events should be ignored.\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:\"false\"})})]}),(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:\"hideSelectedIcon\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:\"boolean\"})}),(0,e.jsx)(o.td,{children:\"Whether to hide the check icon when the item is selected.\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:\"false\"})})]}),(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:\"closeOnSelect\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:\"boolean\"})}),(0,e.jsx)(o.td,{children:\"Whether the dropdown menu should be closed when the item is selected.\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:\"true\"})})]}),(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:\"classNames\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:'Record<\"base\"\\uFF5C \"wrapper\"\\uFF5C \"title\"\\uFF5C \"description\"\\uFF5C \"shortcut\" \\uFF5C \"selectedIcon\", string>'})}),(0,e.jsx)(o.td,{children:\"Allows to set custom class names for the dropdown item slots.\"}),(0,e.jsx)(o.td,{children:\"-\"})]})]})]}),`\n`,(0,e.jsx)(o.h3,{id:\"dropdownitem-events\",children:\"DropdownItem Events\"}),`\n`,(0,e.jsxs)(o.table,{children:[(0,e.jsx)(o.thead,{children:(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.th,{children:\"Attribute\"}),(0,e.jsx)(o.th,{children:\"Type\"}),(0,e.jsx)(o.th,{children:\"Description\"})]})}),(0,e.jsxs)(o.tbody,{children:[(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:\"onAction\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:\"() => void\"})}),(0,e.jsxs)(o.td,{children:[\"Handler that is called when the dropdown item is selected. (\",(0,e.jsx)(o.strong,{children:\"Deprecated\"}),\") pass to \",(0,e.jsx)(o.code,{children:\"DropdownMenu\"}),\" instead.\"]})]}),(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:\"onClose\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:\"() => void\"})}),(0,e.jsxs)(o.td,{children:[\"Handler that is called when the dropdown item should close after selecting. (\",(0,e.jsx)(o.strong,{children:\"Deprecated\"}),\") pass to \",(0,e.jsx)(o.code,{children:\"DropdownMenu\"}),\" instead.\"]})]}),(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:\"onPress\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:\"(e: PressEvent) => void\"})}),(0,e.jsx)(o.td,{children:\"Handler called when the press is released over the target.\"})]}),(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:\"onPressStart\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:\"(e: PressEvent) => void\"})}),(0,e.jsx)(o.td,{children:\"Handler called when a press interaction starts.\"})]}),(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:\"onPressEnd\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:\"(e: PressEvent) => void\"})}),(0,e.jsx)(o.td,{children:\"Handler called when a press interaction ends, either over the target or when the pointer leaves the target.\"})]}),(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:\"onPressChange\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:\"(isPressed: boolean) => void\"})}),(0,e.jsx)(o.td,{children:\"Handler called when the press state changes.\"})]}),(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:\"onPressUp\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:\"(e: PressEvent) => void\"})}),(0,e.jsx)(o.td,{children:\"Handler called when a press is released over the target, regardless of whether it started on the target or not.\"})]}),(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:\"onKeyDown\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:\"(e: KeyboardEvent) => void\"})}),(0,e.jsx)(o.td,{children:\"Handler called when a key is pressed.\"})]}),(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:\"onKeyUp\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:\"(e: KeyboardEvent) => void\"})}),(0,e.jsx)(o.td,{children:\"Handler called when a key is released.\"})]}),(0,e.jsxs)(o.tr,{children:[(0,e.jsx)(o.td,{children:\"onClick\"}),(0,e.jsx)(o.td,{children:(0,e.jsx)(o.code,{children:\"MouseEventHandler\"})}),(0,e.jsxs)(o.td,{children:[\"The native button click event handler (\",(0,e.jsx)(o.strong,{children:\"Deprecated\"}),\") use \",(0,e.jsx)(o.strong,{children:\"onPress\"}),\" instead.\"]})]})]})]}),`\n`,(0,e.jsx)(o.hr,{}),`\n`,(0,e.jsx)(o.h3,{id:\"types\",children:\"Types\"}),`\n`,(0,e.jsx)(o.h4,{id:\"dropdown-item-selected-icon-props\",children:\"Dropdown Item Selected Icon Props\"}),`\n`,(0,e.jsx)(o.pre,{children:(0,e.jsx)(o.code,{className:\"language-ts\",children:`export type DropdownItemSelectedIconProps = {\n  /**\n   * The current icon, usually an checkmark icon.\n   */\n  icon?: ReactNode;\n  /**\n   * The current selected status.\n   */\n  isSelected?: boolean;\n  /**\n   * The current disabled status.\n   * @default false\n   */\n  isDisabled?: boolean;\n};\n\ntype selectedIcon?: ReactNode | ((props: DropdownItemSelectedIconProps) => ReactNode) | null;\n`})})]})}function B(t={}){let{wrapper:o}=t.components||{};return o?(0,e.jsx)(o,{...t,children:(0,e.jsx)(R,{...t})}):R(t)}function l(t,o){throw new Error(\"Expected \"+(o?\"component\":\"object\")+\" `\"+t+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return L(Ze);})();\n;return Component;"
  },
  "_id": "docs/components/dropdown.mdx",
  "_raw": {
    "sourceFilePath": "docs/components/dropdown.mdx",
    "sourceFileName": "dropdown.mdx",
    "sourceFileDir": "docs/components",
    "contentType": "mdx",
    "flattenedPath": "docs/components/dropdown"
  },
  "type": "Doc",
  "slug": "/docs/components/dropdown",
  "slugAsParams": "components/dropdown",
  "url": "/docs/components/dropdown"
}