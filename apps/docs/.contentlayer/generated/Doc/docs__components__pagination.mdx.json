{
  "title": "Pagination",
  "description": "The Pagination component allows you to display active page and navigate between multiple pages.",
  "body": {
    "raw": "\nimport {paginationContent} from \"@/content/components/pagination\";\n\n# Pagination\n\nThe Pagination component allows you to display active page and navigate between multiple pages.\n\n<ComponentLinks component=\"pagination\" />\n\n---\n\n<CarbonAd/>\n\n## Installation\n\n<PackageManagers\n  showGlobalInstallWarning\n  commands={{\n    cli: \"npx nextui-cli@latest add pagination\",\n    npm: \"npm install @nextui-org/pagination\",\n    yarn: \"yarn add @nextui-org/pagination\",\n    pnpm: \"pnpm add @nextui-org/pagination\",\n    bun: \"bun add @nextui-org/pagination\"\n  }}\n/>\n\n## Import\n\nNextUI exports 3 pagination-related components:\n\n- **Pagination**: The main component to display a pagination.\n- **PaginationItem**: The internal component to display a pagination item.\n- **PaginationCursor**: The internal item component to display the current page.\n\n<ImportTabs\n  commands={{\n    main: 'import {Pagination, PaginationItem, PaginationCursor} from \"@nextui-org/react\";',\n    individual:\n      'import {Pagination, PaginationItem, PaginationCursor} from \"@nextui-org/pagination\";',\n  }}\n/>\n\n## Usage\n\n<CodeDemo title=\"Usage\" files={paginationContent.usage} />\n\n### Disabled\n\n<CodeDemo title=\"Disabled\" files={paginationContent.disabled} />\n\n### Sizes\n\n<CodeDemo title=\"Sizes\" files={paginationContent.sizes} />\n\n### Colors\n\n<CodeDemo title=\"Radius\" files={paginationContent.colors} />\n\n### Variants\n\nYou can use the `variant` property to change the pagination items style.\n\n<CodeDemo title=\"Variants\" files={paginationContent.variants} />\n\n### With Controls\n\nYou can set the `showControls` to `true` to display the `next` and `previous` buttons.\n\n<CodeDemo title=\"With Controls\" files={paginationContent.controls} />\n\n### Pagination Loop\n\nIn case you want to loop the pagination, you can set the `loop` property to `true`.\nThe cursor will go back to the first page when it reaches the last page and vice versa.\n\n<CodeDemo title=\"Pagination Loop\" files={paginationContent.loop} />\n\n### Changing the initial page\n\nYou can change the initial page by setting the `initialPage` property.\n\n<CodeDemo title=\"Changing the initial page\" files={paginationContent.initialPage} />\n\n### Compact Pagination\n\nYou can set the `isCompact` property to `true` to display reduced version of the pagination.\n\n<CodeDemo title=\"Compact Pagination\" files={paginationContent.compact} />\n\n### With Shadow\n\nYou can use the `showShadow` property to display a shadow below the active page item.\n\n<CodeDemo title=\"With Shadow\" files={paginationContent.shadow} />\n\n### Controlled\n\n<CodeDemo title=\"Controlled\" files={paginationContent.controlled} />\n\n### Siblings\n\nYou can control the number of pages to show before and after the current page by setting the `siblings` property.\n\n<CodeDemo title=\"Siblings\" files={paginationContent.siblings} />\n\n### Boundaries\n\nYou can control the number of pages to show at the beginning and end of the pagination by setting the `boundaries` property.\n\n<CodeDemo title=\"Boundaries\" files={paginationContent.boundaries} />\n\n### Custom items\n\nYou can use the `renderItem` property to customize the pagination items.\n\n<CodeDemo title=\"Custom items\" files={paginationContent.customItems} />\n\n## Slots\n\n- **base**: The main pagination slot.\n- **wrapper**: The pagination wrapper slot. This wraps the pagination items.\n- **prev**: The previous button slot.\n- **next**: The next button slot.\n- **item**: The pagination item slot, applied to the middle items.\n- **cursor**: The current page slot. Available only when `disableCursorAnimation` is `false` and `disableAnimation` is `false`.\n- **forwardIcon**: The forward icon slot. The one that appears when hovering the ellipsis button.\n- **ellipsis**: The ellipsis slot.\n- **chevronNext**: The chevron next icon slot.\n\n### Custom Styles\n\nYou can customize the `Pagination` component by passing custom Tailwind CSS classes to the component slots.\n\n<CodeDemo title=\"Custom Styles\" files={paginationContent.customStyles} />\n\n### Custom Implementation\n\nIn case you need to customize the pagination even further, you can use the `usePagination` hook to create\nyour own implementation.\n\n<CodeDemo title=\"Custom Implementation\" files={paginationContent.customImpl} /> \n\n<Spacer y={4} />\n\n## Data Attributes\n\n`Pagination` has the following attributes on the `base` element:\n\n- **data-controls**:\n  Indicates whether the pagination has controls. Based on `showControls` prop.\n- **data-loop**:\n  When the pagination is looped. Based on `loop` prop.\n- **data-dots-jump**:\n  Indicates whether the pagination has dots jump. Based on `dotsJump` prop.\n- **data-total**:\n  The total number of pages. Based on `total` prop.\n- **data-active-page**:\n  The active page. Based on `activePage` prop.\n\n<Spacer y={4} />\n\n## Accessibility\n\n- The root node has a role of `navigation` by default.\n- The pagination items have an aria-label that identifies the item purpose (\"next page button\", \"previous page button\", etc.), you\n  can override this label by using the `getItemAriaLabel` function.\n- The pagination items are in tab order, with a tabindex of \"0\".\n\n<Spacer y={4} />\n\n## API\n\n### Pagination Props\n\n| Attribute              | Type                                                                                                                          | Description                                                              | Default   |\n| ---------------------- | ----------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------ | --------- |\n| variant                | `flat` \\| `bordered` \\| `light` \\| `faded`                                                                                    | The pagination variant.                                                  | `flat`    |\n| color                  | `default` \\| `primary` \\| `secondary` \\| `success` \\| `warning` \\| `danger`                                                   | The pagination color theme.                                              | `default` |\n| size                   | `sm` \\| `md` \\| `lg`                                                                                                          | The pagination size.                                                     | `md`      |\n| radius                 | `none` \\| `sm` \\| `md` \\| `lg` \\| `full`                                                                                      | The pagination border radius.                                            | `xl`      |\n| total                  | `number`                                                                                                                      | The total number of pages.                                               | `1`       |\n| dotsJump               | `number`                                                                                                                     | The number of pages that are added or subtracted on the '...' button.    | `5`       |\n| initialPage            | `number`                                                                                                                      | The initial page. (uncontrolled)                                         | `1`       |\n| page                   | `number`                                                                                                                      | The current page. (controlled)                                           | -         |\n| siblings               | `number`                                                                                                                      | The number of pages to show before and after the current page.           | `1`       |\n| boundaries             | `number`                                                                                                                      | The number of pages to show at the beginning and end of the pagination.  | `1`       |\n| loop                   | `boolean`                                                                                                                     | Whether the pagination should be looped.                                 | `false`   |\n| isCompact              | `boolean`                                                                                                                     | Whether the pagination should have a compact style.                      | `false`   |\n| isDisabled             | `boolean`                                                                                                                     | Whether the pagination is disabled.                                      | `false`   |\n| showShadow             | `boolean`                                                                                                                     | Whether the pagination cursor should have a shadow.                      | `false`   |\n| showControls           | `boolean`                                                                                                                     | Whether the pagination should have controls.                             | `false`   |\n| disableCursorAnimation | `boolean`                                                                                                                     | Whether the pagination cursor should be hidden.                          | `false`   |\n| renderItem             | [PaginationItemProps](#pagination-item-props)                                                                                 | The pagination item render function.                                     | -         |\n| getItemAriaLabel       | `(page: string) => string`                                                                                                    | A function that allows you to customize the pagination items aria-label. | -         |\n| disableAnimation       | `boolean`                                                                                                                     | Whether the pagination cursor should be animated.                        | `false`   |\n| classNames             | `Record<\"base\"｜ \"wrapper\" ｜ \"prev\"｜ \"next\" ｜ \"item\" ｜ \"cursor\" ｜ \"forwardIcon\" ｜ \"ellipsis\" ｜ \"chevronNext\", string>` | Allows to set custom class names for the pagination slots.               | -         |\n\n### Pagination Events\n\n| Attribute | Type                     | Description                                                     |\n| --------- | ------------------------ | --------------------------------------------------------------- |\n| onChange  | `(page: number) => void` | Handler that is called when the pagination active page changes. |\n\n---\n\n### Types\n\n#### Pagination Item Props\n\n```ts\nexport type PaginationItemRenderProps = {\n  // The pagination item ref.\n  ref?: Ref<T>;\n  // The pagination item value.\n  value: PaginationItemValue;\n  // The pagination item index.\n  index: number;\n  // The active page number.\n  activePage: number;\n  // Whether the pagination item is active.\n  isActive: boolean;\n  // Whether the pagination item is the first item in the pagination.\n  isFirst: boolean;\n  // Whether the pagination item is the last item in the pagination.\n  isLast: boolean;\n  // Whether the pagination item is the next item in the pagination.\n  isNext: boolean;\n  // Whether the pagination item is the previous item in the pagination.\n  isPrevious: boolean;\n  // The pagination item className.\n  className: string;\n  // Callback to go to the next page.\n  onNext: () => void;\n  // Callback to go to the previous page.\n  onPrevious: () => void;\n  // Callback to go to the page.\n  setPage: (page: number) => void;\n};\n\ntype renderItem?: (props: PaginationItemRenderProps) => ReactNode;\n```\n",
    "code": "var Component=(()=>{var D=Object.create;var c=Object.defineProperty;var L=Object.getOwnPropertyDescriptor;var R=Object.getOwnPropertyNames;var E=Object.getPrototypeOf,V=Object.prototype.hasOwnProperty;var M=(t,n)=>()=>(n||t((n={exports:{}}).exports,n),n.exports),Y=(t,n)=>{for(var r in n)c(t,r,{get:n[r],enumerable:!0})},p=(t,n,r,i)=>{if(n&&typeof n==\"object\"||typeof n==\"function\")for(let a of R(n))!V.call(t,a)&&a!==r&&c(t,a,{get:()=>n[a],enumerable:!(i=L(n,a))||i.enumerable});return t};var _=(t,n,r)=>(r=t!=null?D(E(t)):{},p(n||!t||!t.__esModule?c(r,\"default\",{value:t,enumerable:!0}):r,t)),G=t=>p(c({},\"__esModule\",{value:!0}),t);var g=M((Be,u)=>{u.exports=_jsx_runtime});var Se={};Y(Se,{default:()=>z,frontmatter:()=>ke});var e=_(g());var X=`import {Pagination} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <Pagination total={10} initialPage={1} />\n  );\n}`,F={\"/App.jsx\":X},m={...F};var O=`import {Pagination} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <Pagination isDisabled total={10} initialPage={1} />\n  );\n}`,U={\"/App.jsx\":O},f={...U};var J=`import {Pagination} from \"@nextui-org/react\";\n\nexport default function App() {\n\n  const sizes = [\"sm\", \"md\", \"lg\"]\n\n  return (\n    <div className=\"flex flex-wrap gap-4 items-center\">\n      {sizes.map((size) => (\n        <Pagination key={size} total={10} initialPage={1} size={size} />\n      ))}\n    </div>\n  );\n}`,H={\"/App.jsx\":J},b={...H};var $=`import {Pagination} from \"@nextui-org/react\";\n\nexport default function App() {\n\n  const radius = [\"full\", \"xl\", \"lg\", \"md\", \"sm\", \"base\", \"none\"]\n\n  return (\n    <div className=\"flex flex-wrap gap-4 items-center\">\n      {radius.map((r) => (\n        <Pagination key={r} total={10} initialPage={1} radius={r} />\n      ))}\n    </div>\n  );\n}`,q={\"/App.jsx\":$},v={...q};var K=`import {Pagination} from \"@nextui-org/react\";\n\nexport default function App() {\n\n  const colors = [\"primary\", \"secondary\", \"success\", \"warning\", \"danger\"]\n\n  return (\n    <div className=\"flex flex-wrap gap-4 items-center\">\n      {colors.map((color) => (\n        <Pagination key={color} total={10} initialPage={1} color={color} />\n      ))}\n    </div>\n  );\n}`,Q={\"/App.jsx\":K},x={...Q};var Z=`import {Pagination} from \"@nextui-org/react\";\n\nexport default function App() {\n\n  const variants = [\"flat\", \"bordered\", \"faded\", \"light\"]\n\n  return (\n    <div className=\"flex flex-wrap gap-4 items-center\">\n      {variants.map((variant) => (\n        <Pagination key={variant} total={10} initialPage={1} variant={variant} />\n      ))}\n    </div>\n  );\n}`,ee={\"/App.jsx\":Z},P={...ee};var ne=`import {Pagination} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <Pagination showControls total={10} initialPage={1} />\n  );\n}`,te={\"/App.jsx\":ne},y={...te};var ie=`import {Pagination} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <Pagination loop showControls color=\"success\" total={5} initialPage={1} />\n  );\n}`,oe={\"/App.jsx\":ie},w={...oe};var re=`import {Pagination} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <Pagination color=\"warning\" initialPage={3} total={10} />\n  );\n}`,ae={\"/App.jsx\":re},C={...ae};var le=`import {Pagination} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <Pagination isCompact showControls total={10} initialPage={1} />\n  );\n}`,de={\"/App.jsx\":le},A={...de};var ce=`import {Pagination} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <Pagination showShadow color=\"warning\" total={10} initialPage={1} />\n  );\n}`,se={\"/App.jsx\":ce},I={...se};var he=`import {Pagination, Button} from \"@nextui-org/react\";\n\nexport default function App() {\n  const [currentPage, setCurrentPage] = React.useState(1);\n\n  return (\n    <div className=\"flex flex-col gap-5\">\n      <p className=\"text-small text-default-500\">Selected Page: {currentPage}</p>\n      <Pagination\n        total={10}\n        color=\"secondary\"\n        page={currentPage}\n        onChange={setCurrentPage}\n      />\n      <div className=\"flex gap-2\">\n        <Button\n          size=\"sm\"\n          variant=\"flat\"\n          color=\"secondary\"\n          onPress={() => setCurrentPage((prev) => (prev > 1 ? prev - 1 : prev))}\n        >\n          Previous\n        </Button>\n        <Button\n          size=\"sm\"\n          variant=\"flat\"\n          color=\"secondary\"\n          onPress={() => setCurrentPage((prev) => (prev < 10 ? prev + 1 : prev))}\n        >\n          Next\n        </Button>\n      </div>\n    </div>\n  );\n}`,pe={\"/App.jsx\":he},T={...pe};var ue=`import {Pagination, Button} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <div className=\"flex flex-col gap-5\">\n      <p>1 Sibling (default)</p>\n      <Pagination\n        total={10}\n      />\n      <p>2 Siblings</p>\n      <Pagination\n        total={10}\n        siblings={2}\n      />\n      <p>3 Siblings</p>\n      <Pagination\n        total={10}\n        siblings={3}\n      />\n    </div>\n  );\n}`,ge={\"/App.jsx\":ue},N={...ge};var me=`import {Pagination, Button} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <div className=\"flex flex-col gap-5\">\n      <p>1 Boundary (default)</p>\n      <Pagination\n        total={10}\n        color=\"secondary\"\n      />\n      <p>2 Boundaries</p>\n      <Pagination\n        total={10}\n        boundaries={2}\n        color=\"secondary\"\n      />\n      <p>3 Boundaries</p>\n      <Pagination\n        total={10}\n        boundaries={3}\n        color=\"secondary\"\n      />\n    </div>\n  );\n}`,fe={\"/App.jsx\":me},k={...fe};var be=`export const ChevronIcon = (props) => (\n  <svg\n    aria-hidden=\"true\"\n    fill=\"none\"\n    focusable=\"false\"\n    height=\"1em\"\n    role=\"presentation\"\n    viewBox=\"0 0 24 24\"\n    width=\"1em\"\n    {...props}\n  >\n    <path\n      d=\"M15.5 19l-7-7 7-7\"\n      stroke=\"currentColor\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"1.5\"\n    />\n  </svg>\n);\n`,ve=`import {SVGProps} from \"react\";\n\ntype IconSvgProps = SVGProps<SVGSVGElement>;\n\nexport const ChevronIcon = (props: IconSvgProps) => (\n  <svg\n    aria-hidden=\"true\"\n    fill=\"none\"\n    focusable=\"false\"\n    height=\"1em\"\n    role=\"presentation\"\n    viewBox=\"0 0 24 24\"\n    width=\"1em\"\n    {...props}\n  >\n    <path\n      d=\"M15.5 19l-7-7 7-7\"\n      stroke=\"currentColor\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"1.5\"\n    />\n  </svg>\n);\n`,xe=`import {Pagination, PaginationItemType, PaginationItemRenderProps} from \"@nextui-org/react\";\nimport {ChevronIcon} from \"./ChevronIcon\";\n\nexport default function App() {\n  const renderItem = ({\n    ref,\n    key,\n    value,\n    isActive,\n    onNext,\n    onPrevious,\n    setPage,\n    className,\n  }: PaginationItemRenderProps) => {\n    if (value === PaginationItemType.NEXT) {\n      return (\n        <button key={key} className={cn(className, \"bg-default-200/50 min-w-8 w-8 h-8\")} onClick={onNext}>\n          <ChevronIcon className=\"rotate-180\" />\n        </button>\n      );\n    }\n\n    if (value === PaginationItemType.PREV) {\n      return (\n        <button key={key} className={cn(className, \"bg-default-200/50 min-w-8 w-8 h-8\")} onClick={onPrevious}>\n          <ChevronIcon />\n        </button>\n      );\n    }\n\n    if (value === PaginationItemType.DOTS) {\n      return <button key={key} className={className}>...</button>;\n    }\n\n    // cursor is the default item\n    return (\n      <button\n        ref={ref}\n        key={key}\n        className={cn(\n          className,\n          isActive &&\n            \"text-white bg-gradient-to-br from-indigo-500 to-pink-500 font-bold\",\n        )}\n        onClick={() => setPage(value)}\n      >\n        {value}\n      </button>\n    );\n  };\n\n  return (\n    <Pagination\n      disableCursorAnimation\n      showControls\n      total={10}\n      initialPage={1}\n      className=\"gap-2\"\n      radius=\"full\"\n      renderItem={renderItem}\n      variant=\"light\"\n    />\n  );\n}`,Pe=`import {Pagination, PaginationItemType} from \"@nextui-org/react\";\nimport {ChevronIcon} from \"./ChevronIcon\";\n\nexport default function App() {\n  const renderItem = ({\n    ref,\n    key,\n    value,\n    isActive,\n    onNext,\n    onPrevious,\n    setPage,\n    className,\n  }) => {\n    if (value === PaginationItemType.NEXT) {\n      return (\n        <button key={key} className={cn(className, \"bg-default-200/50 min-w-8 w-8 h-8\")} onClick={onNext}>\n          <ChevronIcon className=\"rotate-180\" />\n        </button>\n      );\n    }\n\n    if (value === PaginationItemType.PREV) {\n      return (\n        <button key={key} className={cn(className, \"bg-default-200/50 min-w-8 w-8 h-8\")} onClick={onPrevious}>\n          <ChevronIcon />\n        </button>\n      );\n    }\n\n    if (value === PaginationItemType.DOTS) {\n      return <button key={key} className={className}>...</button>;\n    }\n\n    // cursor is the default item\n    return (\n      <button\n        key={key}\n        ref={ref}\n        className={cn(\n          className,\n          isActive &&\n          \"text-white bg-gradient-to-br from-indigo-500 to-pink-500 font-bold\",\n        )}\n        onClick={() => setPage(value)}\n      >\n        {value}\n      </button>\n    );\n  };\n\n  return (\n    <Pagination\n      disableCursorAnimation\n      showControls\n      total={10}\n      initialPage={1}\n      className=\"gap-2\"\n      radius=\"full\"\n      renderItem={renderItem}\n      variant=\"light\"\n    />\n  );\n}`,ye={\"/App.jsx\":Pe,\"/ChevronIcon.jsx\":be},we={\"/App.tsx\":xe,\"/ChevronIcon.tsx\":ve},S={...ye,...we};var Ce=`import {Pagination, Button} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <Pagination\n      total={10}\n      classNames={{\n        wrapper: \"gap-0 overflow-visible h-8 rounded border border-divider\",\n        item: \"w-8 h-8 text-small rounded-none bg-transparent\",\n        cursor:\n          \"bg-gradient-to-b shadow-lg from-default-500 to-default-800 dark:from-default-300 dark:to-default-100 text-white font-bold\",\n      }}\n    />\n  );\n}`,Ae={\"/App.jsx\":Ce},j={...Ae};var Ie=`export const ChevronIcon = (props) => (\n  <svg\n    aria-hidden=\"true\"\n    fill=\"none\"\n    focusable=\"false\"\n    height=\"1em\"\n    role=\"presentation\"\n    viewBox=\"0 0 24 24\"\n    width=\"1em\"\n    {...props}\n  >\n    <path\n      d=\"M15.5 19l-7-7 7-7\"\n      stroke=\"currentColor\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"1.5\"\n    />\n  </svg>\n);\n`,Te=`import {usePagination, PaginationItemType} from \"@nextui-org/react\";\nimport {ChevronIcon} from \"./ChevronIcon\";\n\nexport default function App() {\n  const {activePage, range, setPage, onNext, onPrevious} = usePagination({\n    total: 6,\n    showControls: true,\n    siblings: 10,\n    boundaries: 10,\n  });\n\n  return (\n    <div className=\"flex flex-col gap-2\">\n      <p>Active page: {activePage}</p>\n      <ul className=\"flex gap-2 items-center\">\n        {range.map((page) => {\n          if (page === PaginationItemType.NEXT) {\n            return (\n              <li key={page} aria-label=\"next page\" className=\"w-4 h-4\">\n                <button\n                  className=\"w-full h-full bg-default-200 rounded-full\"\n                  onClick={onNext}\n                >\n                  <ChevronIcon className=\"rotate-180\" />\n                </button>\n              </li>\n            );\n          }\n\n          if (page === PaginationItemType.PREV) {\n            return (\n              <li key={page} aria-label=\"previous page\" className=\"w-4 h-4\">\n                <button\n                  className=\"w-full h-full bg-default-200 rounded-full\"\n                  onClick={onPrevious}\n                >\n                  <ChevronIcon />\n                </button>\n              </li>\n            );\n          }\n\n          if (page === PaginationItemType.DOTS) {\n            return (\n              <li key={page} className=\"w-4 h-4\">\n                ...\n              </li>\n            );\n          }\n\n          return (\n            <li key={page} aria-label={\\`page \\${page}\\`} className=\"w-4 h-4\">\n              <button\n                className={cn(\n                  \"w-full h-full bg-default-300 rounded-full\",\n                  activePage === page && \"bg-secondary\"\n                )}\n                onClick={() => setPage(page)}\n              />\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}`,Ne={\"/App.jsx\":Te,\"/ChevronIcon.jsx\":Ie},B={...Ne};var o={usage:m,disabled:f,sizes:b,radius:v,colors:x,variants:P,controls:y,loop:w,shadow:I,initialPage:C,compact:A,controlled:T,siblings:N,boundaries:k,customItems:S,customStyles:j,customImpl:B};var ke={title:\"Pagination\",description:\"The Pagination component allows you to display active page and navigate between multiple pages.\"};function W(t){let n={a:\"a\",code:\"code\",h1:\"h1\",h2:\"h2\",h3:\"h3\",h4:\"h4\",hr:\"hr\",li:\"li\",p:\"p\",pre:\"pre\",strong:\"strong\",table:\"table\",tbody:\"tbody\",td:\"td\",th:\"th\",thead:\"thead\",tr:\"tr\",ul:\"ul\",...t.components},{CarbonAd:r,CodeDemo:i,ComponentLinks:a,ImportTabs:s,PackageManagers:h,Spacer:d}=n;return r||l(\"CarbonAd\",!0),i||l(\"CodeDemo\",!0),a||l(\"ComponentLinks\",!0),s||l(\"ImportTabs\",!0),h||l(\"PackageManagers\",!0),d||l(\"Spacer\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(n.h1,{id:\"pagination\",children:\"Pagination\"}),`\n`,(0,e.jsx)(n.p,{children:\"The Pagination component allows you to display active page and navigate between multiple pages.\"}),`\n`,(0,e.jsx)(a,{component:\"pagination\"}),`\n`,(0,e.jsx)(n.hr,{}),`\n`,(0,e.jsx)(r,{}),`\n`,(0,e.jsx)(n.h2,{id:\"installation\",children:\"Installation\"}),`\n`,(0,e.jsx)(h,{showGlobalInstallWarning:!0,commands:{cli:\"npx nextui-cli@latest add pagination\",npm:\"npm install @nextui-org/pagination\",yarn:\"yarn add @nextui-org/pagination\",pnpm:\"pnpm add @nextui-org/pagination\",bun:\"bun add @nextui-org/pagination\"}}),`\n`,(0,e.jsx)(n.h2,{id:\"import\",children:\"Import\"}),`\n`,(0,e.jsx)(n.p,{children:\"NextUI exports 3 pagination-related components:\"}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"Pagination\"}),\": The main component to display a pagination.\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"PaginationItem\"}),\": The internal component to display a pagination item.\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"PaginationCursor\"}),\": The internal item component to display the current page.\"]}),`\n`]}),`\n`,(0,e.jsx)(s,{commands:{main:'import {Pagination, PaginationItem, PaginationCursor} from \"@nextui-org/react\";',individual:'import {Pagination, PaginationItem, PaginationCursor} from \"@nextui-org/pagination\";'}}),`\n`,(0,e.jsx)(n.h2,{id:\"usage\",children:\"Usage\"}),`\n`,(0,e.jsx)(i,{title:\"Usage\",files:o.usage}),`\n`,(0,e.jsx)(n.h3,{id:\"disabled\",children:\"Disabled\"}),`\n`,(0,e.jsx)(i,{title:\"Disabled\",files:o.disabled}),`\n`,(0,e.jsx)(n.h3,{id:\"sizes\",children:\"Sizes\"}),`\n`,(0,e.jsx)(i,{title:\"Sizes\",files:o.sizes}),`\n`,(0,e.jsx)(n.h3,{id:\"colors\",children:\"Colors\"}),`\n`,(0,e.jsx)(i,{title:\"Radius\",files:o.colors}),`\n`,(0,e.jsx)(n.h3,{id:\"variants\",children:\"Variants\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"You can use the \",(0,e.jsx)(n.code,{children:\"variant\"}),\" property to change the pagination items style.\"]}),`\n`,(0,e.jsx)(i,{title:\"Variants\",files:o.variants}),`\n`,(0,e.jsx)(n.h3,{id:\"with-controls\",children:\"With Controls\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"You can set the \",(0,e.jsx)(n.code,{children:\"showControls\"}),\" to \",(0,e.jsx)(n.code,{children:\"true\"}),\" to display the \",(0,e.jsx)(n.code,{children:\"next\"}),\" and \",(0,e.jsx)(n.code,{children:\"previous\"}),\" buttons.\"]}),`\n`,(0,e.jsx)(i,{title:\"With Controls\",files:o.controls}),`\n`,(0,e.jsx)(n.h3,{id:\"pagination-loop\",children:\"Pagination Loop\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"In case you want to loop the pagination, you can set the \",(0,e.jsx)(n.code,{children:\"loop\"}),\" property to \",(0,e.jsx)(n.code,{children:\"true\"}),`.\nThe cursor will go back to the first page when it reaches the last page and vice versa.`]}),`\n`,(0,e.jsx)(i,{title:\"Pagination Loop\",files:o.loop}),`\n`,(0,e.jsx)(n.h3,{id:\"changing-the-initial-page\",children:\"Changing the initial page\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"You can change the initial page by setting the \",(0,e.jsx)(n.code,{children:\"initialPage\"}),\" property.\"]}),`\n`,(0,e.jsx)(i,{title:\"Changing the initial page\",files:o.initialPage}),`\n`,(0,e.jsx)(n.h3,{id:\"compact-pagination\",children:\"Compact Pagination\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"You can set the \",(0,e.jsx)(n.code,{children:\"isCompact\"}),\" property to \",(0,e.jsx)(n.code,{children:\"true\"}),\" to display reduced version of the pagination.\"]}),`\n`,(0,e.jsx)(i,{title:\"Compact Pagination\",files:o.compact}),`\n`,(0,e.jsx)(n.h3,{id:\"with-shadow\",children:\"With Shadow\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"You can use the \",(0,e.jsx)(n.code,{children:\"showShadow\"}),\" property to display a shadow below the active page item.\"]}),`\n`,(0,e.jsx)(i,{title:\"With Shadow\",files:o.shadow}),`\n`,(0,e.jsx)(n.h3,{id:\"controlled\",children:\"Controlled\"}),`\n`,(0,e.jsx)(i,{title:\"Controlled\",files:o.controlled}),`\n`,(0,e.jsx)(n.h3,{id:\"siblings\",children:\"Siblings\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"You can control the number of pages to show before and after the current page by setting the \",(0,e.jsx)(n.code,{children:\"siblings\"}),\" property.\"]}),`\n`,(0,e.jsx)(i,{title:\"Siblings\",files:o.siblings}),`\n`,(0,e.jsx)(n.h3,{id:\"boundaries\",children:\"Boundaries\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"You can control the number of pages to show at the beginning and end of the pagination by setting the \",(0,e.jsx)(n.code,{children:\"boundaries\"}),\" property.\"]}),`\n`,(0,e.jsx)(i,{title:\"Boundaries\",files:o.boundaries}),`\n`,(0,e.jsx)(n.h3,{id:\"custom-items\",children:\"Custom items\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"You can use the \",(0,e.jsx)(n.code,{children:\"renderItem\"}),\" property to customize the pagination items.\"]}),`\n`,(0,e.jsx)(i,{title:\"Custom items\",files:o.customItems}),`\n`,(0,e.jsx)(n.h2,{id:\"slots\",children:\"Slots\"}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"base\"}),\": The main pagination slot.\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"wrapper\"}),\": The pagination wrapper slot. This wraps the pagination items.\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"prev\"}),\": The previous button slot.\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"next\"}),\": The next button slot.\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"item\"}),\": The pagination item slot, applied to the middle items.\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"cursor\"}),\": The current page slot. Available only when \",(0,e.jsx)(n.code,{children:\"disableCursorAnimation\"}),\" is \",(0,e.jsx)(n.code,{children:\"false\"}),\" and \",(0,e.jsx)(n.code,{children:\"disableAnimation\"}),\" is \",(0,e.jsx)(n.code,{children:\"false\"}),\".\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"forwardIcon\"}),\": The forward icon slot. The one that appears when hovering the ellipsis button.\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"ellipsis\"}),\": The ellipsis slot.\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"chevronNext\"}),\": The chevron next icon slot.\"]}),`\n`]}),`\n`,(0,e.jsx)(n.h3,{id:\"custom-styles\",children:\"Custom Styles\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"You can customize the \",(0,e.jsx)(n.code,{children:\"Pagination\"}),\" component by passing custom Tailwind CSS classes to the component slots.\"]}),`\n`,(0,e.jsx)(i,{title:\"Custom Styles\",files:o.customStyles}),`\n`,(0,e.jsx)(n.h3,{id:\"custom-implementation\",children:\"Custom Implementation\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"In case you need to customize the pagination even further, you can use the \",(0,e.jsx)(n.code,{children:\"usePagination\"}),` hook to create\nyour own implementation.`]}),`\n`,(0,e.jsx)(i,{title:\"Custom Implementation\",files:o.customImpl}),`\n`,(0,e.jsx)(d,{y:4}),`\n`,(0,e.jsx)(n.h2,{id:\"data-attributes\",children:\"Data Attributes\"}),`\n`,(0,e.jsxs)(n.p,{children:[(0,e.jsx)(n.code,{children:\"Pagination\"}),\" has the following attributes on the \",(0,e.jsx)(n.code,{children:\"base\"}),\" element:\"]}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"data-controls\"}),`:\nIndicates whether the pagination has controls. Based on `,(0,e.jsx)(n.code,{children:\"showControls\"}),\" prop.\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"data-loop\"}),`:\nWhen the pagination is looped. Based on `,(0,e.jsx)(n.code,{children:\"loop\"}),\" prop.\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"data-dots-jump\"}),`:\nIndicates whether the pagination has dots jump. Based on `,(0,e.jsx)(n.code,{children:\"dotsJump\"}),\" prop.\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"data-total\"}),`:\nThe total number of pages. Based on `,(0,e.jsx)(n.code,{children:\"total\"}),\" prop.\"]}),`\n`,(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:\"data-active-page\"}),`:\nThe active page. Based on `,(0,e.jsx)(n.code,{children:\"activePage\"}),\" prop.\"]}),`\n`]}),`\n`,(0,e.jsx)(d,{y:4}),`\n`,(0,e.jsx)(n.h2,{id:\"accessibility\",children:\"Accessibility\"}),`\n`,(0,e.jsxs)(n.ul,{children:[`\n`,(0,e.jsxs)(n.li,{children:[\"The root node has a role of \",(0,e.jsx)(n.code,{children:\"navigation\"}),\" by default.\"]}),`\n`,(0,e.jsxs)(n.li,{children:[`The pagination items have an aria-label that identifies the item purpose (\"next page button\", \"previous page button\", etc.), you\ncan override this label by using the `,(0,e.jsx)(n.code,{children:\"getItemAriaLabel\"}),\" function.\"]}),`\n`,(0,e.jsx)(n.li,{children:'The pagination items are in tab order, with a tabindex of \"0\".'}),`\n`]}),`\n`,(0,e.jsx)(d,{y:4}),`\n`,(0,e.jsx)(n.h2,{id:\"api\",children:\"API\"}),`\n`,(0,e.jsx)(n.h3,{id:\"pagination-props\",children:\"Pagination Props\"}),`\n`,(0,e.jsxs)(n.table,{children:[(0,e.jsx)(n.thead,{children:(0,e.jsxs)(n.tr,{children:[(0,e.jsx)(n.th,{children:\"Attribute\"}),(0,e.jsx)(n.th,{children:\"Type\"}),(0,e.jsx)(n.th,{children:\"Description\"}),(0,e.jsx)(n.th,{children:\"Default\"})]})}),(0,e.jsxs)(n.tbody,{children:[(0,e.jsxs)(n.tr,{children:[(0,e.jsx)(n.td,{children:\"variant\"}),(0,e.jsxs)(n.td,{children:[(0,e.jsx)(n.code,{children:\"flat\"}),\" | \",(0,e.jsx)(n.code,{children:\"bordered\"}),\" | \",(0,e.jsx)(n.code,{children:\"light\"}),\" | \",(0,e.jsx)(n.code,{children:\"faded\"})]}),(0,e.jsx)(n.td,{children:\"The pagination variant.\"}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"flat\"})})]}),(0,e.jsxs)(n.tr,{children:[(0,e.jsx)(n.td,{children:\"color\"}),(0,e.jsxs)(n.td,{children:[(0,e.jsx)(n.code,{children:\"default\"}),\" | \",(0,e.jsx)(n.code,{children:\"primary\"}),\" | \",(0,e.jsx)(n.code,{children:\"secondary\"}),\" | \",(0,e.jsx)(n.code,{children:\"success\"}),\" | \",(0,e.jsx)(n.code,{children:\"warning\"}),\" | \",(0,e.jsx)(n.code,{children:\"danger\"})]}),(0,e.jsx)(n.td,{children:\"The pagination color theme.\"}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"default\"})})]}),(0,e.jsxs)(n.tr,{children:[(0,e.jsx)(n.td,{children:\"size\"}),(0,e.jsxs)(n.td,{children:[(0,e.jsx)(n.code,{children:\"sm\"}),\" | \",(0,e.jsx)(n.code,{children:\"md\"}),\" | \",(0,e.jsx)(n.code,{children:\"lg\"})]}),(0,e.jsx)(n.td,{children:\"The pagination size.\"}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"md\"})})]}),(0,e.jsxs)(n.tr,{children:[(0,e.jsx)(n.td,{children:\"radius\"}),(0,e.jsxs)(n.td,{children:[(0,e.jsx)(n.code,{children:\"none\"}),\" | \",(0,e.jsx)(n.code,{children:\"sm\"}),\" | \",(0,e.jsx)(n.code,{children:\"md\"}),\" | \",(0,e.jsx)(n.code,{children:\"lg\"}),\" | \",(0,e.jsx)(n.code,{children:\"full\"})]}),(0,e.jsx)(n.td,{children:\"The pagination border radius.\"}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"xl\"})})]}),(0,e.jsxs)(n.tr,{children:[(0,e.jsx)(n.td,{children:\"total\"}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"number\"})}),(0,e.jsx)(n.td,{children:\"The total number of pages.\"}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"1\"})})]}),(0,e.jsxs)(n.tr,{children:[(0,e.jsx)(n.td,{children:\"dotsJump\"}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"number\"})}),(0,e.jsx)(n.td,{children:\"The number of pages that are added or subtracted on the '...' button.\"}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"5\"})})]}),(0,e.jsxs)(n.tr,{children:[(0,e.jsx)(n.td,{children:\"initialPage\"}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"number\"})}),(0,e.jsx)(n.td,{children:\"The initial page. (uncontrolled)\"}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"1\"})})]}),(0,e.jsxs)(n.tr,{children:[(0,e.jsx)(n.td,{children:\"page\"}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"number\"})}),(0,e.jsx)(n.td,{children:\"The current page. (controlled)\"}),(0,e.jsx)(n.td,{children:\"-\"})]}),(0,e.jsxs)(n.tr,{children:[(0,e.jsx)(n.td,{children:\"siblings\"}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"number\"})}),(0,e.jsx)(n.td,{children:\"The number of pages to show before and after the current page.\"}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"1\"})})]}),(0,e.jsxs)(n.tr,{children:[(0,e.jsx)(n.td,{children:\"boundaries\"}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"number\"})}),(0,e.jsx)(n.td,{children:\"The number of pages to show at the beginning and end of the pagination.\"}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"1\"})})]}),(0,e.jsxs)(n.tr,{children:[(0,e.jsx)(n.td,{children:\"loop\"}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"boolean\"})}),(0,e.jsx)(n.td,{children:\"Whether the pagination should be looped.\"}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"false\"})})]}),(0,e.jsxs)(n.tr,{children:[(0,e.jsx)(n.td,{children:\"isCompact\"}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"boolean\"})}),(0,e.jsx)(n.td,{children:\"Whether the pagination should have a compact style.\"}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"false\"})})]}),(0,e.jsxs)(n.tr,{children:[(0,e.jsx)(n.td,{children:\"isDisabled\"}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"boolean\"})}),(0,e.jsx)(n.td,{children:\"Whether the pagination is disabled.\"}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"false\"})})]}),(0,e.jsxs)(n.tr,{children:[(0,e.jsx)(n.td,{children:\"showShadow\"}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"boolean\"})}),(0,e.jsx)(n.td,{children:\"Whether the pagination cursor should have a shadow.\"}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"false\"})})]}),(0,e.jsxs)(n.tr,{children:[(0,e.jsx)(n.td,{children:\"showControls\"}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"boolean\"})}),(0,e.jsx)(n.td,{children:\"Whether the pagination should have controls.\"}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"false\"})})]}),(0,e.jsxs)(n.tr,{children:[(0,e.jsx)(n.td,{children:\"disableCursorAnimation\"}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"boolean\"})}),(0,e.jsx)(n.td,{children:\"Whether the pagination cursor should be hidden.\"}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"false\"})})]}),(0,e.jsxs)(n.tr,{children:[(0,e.jsx)(n.td,{children:\"renderItem\"}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.a,{href:\"#pagination-item-props\",children:\"PaginationItemProps\"})}),(0,e.jsx)(n.td,{children:\"The pagination item render function.\"}),(0,e.jsx)(n.td,{children:\"-\"})]}),(0,e.jsxs)(n.tr,{children:[(0,e.jsx)(n.td,{children:\"getItemAriaLabel\"}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"(page: string) => string\"})}),(0,e.jsx)(n.td,{children:\"A function that allows you to customize the pagination items aria-label.\"}),(0,e.jsx)(n.td,{children:\"-\"})]}),(0,e.jsxs)(n.tr,{children:[(0,e.jsx)(n.td,{children:\"disableAnimation\"}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"boolean\"})}),(0,e.jsx)(n.td,{children:\"Whether the pagination cursor should be animated.\"}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"false\"})})]}),(0,e.jsxs)(n.tr,{children:[(0,e.jsx)(n.td,{children:\"classNames\"}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:'Record<\"base\"\\uFF5C \"wrapper\" \\uFF5C \"prev\"\\uFF5C \"next\" \\uFF5C \"item\" \\uFF5C \"cursor\" \\uFF5C \"forwardIcon\" \\uFF5C \"ellipsis\" \\uFF5C \"chevronNext\", string>'})}),(0,e.jsx)(n.td,{children:\"Allows to set custom class names for the pagination slots.\"}),(0,e.jsx)(n.td,{children:\"-\"})]})]})]}),`\n`,(0,e.jsx)(n.h3,{id:\"pagination-events\",children:\"Pagination Events\"}),`\n`,(0,e.jsxs)(n.table,{children:[(0,e.jsx)(n.thead,{children:(0,e.jsxs)(n.tr,{children:[(0,e.jsx)(n.th,{children:\"Attribute\"}),(0,e.jsx)(n.th,{children:\"Type\"}),(0,e.jsx)(n.th,{children:\"Description\"})]})}),(0,e.jsx)(n.tbody,{children:(0,e.jsxs)(n.tr,{children:[(0,e.jsx)(n.td,{children:\"onChange\"}),(0,e.jsx)(n.td,{children:(0,e.jsx)(n.code,{children:\"(page: number) => void\"})}),(0,e.jsx)(n.td,{children:\"Handler that is called when the pagination active page changes.\"})]})})]}),`\n`,(0,e.jsx)(n.hr,{}),`\n`,(0,e.jsx)(n.h3,{id:\"types\",children:\"Types\"}),`\n`,(0,e.jsx)(n.h4,{id:\"pagination-item-props\",children:\"Pagination Item Props\"}),`\n`,(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:\"language-ts\",children:`export type PaginationItemRenderProps = {\n  // The pagination item ref.\n  ref?: Ref<T>;\n  // The pagination item value.\n  value: PaginationItemValue;\n  // The pagination item index.\n  index: number;\n  // The active page number.\n  activePage: number;\n  // Whether the pagination item is active.\n  isActive: boolean;\n  // Whether the pagination item is the first item in the pagination.\n  isFirst: boolean;\n  // Whether the pagination item is the last item in the pagination.\n  isLast: boolean;\n  // Whether the pagination item is the next item in the pagination.\n  isNext: boolean;\n  // Whether the pagination item is the previous item in the pagination.\n  isPrevious: boolean;\n  // The pagination item className.\n  className: string;\n  // Callback to go to the next page.\n  onNext: () => void;\n  // Callback to go to the previous page.\n  onPrevious: () => void;\n  // Callback to go to the page.\n  setPage: (page: number) => void;\n};\n\ntype renderItem?: (props: PaginationItemRenderProps) => ReactNode;\n`})})]})}function z(t={}){let{wrapper:n}=t.components||{};return n?(0,e.jsx)(n,{...t,children:(0,e.jsx)(W,{...t})}):W(t)}function l(t,n){throw new Error(\"Expected \"+(n?\"component\":\"object\")+\" `\"+t+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return G(Se);})();\n;return Component;"
  },
  "_id": "docs/components/pagination.mdx",
  "_raw": {
    "sourceFilePath": "docs/components/pagination.mdx",
    "sourceFileName": "pagination.mdx",
    "sourceFileDir": "docs/components",
    "contentType": "mdx",
    "flattenedPath": "docs/components/pagination"
  },
  "type": "Doc",
  "slug": "/docs/components/pagination",
  "slugAsParams": "components/pagination",
  "url": "/docs/components/pagination"
}