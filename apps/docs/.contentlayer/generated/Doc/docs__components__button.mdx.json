{
  "title": "Button",
  "description": "Buttons allow users to perform actions and choose with a single tap.",
  "body": {
    "raw": "\nimport {buttonContent} from \"@/content/components/button\";\n\n# Button\n\nButtons allow users to perform actions and choose with a single tap.\n\n<ComponentLinks component=\"button\" reactAriaHook=\"useButton\" />\n\n---\n\n<CarbonAd/>\n\n## Installation\n\n<PackageManagers\n  showGlobalInstallWarning\n  commands={{\n    cli: \"npx nextui-cli@latest add button\",\n    npm: \"npm install @nextui-org/button\",\n    yarn: \"yarn add @nextui-org/button\",\n    pnpm: \"pnpm add @nextui-org/button\",\n    bun: \"bun add @nextui-org/button\"\n  }}\n/>\n\n## Import\n\nNextUI exports 2 button-related components:\n\n- **Button**: The main component to display a button.\n- **ButtonGroup**: A wrapper component to display a group of buttons.\n\n<ImportTabs\n  commands={{\n    main: 'import {Button, ButtonGroup} from \"@nextui-org/react\";',\n    individual: 'import {Button, ButtonGroup} from \"@nextui-org/button\";',\n  }}\n/>\n\n## Usage\n\n<CodeDemo title=\"Usage\" files={buttonContent.usage} />\n\n### Disabled\n\n<CodeDemo title=\"Disabled\" files={buttonContent.disabled} />\n\n### Sizes\n\n<CodeDemo title=\"Sizes\" files={buttonContent.sizes} />\n\n### Radius\n\n<CodeDemo title=\"Radius\" files={buttonContent.radius} />\n\n### Colors\n\n<CodeDemo title=\"Colors\" files={buttonContent.colors} />\n\n### Variants\n\n<CodeDemo title=\"Variants\" files={buttonContent.variants} />\n\n### Loading\n\nPass the `isLoading` prop to display a [Spinner](/docs/components/spinner) component inside the button.\n\n<CodeDemo title=\"Loading\" files={buttonContent.loading} />\n\nYou can also customize the loading spinner by passing the a custom component to the `spinner` prop.\n\n<CodeDemo title=\"Custom Loading\" files={buttonContent.loadingCustom} />\n\n### With Icons\n\nYou can add icons to the `Button` by passing the `startContent` or `endContent` props.\n\n<CodeDemo title=\"With Icons\" files={buttonContent.icons} />\n\n### Icon Only\n\nYou can also display a button without text by passing the `isIconOnly` prop and the desired icon as `children`.\n\n<CodeDemo title=\"With Icons\" files={buttonContent.iconOnly} />\n\n### Custom Styles\n\nYou can customize the `Button` component by passing custom Tailwind CSS classes to the component slots.\n\n<CodeDemo title=\"Custom Styles\" files={buttonContent.customStyles} />\n\n> Custom class names will override the default ones thanks to [Tailwind Merge](https://github.com/dcastil/tailwind-merge) library. It\n> means that you don't need to worry about class conflicts.\n\n### Custom Implementation\n\nYou can also use the `useButton` hook to create your own button component.\n\n<CodeDemo showPreview={false} showOpenInCodeSandbox={false} title=\"Custom Implementation\" files={buttonContent.customImpl} />\n\n## Button Group\n\n<CodeDemo title=\"Button Group\" files={buttonContent.group} />\n\n### Group Disabled\n\nThe `ButtonGroup` component also accepts the `isDisabled` prop to disable all buttons inside it.\n\n<CodeDemo title=\"Group Disabled\" files={buttonContent.groupDisabled} />\n\n### Group Use case\n\nA common use case for the `ButtonGroup` component is to display a group of two buttons one for the selected value and another for the `dropdown`.\n\n<CodeDemo title=\"Group Use case\" files={buttonContent.groupUseCase} />\n\n> See the [Dropdown](/docs/components/dropdown) component for more details.\n\n<Spacer y={4} />\n\n## Data Attributes\n\n`Button` has the following attributes on the `base` element:\n\n- **data-hover**:\n  When the button is being hovered. Based on [useHover](https://react-spectrum.adobe.com/react-aria/useHover.html)\n- **data-focus**:\n  When the button is being focused. Based on [useFocusRing](https://react-spectrum.adobe.com/react-aria/useFocusRing.html).\n- **data-focus-visible**:\n  When the button is being focused with the keyboard. Based on [useFocusRing](https://react-spectrum.adobe.com/react-aria/useFocusRing.html).\n- **data-disabled**:\n  When the button is disabled. Based on `isDisabled` prop.\n- **data-pressed**:\n  When the button is pressed. Based on [usePress](https://react-spectrum.adobe.com/react-aria/usePress.html)\n- **data-loading**:\n  When the button is loading. Based on `isLoading` prop.\n\n<Spacer y={4} />\n\n## Accessibility\n\n- Button has role of `button`.\n- Keyboard event support for <Kbd>Space</Kbd> and <Kbd>Enter</Kbd> keys.\n- Mouse and touch event handling, and press state management.\n- Keyboard focus management and cross browser normalization.\n\nWe recommend to read this [blog post](https://react-spectrum.adobe.com/blog/building-a-button-part-1.html) about the complexities of\nbuilding buttons that work well across devices and interaction methods.\n\n<Spacer y={4} />\n\n## API\n\n### Button Props\n\n| Attribute        | Type                                                                         | Description                                                  | Default   |\n| ---------------- | ---------------------------------------------------------------------------- | ------------------------------------------------------------ | --------- |\n| children         | `ReactNode`                                                                  | The content to display in the button.                        | -         |\n| variant          | `solid` \\| `bordered` \\| `light` \\| `flat` \\| `faded` \\| `shadow` \\| `ghost` | The button appearance style.                                 | `solid`   |\n| color            | `default` \\| `primary` \\| `secondary` \\| `success` \\| `warning` \\| `danger`  | The button color theme.                                      | `default` |\n| size             | `sm` \\| `md` \\| `lg`                                                         | The button size.                                             | `md`      |\n| radius           | `none` \\| `sm` \\| `md` \\| `lg` \\| `full`                                     | The button border radius.                                    | -         |\n| startContent     | `ReactNode`                                                                  | The button start content.                                    | -         |\n| endContent       | `ReactNode`                                                                  | The button end content.                                      | -         |\n| spinner          | `ReactNode`                                                                  | Spinner to display when loading.                             | -         |\n| spinnerPlacement | `start` \\| `end`                                                             | The spinner placement.                                       | `start`   |\n| fullWidth        | `boolean`                                                                    | Whether the button should take the full width of its parent. | `false`   |\n| isIconOnly       | `boolean`                                                                    | Whether the button should have the same width and height.    | `false`   |\n| isDisabled       | `boolean`                                                                    | Whether the button is disabled.                              | `false`   |\n| isLoading        | `boolean`                                                                    | Whether the button is loading.                               | `false`   |\n| disableRipple    | `boolean`                                                                    | Whether the button should display a ripple effect on press.  | `false`   |\n| disableAnimation | `boolean`                                                                    | Whether the button should display animations.                | `false`   |\n\n### Button Events\n\n| Attribute     | Type                           | Description                                                                                                     |\n| ------------- | ------------------------------ | --------------------------------------------------------------------------------------------------------------- |\n| onPress       | `(e: PressEvent) => void`      | Handler called when the press is released over the target.                                                      |\n| onPressStart  | `(e: PressEvent) => void`      | Handler called when a press interaction starts.                                                                 |\n| onPressEnd    | `(e: PressEvent) => void`      | Handler called when a press interaction ends, either over the target or when the pointer leaves the target.     |\n| onPressChange | `(isPressed: boolean) => void` | Handler called when the press state changes.                                                                    |\n| onPressUp     | `(e: PressEvent) => void`      | Handler called when a press is released over the target, regardless of whether it started on the target or not. |\n| onKeyDown     | `(e: KeyboardEvent) => void`   | Handler called when a key is pressed.                                                                           |\n| onKeyUp       | `(e: KeyboardEvent) => void`   | Handler called when a key is released.                                                                          |\n| onClick       | `MouseEventHandler`            | The native button click event handler (**Deprecated**) use **onPress** instead.                                 |\n\n### Button Group Props\n\n| Attribute  | Type                                                                         | Description                                     | Default   |\n| ---------- | ---------------------------------------------------------------------------- | ----------------------------------------------- | --------- |\n| children   | `ReactNode` \\| `ReactNode[]`                                                 | The buttons to display.                         | -         |\n| variant    | `solid` \\| `bordered` \\| `light` \\| `flat` \\| `faded` \\| `shadow` \\| `ghost` | The buttons appearance style.                   | `solid`   |\n| color      | `default` \\| `primary` \\| `secondary` \\| `success` \\| `warning` \\| `danger`  | The buttons color theme.                        | `default` |\n| size       | `sm` \\| `md` \\| `lg`                                                         | The buttons size.                               | `md`      |\n| radius     | `none` \\| `sm` \\| `md` \\| `lg` \\| `full`                                     | The buttons border radius.                      | `xl`      |\n| fullWidth  | `boolean`                                                                    | Whether the buttons should take the full width. | `false`   |\n| isDisabled | `boolean`                                                                    | Whether the buttons are disabled.               | `false`   |\n",
    "code": "var Component=(()=>{var T=Object.create;var s=Object.defineProperty;var L=Object.getOwnPropertyDescriptor;var j=Object.getOwnPropertyNames;var W=Object.getPrototypeOf,G=Object.prototype.hasOwnProperty;var H=(n,t)=>()=>(t||n((t={exports:{}}).exports,t),t.exports),N=(n,t)=>{for(var i in t)s(n,i,{get:t[i],enumerable:!0})},u=(n,t,i,o)=>{if(t&&typeof t==\"object\"||typeof t==\"function\")for(let d of j(t))!G.call(n,d)&&d!==i&&s(n,d,{get:()=>t[d],enumerable:!(o=L(t,d))||o.enumerable});return n};var O=(n,t,i)=>(i=n!=null?T(W(n)):{},u(t||!n||!n.__esModule?s(i,\"default\",{value:n,enumerable:!0}):i,n)),U=n=>u(s({},\"__esModule\",{value:!0}),n);var f=H((Me,m)=>{m.exports=_jsx_runtime});var De={};N(De,{default:()=>S,frontmatter:()=>Ie});var e=O(f());var E=`import {Button} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <Button color=\"primary\">\n      Button\n    </Button>\n  );\n}`,q={\"/App.jsx\":E},g={...q};var F=`import {Button} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <div className=\"flex gap-4 items-center\">\n      <Button size=\"sm\">\n        Small\n      </Button>  \n      <Button size=\"md\">\n        Medium\n      </Button>  \n      <Button size=\"lg\">\n        Large\n      </Button>  \n    </div>\n  );\n}`,K={\"/App.jsx\":F},b={...K};var _=`import {Button} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <Button isDisabled color=\"primary\">\n      Button\n    </Button>\n  );\n}`,V={\"/App.jsx\":_},B={...V};var Y=`import {Button} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <div className=\"flex flex-wrap gap-4 items-center\">\n      <Button color=\"default\">\n        Default\n      </Button>\n      <Button color=\"primary\">\n        Primary\n      </Button>  \n      <Button color=\"secondary\">\n        Secondary\n      </Button>  \n      <Button color=\"success\">\n        Success\n      </Button>  \n      <Button color=\"warning\">\n        Warning\n      </Button>  \n      <Button color=\"danger\">\n        Danger\n      </Button>  \n    </div>\n  );\n}`,X={\"/App.jsx\":Y},w={...X};var Z=`import {Button} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <div className=\"flex flex-wrap gap-4 items-center\">\n      <Button color=\"primary\" variant=\"solid\">\n        Solid\n      </Button>\n      <Button color=\"primary\" variant=\"faded\">\n        Faded\n      </Button>  \n      <Button color=\"primary\" variant=\"bordered\">\n        Bordered\n      </Button>  \n      <Button color=\"primary\" variant=\"light\">\n        Light\n      </Button>  \n      <Button color=\"primary\" variant=\"flat\">\n        Flat\n      </Button>  \n      <Button color=\"primary\" variant=\"ghost\">\n        Ghost\n      </Button>  \n      <Button color=\"primary\" variant=\"shadow\">\n        Shadow\n      </Button>  \n    </div>\n  );\n}`,J={\"/App.jsx\":Z},x={...J};var Q=`import {Button} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <div className=\"flex gap-4 items-center\">\n      <Button radius=\"full\">\n        Full\n      </Button>\n      <Button radius=\"lg\">\n        Large\n      </Button>  \n      <Button radius=\"md\">\n        Medium\n      </Button>  \n      <Button radius=\"sm\">\n        Small\n      </Button>  \n      <Button radius=\"none\">\n        None\n      </Button>  \n    </div>\n  );\n}`,$={\"/App.jsx\":Q},v={...$};var ee=`import {Button} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <Button color=\"primary\" isLoading>\n      Loading\n    </Button>\n  );\n}`,te={\"/App.jsx\":ee},y={...te};var ne=`import {Button} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <Button\n      isLoading\n      color=\"secondary\"\n      spinner={\n        <svg\n          className=\"animate-spin h-5 w-5 text-current\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <circle\n            className=\"opacity-25\"\n            cx=\"12\"\n            cy=\"12\"\n            r=\"10\"\n            stroke=\"currentColor\"\n            strokeWidth=\"4\"\n          />\n          <path\n            className=\"opacity-75\"\n            d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n            fill=\"currentColor\"\n          />\n        </svg>\n      }\n    >\n      Loading\n    </Button>\n  );\n}`,oe={\"/App.jsx\":ne},C={...oe};var re=`export const UserIcon = ({\n  fill = 'currentColor',\n  filled,\n  size,\n  height,\n  width,\n  label,\n  ...props\n}) => {\n  return (\n    <svg\n      data-name=\"Iconly/Curved/Profile\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      width={size || width || 24}\n      height={size || height || 24}\n      {...props}\n    >\n      <g\n        fill=\"none\"\n        stroke={fill}\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeMiterlimit={10}\n        strokeWidth={1.5}\n      >\n        <path\n          data-name=\"Stroke 1\"\n          d=\"M11.845 21.662C8.153 21.662 5 21.088 5 18.787s3.133-4.425 6.845-4.425c3.692 0 6.845 2.1 6.845 4.4s-3.134 2.9-6.845 2.9z\"\n        />\n        <path\n          data-name=\"Stroke 3\"\n          d=\"M11.837 11.174a4.372 4.372 0 10-.031 0z\"\n        />\n      </g>\n    </svg>\n  );\n};`,ie=`export const CameraIcon = ({\n  fill = 'currentColor',\n  filled,\n  size,\n  height,\n  width,\n  label,\n  ...props\n}) => {\n  return (\n    <svg\n      width={size || width || 24}\n      height={size || height || 24}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M17.44 6.236c.04.07.11.12.2.12 2.4 0 4.36 1.958 4.36 4.355v5.934A4.368 4.368 0 0117.64 21H6.36A4.361 4.361 0 012 16.645V10.71a4.361 4.361 0 014.36-4.355c.08 0 .16-.04.19-.12l.06-.12.106-.222a97.79 97.79 0 01.714-1.486C7.89 3.51 8.67 3.01 9.64 3h4.71c.97.01 1.76.51 2.22 1.408.157.315.397.822.629 1.31l.141.299.1.22zm-.73 3.836c0 .5.4.9.9.9s.91-.4.91-.9-.41-.909-.91-.909-.9.41-.9.91zm-6.44 1.548c.47-.47 1.08-.719 1.73-.719.65 0 1.26.25 1.72.71.46.459.71 1.068.71 1.717A2.438 2.438 0 0112 15.756c-.65 0-1.26-.25-1.72-.71a2.408 2.408 0 01-.71-1.717v-.01c-.01-.63.24-1.24.7-1.699zm4.5 4.485a3.91 3.91 0 01-2.77 1.15 3.921 3.921 0 01-3.93-3.926 3.865 3.865 0 011.14-2.767A3.921 3.921 0 0112 9.402c1.05 0 2.04.41 2.78 1.15.74.749 1.15 1.738 1.15 2.777a3.958 3.958 0 01-1.16 2.776z\"\n        fill={fill}\n      />\n    </svg>\n  );\n};`,de=`import {Button} from \"@nextui-org/react\";\nimport {UserIcon} from './UserIcon';\nimport {CameraIcon} from './CameraIcon';\n\nexport default function App() {\n  return (\n    <div className=\"flex gap-4 items-center\">\n      <Button color=\"success\" endContent={<CameraIcon/>}>\n        Take a photo\n      </Button>    \n      <Button color=\"danger\" variant=\"bordered\" startContent={<UserIcon/>}>\n        Delete user\n      </Button>\n    </div>\n  );\n}`,le={\"/App.jsx\":de,\"/UserIcon.jsx\":re,\"/CameraIcon.jsx\":ie},A={...le};var ce=`export const HeartIcon = ({\n  fill = 'currentColor',\n  filled,\n  size,\n  height,\n  width,\n  label,\n  ...props\n}) => {\n  return (\n    <svg\n      width={size || width || 24}\n      height={size || height || 24}\n      viewBox=\"0 0 24 24\"\n      fill={filled ? fill : 'none'}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path\n        d=\"M12.62 20.81c-.34.12-.9.12-1.24 0C8.48 19.82 2 15.69 2 8.69 2 5.6 4.49 3.1 7.56 3.1c1.82 0 3.43.88 4.44 2.24a5.53 5.53 0 0 1 4.44-2.24C19.51 3.1 22 5.6 22 8.69c0 7-6.48 11.13-9.38 12.12Z\"\n        stroke={fill}\n        strokeWidth={1.5}\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  );\n};\n`,se=`export const CameraIcon = ({\n  fill = 'currentColor',\n  filled,\n  size,\n  height,\n  width,\n  label,\n  ...props\n}) => {\n  return (\n    <svg\n      width={size || width || 24}\n      height={size || height || 24}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M17.44 6.236c.04.07.11.12.2.12 2.4 0 4.36 1.958 4.36 4.355v5.934A4.368 4.368 0 0117.64 21H6.36A4.361 4.361 0 012 16.645V10.71a4.361 4.361 0 014.36-4.355c.08 0 .16-.04.19-.12l.06-.12.106-.222a97.79 97.79 0 01.714-1.486C7.89 3.51 8.67 3.01 9.64 3h4.71c.97.01 1.76.51 2.22 1.408.157.315.397.822.629 1.31l.141.299.1.22zm-.73 3.836c0 .5.4.9.9.9s.91-.4.91-.9-.41-.909-.91-.909-.9.41-.9.91zm-6.44 1.548c.47-.47 1.08-.719 1.73-.719.65 0 1.26.25 1.72.71.46.459.71 1.068.71 1.717A2.438 2.438 0 0112 15.756c-.65 0-1.26-.25-1.72-.71a2.408 2.408 0 01-.71-1.717v-.01c-.01-.63.24-1.24.7-1.699zm4.5 4.485a3.91 3.91 0 01-2.77 1.15 3.921 3.921 0 01-3.93-3.926 3.865 3.865 0 011.14-2.767A3.921 3.921 0 0112 9.402c1.05 0 2.04.41 2.78 1.15.74.749 1.15 1.738 1.15 2.777a3.958 3.958 0 01-1.16 2.776z\"\n        fill={fill}\n      />\n    </svg>\n  );\n};`,ae=`import {Button} from \"@nextui-org/react\";\nimport {HeartIcon} from './HeartIcon';\nimport {CameraIcon} from './CameraIcon';\n\nexport default function App() {\n  return (\n    <div className=\"flex gap-4 items-center\">\n      <Button isIconOnly color=\"danger\" aria-label=\"Like\">\n        <HeartIcon />\n      </Button>    \n      <Button isIconOnly color=\"warning\" variant=\"faded\" aria-label=\"Take a photo\">\n        <CameraIcon />\n      </Button>\n    </div>\n  );\n}`,he={\"/App.jsx\":ae,\"/HeartIcon.jsx\":ce,\"/CameraIcon.jsx\":se},I={...he};var pe=`import {Button} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <Button radius=\"full\" className=\"bg-gradient-to-tr from-pink-500 to-yellow-500 text-white shadow-lg\">\n      Button\n    </Button>\n  );\n}`,ue={\"/App.jsx\":pe},D={...ue};var me=`import {forwardRef} from \"react\";\nimport {useButton, Ripple, Spinner} from \"@nextui-org/react\";\n\n\nconst MyButton = forwardRef((props, ref) => {\n  const {\n    domRef,\n    children,\n    spinnerSize,\n    spinner = <Spinner color=\"current\" size={spinnerSize} />,\n    spinnerPlacement,\n    startContent,\n    endContent,\n    isLoading,\n    disableRipple,\n    getButtonProps,\n    getRippleProps,\n  } = useButton({\n    ref,\n    ...props,\n  });\n\n  const {ripples, onClear} = getRippleProps();\n\n  return (\n    <button ref={domRef} {...getButtonProps()}>\n      {startContent}\n      {isLoading && spinnerPlacement === \"start\" && spinner}\n      {children}\n      {isLoading && spinnerPlacement === \"end\" && spinner}\n      {endContent}\n      {!disableRipple && <Ripple ripples={ripples} onClear={onClear} />}\n    </button>\n  );\n});\n\nMyButton.displayName = \"MyButton\";\n\nexport default MyButton;`,fe=`import {forwardRef} from \"react\";\nimport {useButton, Ripple, Spinner, ButtonProps as BaseButtonProps} from \"@nextui-org/react\";\n\nexport interface ButtonProps extends BaseButtonProps {}\n\nconst MyButton = forwardRef<HTMLButtonElement, ButtonProps>((props, ref) => {\n  const {\n    domRef,\n    children,\n    spinnerSize,\n    spinner = <Spinner color=\"current\" size={spinnerSize} />,\n    spinnerPlacement,\n    startContent,\n    endContent,\n    isLoading,\n    disableRipple,\n    getButtonProps,\n    getRippleProps,\n  } = useButton({\n    ref,\n    ...props,\n  });\n\n  const {ripples, onClear} = getRippleProps();\n\n  return (\n    <button ref={domRef} {...getButtonProps()}>\n      {startContent}\n      {isLoading && spinnerPlacement === \"start\" && spinner}\n      {children}\n      {isLoading && spinnerPlacement === \"end\" && spinner}\n      {endContent}\n      {!disableRipple && <Ripple ripples={ripples} onClear={onClear} />}\n    </button>\n  );\n});\n\nMyButton.displayName = \"MyButton\";\n\nexport default MyButton;`,ge={\"/App.jsx\":me},be={\"/App.tsx\":fe},z={...ge,...be};var Be=`import {Button, ButtonGroup} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <ButtonGroup>\n      <Button>One</Button>\n      <Button>Two</Button>\n      <Button>Three</Button>\n    </ButtonGroup>\n  );\n}`,we={\"/App.jsx\":Be},M={...we};var xe=`import {Button, ButtonGroup} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <ButtonGroup isDisabled>\n      <Button>One</Button>\n      <Button>Two</Button>\n      <Button>Three</Button>\n    </ButtonGroup>\n  );\n}`,ve={\"/App.jsx\":xe},P={...ve};var ye=`export const ChevronDownIcon = () => (\n  <svg fill=\"none\" height=\"14\" viewBox=\"0 0 24 24\" width=\"14\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M17.9188 8.17969H11.6888H6.07877C5.11877 8.17969 4.63877 9.33969 5.31877 10.0197L10.4988 15.1997C11.3288 16.0297 12.6788 16.0297 13.5088 15.1997L15.4788 13.2297L18.6888 10.0197C19.3588 9.33969 18.8788 8.17969 17.9188 8.17969Z\" fill=\"currentColor\"/>\n  </svg>\n);`,Ce=`import {Button, ButtonGroup, Dropdown, DropdownTrigger, DropdownMenu, DropdownItem} from \"@nextui-org/react\";\nimport {ChevronDownIcon} from './ChevronDownIcon';\n\nexport default function App() {\n  const [selectedOption, setSelectedOption] = React.useState(new Set([\"merge\"]));\n\n  const descriptionsMap = {\n    merge:\n      \"All commits from the source branch are added to the destination branch via a merge commit.\",\n    squash:\n      \"All commits from the source branch are added to the destination branch as a single commit.\",\n    rebase: \"All commits from the source branch are added to the destination branch individually.\",\n  };\n\n  const labelsMap = {\n    merge: \"Create a merge commit\",\n    squash: \"Squash and merge\",\n    rebase: \"Rebase and merge\",\n  }\n\n  // Convert the Set to an Array and get the first value.\n  const selectedOptionValue = Array.from(selectedOption)[0];\n\n  return (\n    <ButtonGroup variant=\"flat\">\n      <Button>{labelsMap[selectedOptionValue]}</Button>\n      <Dropdown placement=\"bottom-end\">\n        <DropdownTrigger>\n          <Button isIconOnly>\n            <ChevronDownIcon />\n          </Button>\n        </DropdownTrigger>\n        <DropdownMenu\n          disallowEmptySelection\n          aria-label=\"Merge options\"\n          selectedKeys={selectedOption}\n          selectionMode=\"single\"\n          onSelectionChange={setSelectedOption}\n          className=\"max-w-[300px]\"\n        >\n          <DropdownItem key=\"merge\" description={descriptionsMap[\"merge\"]}>\n            {labelsMap[\"merge\"]}\n          </DropdownItem>\n          <DropdownItem key=\"squash\" description={descriptionsMap[\"squash\"]}>\n            {labelsMap[\"squash\"]}\n          </DropdownItem>\n          <DropdownItem key=\"rebase\" description={descriptionsMap[\"rebase\"]}>\n            {labelsMap[\"rebase\"]}\n          </DropdownItem>\n        </DropdownMenu>\n      </Dropdown>\n    </ButtonGroup>\n  );\n}`,Ae={\"/App.jsx\":Ce,\"/ChevronDownIcon.jsx\":ye},k={...Ae};var r={usage:g,sizes:b,disabled:B,colors:w,radius:v,variants:x,loading:y,loadingCustom:C,icons:A,iconOnly:I,customStyles:D,customImpl:z,group:M,groupDisabled:P,groupUseCase:k};var Ie={title:\"Button\",description:\"Buttons allow users to perform actions and choose with a single tap.\"};function R(n){let t={a:\"a\",blockquote:\"blockquote\",code:\"code\",h1:\"h1\",h2:\"h2\",h3:\"h3\",hr:\"hr\",li:\"li\",p:\"p\",strong:\"strong\",table:\"table\",tbody:\"tbody\",td:\"td\",th:\"th\",thead:\"thead\",tr:\"tr\",ul:\"ul\",...n.components},{CarbonAd:i,CodeDemo:o,ComponentLinks:d,ImportTabs:h,Kbd:a,PackageManagers:p,Spacer:c}=t;return i||l(\"CarbonAd\",!0),o||l(\"CodeDemo\",!0),d||l(\"ComponentLinks\",!0),h||l(\"ImportTabs\",!0),a||l(\"Kbd\",!0),p||l(\"PackageManagers\",!0),c||l(\"Spacer\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(t.h1,{id:\"button\",children:\"Button\"}),`\n`,(0,e.jsx)(t.p,{children:\"Buttons allow users to perform actions and choose with a single tap.\"}),`\n`,(0,e.jsx)(d,{component:\"button\",reactAriaHook:\"useButton\"}),`\n`,(0,e.jsx)(t.hr,{}),`\n`,(0,e.jsx)(i,{}),`\n`,(0,e.jsx)(t.h2,{id:\"installation\",children:\"Installation\"}),`\n`,(0,e.jsx)(p,{showGlobalInstallWarning:!0,commands:{cli:\"npx nextui-cli@latest add button\",npm:\"npm install @nextui-org/button\",yarn:\"yarn add @nextui-org/button\",pnpm:\"pnpm add @nextui-org/button\",bun:\"bun add @nextui-org/button\"}}),`\n`,(0,e.jsx)(t.h2,{id:\"import\",children:\"Import\"}),`\n`,(0,e.jsx)(t.p,{children:\"NextUI exports 2 button-related components:\"}),`\n`,(0,e.jsxs)(t.ul,{children:[`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"Button\"}),\": The main component to display a button.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"ButtonGroup\"}),\": A wrapper component to display a group of buttons.\"]}),`\n`]}),`\n`,(0,e.jsx)(h,{commands:{main:'import {Button, ButtonGroup} from \"@nextui-org/react\";',individual:'import {Button, ButtonGroup} from \"@nextui-org/button\";'}}),`\n`,(0,e.jsx)(t.h2,{id:\"usage\",children:\"Usage\"}),`\n`,(0,e.jsx)(o,{title:\"Usage\",files:r.usage}),`\n`,(0,e.jsx)(t.h3,{id:\"disabled\",children:\"Disabled\"}),`\n`,(0,e.jsx)(o,{title:\"Disabled\",files:r.disabled}),`\n`,(0,e.jsx)(t.h3,{id:\"sizes\",children:\"Sizes\"}),`\n`,(0,e.jsx)(o,{title:\"Sizes\",files:r.sizes}),`\n`,(0,e.jsx)(t.h3,{id:\"radius\",children:\"Radius\"}),`\n`,(0,e.jsx)(o,{title:\"Radius\",files:r.radius}),`\n`,(0,e.jsx)(t.h3,{id:\"colors\",children:\"Colors\"}),`\n`,(0,e.jsx)(o,{title:\"Colors\",files:r.colors}),`\n`,(0,e.jsx)(t.h3,{id:\"variants\",children:\"Variants\"}),`\n`,(0,e.jsx)(o,{title:\"Variants\",files:r.variants}),`\n`,(0,e.jsx)(t.h3,{id:\"loading\",children:\"Loading\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"Pass the \",(0,e.jsx)(t.code,{children:\"isLoading\"}),\" prop to display a \",(0,e.jsx)(t.a,{href:\"/docs/components/spinner\",children:\"Spinner\"}),\" component inside the button.\"]}),`\n`,(0,e.jsx)(o,{title:\"Loading\",files:r.loading}),`\n`,(0,e.jsxs)(t.p,{children:[\"You can also customize the loading spinner by passing the a custom component to the \",(0,e.jsx)(t.code,{children:\"spinner\"}),\" prop.\"]}),`\n`,(0,e.jsx)(o,{title:\"Custom Loading\",files:r.loadingCustom}),`\n`,(0,e.jsx)(t.h3,{id:\"with-icons\",children:\"With Icons\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"You can add icons to the \",(0,e.jsx)(t.code,{children:\"Button\"}),\" by passing the \",(0,e.jsx)(t.code,{children:\"startContent\"}),\" or \",(0,e.jsx)(t.code,{children:\"endContent\"}),\" props.\"]}),`\n`,(0,e.jsx)(o,{title:\"With Icons\",files:r.icons}),`\n`,(0,e.jsx)(t.h3,{id:\"icon-only\",children:\"Icon Only\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"You can also display a button without text by passing the \",(0,e.jsx)(t.code,{children:\"isIconOnly\"}),\" prop and the desired icon as \",(0,e.jsx)(t.code,{children:\"children\"}),\".\"]}),`\n`,(0,e.jsx)(o,{title:\"With Icons\",files:r.iconOnly}),`\n`,(0,e.jsx)(t.h3,{id:\"custom-styles\",children:\"Custom Styles\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"You can customize the \",(0,e.jsx)(t.code,{children:\"Button\"}),\" component by passing custom Tailwind CSS classes to the component slots.\"]}),`\n`,(0,e.jsx)(o,{title:\"Custom Styles\",files:r.customStyles}),`\n`,(0,e.jsxs)(t.blockquote,{children:[`\n`,(0,e.jsxs)(t.p,{children:[\"Custom class names will override the default ones thanks to \",(0,e.jsx)(t.a,{href:\"https://github.com/dcastil/tailwind-merge\",children:\"Tailwind Merge\"}),` library. It\nmeans that you don't need to worry about class conflicts.`]}),`\n`]}),`\n`,(0,e.jsx)(t.h3,{id:\"custom-implementation\",children:\"Custom Implementation\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"You can also use the \",(0,e.jsx)(t.code,{children:\"useButton\"}),\" hook to create your own button component.\"]}),`\n`,(0,e.jsx)(o,{showPreview:!1,showOpenInCodeSandbox:!1,title:\"Custom Implementation\",files:r.customImpl}),`\n`,(0,e.jsx)(t.h2,{id:\"button-group\",children:\"Button Group\"}),`\n`,(0,e.jsx)(o,{title:\"Button Group\",files:r.group}),`\n`,(0,e.jsx)(t.h3,{id:\"group-disabled\",children:\"Group Disabled\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"The \",(0,e.jsx)(t.code,{children:\"ButtonGroup\"}),\" component also accepts the \",(0,e.jsx)(t.code,{children:\"isDisabled\"}),\" prop to disable all buttons inside it.\"]}),`\n`,(0,e.jsx)(o,{title:\"Group Disabled\",files:r.groupDisabled}),`\n`,(0,e.jsx)(t.h3,{id:\"group-use-case\",children:\"Group Use case\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"A common use case for the \",(0,e.jsx)(t.code,{children:\"ButtonGroup\"}),\" component is to display a group of two buttons one for the selected value and another for the \",(0,e.jsx)(t.code,{children:\"dropdown\"}),\".\"]}),`\n`,(0,e.jsx)(o,{title:\"Group Use case\",files:r.groupUseCase}),`\n`,(0,e.jsxs)(t.blockquote,{children:[`\n`,(0,e.jsxs)(t.p,{children:[\"See the \",(0,e.jsx)(t.a,{href:\"/docs/components/dropdown\",children:\"Dropdown\"}),\" component for more details.\"]}),`\n`]}),`\n`,(0,e.jsx)(c,{y:4}),`\n`,(0,e.jsx)(t.h2,{id:\"data-attributes\",children:\"Data Attributes\"}),`\n`,(0,e.jsxs)(t.p,{children:[(0,e.jsx)(t.code,{children:\"Button\"}),\" has the following attributes on the \",(0,e.jsx)(t.code,{children:\"base\"}),\" element:\"]}),`\n`,(0,e.jsxs)(t.ul,{children:[`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"data-hover\"}),`:\nWhen the button is being hovered. Based on `,(0,e.jsx)(t.a,{href:\"https://react-spectrum.adobe.com/react-aria/useHover.html\",children:\"useHover\"})]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"data-focus\"}),`:\nWhen the button is being focused. Based on `,(0,e.jsx)(t.a,{href:\"https://react-spectrum.adobe.com/react-aria/useFocusRing.html\",children:\"useFocusRing\"}),\".\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"data-focus-visible\"}),`:\nWhen the button is being focused with the keyboard. Based on `,(0,e.jsx)(t.a,{href:\"https://react-spectrum.adobe.com/react-aria/useFocusRing.html\",children:\"useFocusRing\"}),\".\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"data-disabled\"}),`:\nWhen the button is disabled. Based on `,(0,e.jsx)(t.code,{children:\"isDisabled\"}),\" prop.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"data-pressed\"}),`:\nWhen the button is pressed. Based on `,(0,e.jsx)(t.a,{href:\"https://react-spectrum.adobe.com/react-aria/usePress.html\",children:\"usePress\"})]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"data-loading\"}),`:\nWhen the button is loading. Based on `,(0,e.jsx)(t.code,{children:\"isLoading\"}),\" prop.\"]}),`\n`]}),`\n`,(0,e.jsx)(c,{y:4}),`\n`,(0,e.jsx)(t.h2,{id:\"accessibility\",children:\"Accessibility\"}),`\n`,(0,e.jsxs)(t.ul,{children:[`\n`,(0,e.jsxs)(t.li,{children:[\"Button has role of \",(0,e.jsx)(t.code,{children:\"button\"}),\".\"]}),`\n`,(0,e.jsxs)(t.li,{children:[\"Keyboard event support for \",(0,e.jsx)(a,{children:\"Space\"}),\" and \",(0,e.jsx)(a,{children:\"Enter\"}),\" keys.\"]}),`\n`,(0,e.jsx)(t.li,{children:\"Mouse and touch event handling, and press state management.\"}),`\n`,(0,e.jsx)(t.li,{children:\"Keyboard focus management and cross browser normalization.\"}),`\n`]}),`\n`,(0,e.jsxs)(t.p,{children:[\"We recommend to read this \",(0,e.jsx)(t.a,{href:\"https://react-spectrum.adobe.com/blog/building-a-button-part-1.html\",children:\"blog post\"}),` about the complexities of\nbuilding buttons that work well across devices and interaction methods.`]}),`\n`,(0,e.jsx)(c,{y:4}),`\n`,(0,e.jsx)(t.h2,{id:\"api\",children:\"API\"}),`\n`,(0,e.jsx)(t.h3,{id:\"button-props\",children:\"Button Props\"}),`\n`,(0,e.jsxs)(t.table,{children:[(0,e.jsx)(t.thead,{children:(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.th,{children:\"Attribute\"}),(0,e.jsx)(t.th,{children:\"Type\"}),(0,e.jsx)(t.th,{children:\"Description\"}),(0,e.jsx)(t.th,{children:\"Default\"})]})}),(0,e.jsxs)(t.tbody,{children:[(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"children\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"ReactNode\"})}),(0,e.jsx)(t.td,{children:\"The content to display in the button.\"}),(0,e.jsx)(t.td,{children:\"-\"})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"variant\"}),(0,e.jsxs)(t.td,{children:[(0,e.jsx)(t.code,{children:\"solid\"}),\" | \",(0,e.jsx)(t.code,{children:\"bordered\"}),\" | \",(0,e.jsx)(t.code,{children:\"light\"}),\" | \",(0,e.jsx)(t.code,{children:\"flat\"}),\" | \",(0,e.jsx)(t.code,{children:\"faded\"}),\" | \",(0,e.jsx)(t.code,{children:\"shadow\"}),\" | \",(0,e.jsx)(t.code,{children:\"ghost\"})]}),(0,e.jsx)(t.td,{children:\"The button appearance style.\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"solid\"})})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"color\"}),(0,e.jsxs)(t.td,{children:[(0,e.jsx)(t.code,{children:\"default\"}),\" | \",(0,e.jsx)(t.code,{children:\"primary\"}),\" | \",(0,e.jsx)(t.code,{children:\"secondary\"}),\" | \",(0,e.jsx)(t.code,{children:\"success\"}),\" | \",(0,e.jsx)(t.code,{children:\"warning\"}),\" | \",(0,e.jsx)(t.code,{children:\"danger\"})]}),(0,e.jsx)(t.td,{children:\"The button color theme.\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"default\"})})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"size\"}),(0,e.jsxs)(t.td,{children:[(0,e.jsx)(t.code,{children:\"sm\"}),\" | \",(0,e.jsx)(t.code,{children:\"md\"}),\" | \",(0,e.jsx)(t.code,{children:\"lg\"})]}),(0,e.jsx)(t.td,{children:\"The button size.\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"md\"})})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"radius\"}),(0,e.jsxs)(t.td,{children:[(0,e.jsx)(t.code,{children:\"none\"}),\" | \",(0,e.jsx)(t.code,{children:\"sm\"}),\" | \",(0,e.jsx)(t.code,{children:\"md\"}),\" | \",(0,e.jsx)(t.code,{children:\"lg\"}),\" | \",(0,e.jsx)(t.code,{children:\"full\"})]}),(0,e.jsx)(t.td,{children:\"The button border radius.\"}),(0,e.jsx)(t.td,{children:\"-\"})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"startContent\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"ReactNode\"})}),(0,e.jsx)(t.td,{children:\"The button start content.\"}),(0,e.jsx)(t.td,{children:\"-\"})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"endContent\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"ReactNode\"})}),(0,e.jsx)(t.td,{children:\"The button end content.\"}),(0,e.jsx)(t.td,{children:\"-\"})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"spinner\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"ReactNode\"})}),(0,e.jsx)(t.td,{children:\"Spinner to display when loading.\"}),(0,e.jsx)(t.td,{children:\"-\"})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"spinnerPlacement\"}),(0,e.jsxs)(t.td,{children:[(0,e.jsx)(t.code,{children:\"start\"}),\" | \",(0,e.jsx)(t.code,{children:\"end\"})]}),(0,e.jsx)(t.td,{children:\"The spinner placement.\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"start\"})})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"fullWidth\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"boolean\"})}),(0,e.jsx)(t.td,{children:\"Whether the button should take the full width of its parent.\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"false\"})})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"isIconOnly\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"boolean\"})}),(0,e.jsx)(t.td,{children:\"Whether the button should have the same width and height.\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"false\"})})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"isDisabled\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"boolean\"})}),(0,e.jsx)(t.td,{children:\"Whether the button is disabled.\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"false\"})})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"isLoading\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"boolean\"})}),(0,e.jsx)(t.td,{children:\"Whether the button is loading.\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"false\"})})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"disableRipple\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"boolean\"})}),(0,e.jsx)(t.td,{children:\"Whether the button should display a ripple effect on press.\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"false\"})})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"disableAnimation\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"boolean\"})}),(0,e.jsx)(t.td,{children:\"Whether the button should display animations.\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"false\"})})]})]})]}),`\n`,(0,e.jsx)(t.h3,{id:\"button-events\",children:\"Button Events\"}),`\n`,(0,e.jsxs)(t.table,{children:[(0,e.jsx)(t.thead,{children:(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.th,{children:\"Attribute\"}),(0,e.jsx)(t.th,{children:\"Type\"}),(0,e.jsx)(t.th,{children:\"Description\"})]})}),(0,e.jsxs)(t.tbody,{children:[(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"onPress\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"(e: PressEvent) => void\"})}),(0,e.jsx)(t.td,{children:\"Handler called when the press is released over the target.\"})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"onPressStart\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"(e: PressEvent) => void\"})}),(0,e.jsx)(t.td,{children:\"Handler called when a press interaction starts.\"})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"onPressEnd\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"(e: PressEvent) => void\"})}),(0,e.jsx)(t.td,{children:\"Handler called when a press interaction ends, either over the target or when the pointer leaves the target.\"})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"onPressChange\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"(isPressed: boolean) => void\"})}),(0,e.jsx)(t.td,{children:\"Handler called when the press state changes.\"})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"onPressUp\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"(e: PressEvent) => void\"})}),(0,e.jsx)(t.td,{children:\"Handler called when a press is released over the target, regardless of whether it started on the target or not.\"})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"onKeyDown\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"(e: KeyboardEvent) => void\"})}),(0,e.jsx)(t.td,{children:\"Handler called when a key is pressed.\"})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"onKeyUp\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"(e: KeyboardEvent) => void\"})}),(0,e.jsx)(t.td,{children:\"Handler called when a key is released.\"})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"onClick\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"MouseEventHandler\"})}),(0,e.jsxs)(t.td,{children:[\"The native button click event handler (\",(0,e.jsx)(t.strong,{children:\"Deprecated\"}),\") use \",(0,e.jsx)(t.strong,{children:\"onPress\"}),\" instead.\"]})]})]})]}),`\n`,(0,e.jsx)(t.h3,{id:\"button-group-props\",children:\"Button Group Props\"}),`\n`,(0,e.jsxs)(t.table,{children:[(0,e.jsx)(t.thead,{children:(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.th,{children:\"Attribute\"}),(0,e.jsx)(t.th,{children:\"Type\"}),(0,e.jsx)(t.th,{children:\"Description\"}),(0,e.jsx)(t.th,{children:\"Default\"})]})}),(0,e.jsxs)(t.tbody,{children:[(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"children\"}),(0,e.jsxs)(t.td,{children:[(0,e.jsx)(t.code,{children:\"ReactNode\"}),\" | \",(0,e.jsx)(t.code,{children:\"ReactNode[]\"})]}),(0,e.jsx)(t.td,{children:\"The buttons to display.\"}),(0,e.jsx)(t.td,{children:\"-\"})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"variant\"}),(0,e.jsxs)(t.td,{children:[(0,e.jsx)(t.code,{children:\"solid\"}),\" | \",(0,e.jsx)(t.code,{children:\"bordered\"}),\" | \",(0,e.jsx)(t.code,{children:\"light\"}),\" | \",(0,e.jsx)(t.code,{children:\"flat\"}),\" | \",(0,e.jsx)(t.code,{children:\"faded\"}),\" | \",(0,e.jsx)(t.code,{children:\"shadow\"}),\" | \",(0,e.jsx)(t.code,{children:\"ghost\"})]}),(0,e.jsx)(t.td,{children:\"The buttons appearance style.\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"solid\"})})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"color\"}),(0,e.jsxs)(t.td,{children:[(0,e.jsx)(t.code,{children:\"default\"}),\" | \",(0,e.jsx)(t.code,{children:\"primary\"}),\" | \",(0,e.jsx)(t.code,{children:\"secondary\"}),\" | \",(0,e.jsx)(t.code,{children:\"success\"}),\" | \",(0,e.jsx)(t.code,{children:\"warning\"}),\" | \",(0,e.jsx)(t.code,{children:\"danger\"})]}),(0,e.jsx)(t.td,{children:\"The buttons color theme.\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"default\"})})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"size\"}),(0,e.jsxs)(t.td,{children:[(0,e.jsx)(t.code,{children:\"sm\"}),\" | \",(0,e.jsx)(t.code,{children:\"md\"}),\" | \",(0,e.jsx)(t.code,{children:\"lg\"})]}),(0,e.jsx)(t.td,{children:\"The buttons size.\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"md\"})})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"radius\"}),(0,e.jsxs)(t.td,{children:[(0,e.jsx)(t.code,{children:\"none\"}),\" | \",(0,e.jsx)(t.code,{children:\"sm\"}),\" | \",(0,e.jsx)(t.code,{children:\"md\"}),\" | \",(0,e.jsx)(t.code,{children:\"lg\"}),\" | \",(0,e.jsx)(t.code,{children:\"full\"})]}),(0,e.jsx)(t.td,{children:\"The buttons border radius.\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"xl\"})})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"fullWidth\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"boolean\"})}),(0,e.jsx)(t.td,{children:\"Whether the buttons should take the full width.\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"false\"})})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"isDisabled\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"boolean\"})}),(0,e.jsx)(t.td,{children:\"Whether the buttons are disabled.\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"false\"})})]})]})]})]})}function S(n={}){let{wrapper:t}=n.components||{};return t?(0,e.jsx)(t,{...n,children:(0,e.jsx)(R,{...n})}):R(n)}function l(n,t){throw new Error(\"Expected \"+(t?\"component\":\"object\")+\" `\"+n+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return U(De);})();\n;return Component;"
  },
  "_id": "docs/components/button.mdx",
  "_raw": {
    "sourceFilePath": "docs/components/button.mdx",
    "sourceFileName": "button.mdx",
    "sourceFileDir": "docs/components",
    "contentType": "mdx",
    "flattenedPath": "docs/components/button"
  },
  "type": "Doc",
  "slug": "/docs/components/button",
  "slugAsParams": "components/button",
  "url": "/docs/components/button"
}