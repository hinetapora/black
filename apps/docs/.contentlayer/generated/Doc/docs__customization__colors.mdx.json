{
  "title": "Colors",
  "description": "Learn how to configure and customize colors with NextUI.",
  "body": {
    "raw": "\n# Colors\n\nNextUI's plugin enables you to personalize the semantic colors of the theme such as `primary`,\n`secondary`, `success`, etc.\n\n```js {7,11}\nmodule.exports = {\n  plugins: [\n    nextui({\n      themes: {\n        light: {\n          // ...\n          colors: {},\n        },\n        dark: {\n          // ...\n          colors: {},\n        },\n        // ... custom themes\n      },\n    }),\n  ],\n};\n```\n\n<CarbonAd/>\n\n> **Note**: Colors configurations apply globally across all components.\n\n## Default Colors\n\nNextUI offers a default color palette right out of the box, perfect for when you're \nstill undecided about your specific branding colors.\n\nThese colors are split into [Common Colors](#common-colors) and [Semantic Colors](#semantic-colors).\n\n- [Common Colors](#common-colors): Consistent across themes.\n- [Semantic Colors](#semantic-colors): Adjust according to the chosen theme.\n\n### Common Colors\n\nCommon colors, like [TailwindCSS](https://tailwindcss.com/docs/customizing-colors) colors, \nremain consistent regardless of the theme. \n\nTo prevent conflicts with TailwindCSS colors, common colors are initially disabled but can \nbe activated with the `addCommonColors` option.\n\n```js {4}\nmodule.exports = {\n  plugins: [\n    nextui({\n      addCommonColors: true,\n    }),\n  ],\n};\n```\n\nEnabling this option supplements some TailwindCSS default colors with the following:\n\n```js\nmodule.exports = {\n  theme: {\n    extend: {\n      colors: {\n        white: \"#FFFFFF\",\n        black: \"#000000\",\n        blue: {\n          50: \"#e6f1fe\",\n          100: \"#cce3fd\",\n          200: \"#99c7fb\",\n          300: \"#66aaf9\",\n          400: \"#338ef7\",\n          500: \"#006FEE\",\n          600: \"#005bc4\",\n          700: \"#004493\",\n          800: \"#002e62\",\n          900: \"#001731\",\n        },\n        // .. rest of the colors\n      },\n    },\n  },\n};\n```\n\n<CommonColors />\n\n### Semantic Colors\n\nSemantic colors adapt with the theme, delivering meaning and reinforcing your brand identity.\n\nFor an effective palette, we recommend using color ranges from `50` to `900`. You can use tools like [Eva Design System](https://colors.eva.design/),\n[Smart Watch](https://smart-swatch.netlify.app/), [Palette](https://palettte.app/) or [Color Box](https://colorbox.io/) to generate your palette.\n\n> Semantic colors should be placed inside the `nextui` plugin options, not inside the TailwindCSS theme object.\n\n```js {7-13,19-25,33-37}\nmodule.exports = {\n  plugins: [\n    nextui({\n      themes: {\n        light: {\n          colors: {\n            background: \"#FFFFFF\", // or DEFAULT\n            foreground: \"#11181C\", // or 50 to 900 DEFAULT\n            primary: {\n              //... 50 to 900\n              foreground: \"#FFFFFF\",\n              DEFAULT: \"#006FEE\",\n            },\n            // ... rest of the colors\n          },\n        },\n        dark: {\n          colors: {\n            background: \"#000000\", // or DEFAULT\n            foreground: \"#ECEDEE\", // or 50 to 900 DEFAULT\n            primary: {\n              //... 50 to 900\n              foreground: \"#FFFFFF\",\n              DEFAULT: \"#006FEE\",\n            },\n          },\n          // ... rest of the colors\n        },\n        mytheme: {\n          // custom theme\n          extend: \"dark\",\n          colors: {\n            primary: {\n              DEFAULT: \"#BEF264\",\n              foreground: \"#000000\",\n            },\n            focus: \"#BEF264\",\n          },\n        },\n      },\n    }),\n  ],\n};\n```\n\n<Blockquote className=\"flex items-center gap-2\">\n  Change the docs theme to see the semantic colors in action.\n  <ThemeSwitch />\n</Blockquote>\n\n<SemanticColors />\n\n### Using Semantic Colors\n\nSemantic colors can be applied anywhere in your project where colors are used, such as \ntext color, border color, background color utilities, and more.\n\n```html\n<div class=\"bg-primary-500 text-primary-50 rounded-small px-2 py-1\">\n  This is a primary color box\n</div>\n```\n\n<Spacer y={4} />\n\nimport semanticColorsExample from \"@/content/customization/colors/semantic-colors\";\n\n<CodeDemo title=\"Semantic Colors Example\" showEditor={false} files={semanticColorsExample} />\n\n### Javascript Variables\n\nImport semantic and common colors into your JavaScript files as follows:\n\n```js\nimport {commonColors, semanticColors} from \"@nextui-org/theme\";\n\nconsole.log(commonColors.white); // #FFFFFF\nconsole.log(commonColors.blue[500]); // #006FEE\n\nconsole.log(semanticColors.dark.warning.DEFAULT); // #FFC107\nconsole.log(semanticColors.light.primary.DEFAULT); // #006FEE\n```\n\n### CSS Variables\n\nNextUI creates CSS variables using the format `--prefix-colorname-shade` for each semantic color. By\ndefault the prefix is `nextui`, but you can change it with the `prefix` option.\n\n```js {4}\nmodule.exports = {\n  plugins: [\n    nextui({\n      prefix: \"myapp\",\n    }),\n  ],\n};\n```\n\nThen you can use the CSS variables in your CSS files.\n\n```css\n/* With default prefix */\n.my-component {\n  background-color: hsl(var(--nextui-primary-500));\n}\n/*  With custom prefix */\n.my-component {\n  background-color: hsl(var(--myapp-primary-500));\n}\n```\n",
    "code": "var Component=(()=>{var x=Object.create;var l=Object.defineProperty;var F=Object.getOwnPropertyDescriptor;var b=Object.getOwnPropertyNames;var y=Object.getPrototypeOf,S=Object.prototype.hasOwnProperty;var E=(o,e)=>()=>(e||o((e={exports:{}}).exports,e),e.exports),w=(o,e)=>{for(var r in e)l(o,r,{get:e[r],enumerable:!0})},m=(o,e,r,i)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let t of b(e))!S.call(o,t)&&t!==r&&l(o,t,{get:()=>e[t],enumerable:!(i=F(e,t))||i.enumerable});return o};var v=(o,e,r)=>(r=o!=null?x(y(o)):{},m(e||!o||!o.__esModule?l(r,\"default\",{value:o,enumerable:!0}):r,o)),T=o=>m(l({},\"__esModule\",{value:!0}),o);var u=E((U,p)=>{p.exports=_jsx_runtime});var A={};w(A,{default:()=>C,frontmatter:()=>D});var n=v(u());var k=`export default function App() {\n  return (\n    <div class=\"bg-primary-500 text-primary-50 rounded-small px-2 py-1\">\n      This is a primary color box\n    </div>\n  );\n}`,j={\"/App.jsx\":k},f={...j};var D={title:\"Colors\",description:\"Learn how to configure and customize colors with NextUI.\"};function g(o){let e={a:\"a\",blockquote:\"blockquote\",code:\"code\",h1:\"h1\",h2:\"h2\",h3:\"h3\",li:\"li\",p:\"p\",pre:\"pre\",strong:\"strong\",ul:\"ul\",...o.components},{Blockquote:r,CarbonAd:i,CodeDemo:t,CommonColors:s,SemanticColors:a,Spacer:d,ThemeSwitch:h}=e;return r||c(\"Blockquote\",!0),i||c(\"CarbonAd\",!0),t||c(\"CodeDemo\",!0),s||c(\"CommonColors\",!0),a||c(\"SemanticColors\",!0),d||c(\"Spacer\",!0),h||c(\"ThemeSwitch\",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h1,{id:\"colors\",children:\"Colors\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"NextUI's plugin enables you to personalize the semantic colors of the theme such as \",(0,n.jsx)(e.code,{children:\"primary\"}),`,\n`,(0,n.jsx)(e.code,{children:\"secondary\"}),\", \",(0,n.jsx)(e.code,{children:\"success\"}),\", etc.\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",meta:\"{7,11}\",children:`module.exports = {\n  plugins: [\n    nextui({\n      themes: {\n        light: {\n          // ...\n          colors: {},\n        },\n        dark: {\n          // ...\n          colors: {},\n        },\n        // ... custom themes\n      },\n    }),\n  ],\n};\n`})}),`\n`,(0,n.jsx)(i,{}),`\n`,(0,n.jsxs)(e.blockquote,{children:[`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:\"Note\"}),\": Colors configurations apply globally across all components.\"]}),`\n`]}),`\n`,(0,n.jsx)(e.h2,{id:\"default-colors\",children:\"Default Colors\"}),`\n`,(0,n.jsx)(e.p,{children:`NextUI offers a default color palette right out of the box, perfect for when you're\nstill undecided about your specific branding colors.`}),`\n`,(0,n.jsxs)(e.p,{children:[\"These colors are split into \",(0,n.jsx)(e.a,{href:\"#common-colors\",children:\"Common Colors\"}),\" and \",(0,n.jsx)(e.a,{href:\"#semantic-colors\",children:\"Semantic Colors\"}),\".\"]}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.a,{href:\"#common-colors\",children:\"Common Colors\"}),\": Consistent across themes.\"]}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.a,{href:\"#semantic-colors\",children:\"Semantic Colors\"}),\": Adjust according to the chosen theme.\"]}),`\n`]}),`\n`,(0,n.jsx)(e.h3,{id:\"common-colors\",children:\"Common Colors\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"Common colors, like \",(0,n.jsx)(e.a,{href:\"https://tailwindcss.com/docs/customizing-colors\",children:\"TailwindCSS\"}),` colors,\nremain consistent regardless of the theme.`]}),`\n`,(0,n.jsxs)(e.p,{children:[`To prevent conflicts with TailwindCSS colors, common colors are initially disabled but can\nbe activated with the `,(0,n.jsx)(e.code,{children:\"addCommonColors\"}),\" option.\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",meta:\"{4}\",children:`module.exports = {\n  plugins: [\n    nextui({\n      addCommonColors: true,\n    }),\n  ],\n};\n`})}),`\n`,(0,n.jsx)(e.p,{children:\"Enabling this option supplements some TailwindCSS default colors with the following:\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",children:`module.exports = {\n  theme: {\n    extend: {\n      colors: {\n        white: \"#FFFFFF\",\n        black: \"#000000\",\n        blue: {\n          50: \"#e6f1fe\",\n          100: \"#cce3fd\",\n          200: \"#99c7fb\",\n          300: \"#66aaf9\",\n          400: \"#338ef7\",\n          500: \"#006FEE\",\n          600: \"#005bc4\",\n          700: \"#004493\",\n          800: \"#002e62\",\n          900: \"#001731\",\n        },\n        // .. rest of the colors\n      },\n    },\n  },\n};\n`})}),`\n`,(0,n.jsx)(s,{}),`\n`,(0,n.jsx)(e.h3,{id:\"semantic-colors\",children:\"Semantic Colors\"}),`\n`,(0,n.jsx)(e.p,{children:\"Semantic colors adapt with the theme, delivering meaning and reinforcing your brand identity.\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"For an effective palette, we recommend using color ranges from \",(0,n.jsx)(e.code,{children:\"50\"}),\" to \",(0,n.jsx)(e.code,{children:\"900\"}),\". You can use tools like \",(0,n.jsx)(e.a,{href:\"https://colors.eva.design/\",children:\"Eva Design System\"}),`,\n`,(0,n.jsx)(e.a,{href:\"https://smart-swatch.netlify.app/\",children:\"Smart Watch\"}),\", \",(0,n.jsx)(e.a,{href:\"https://palettte.app/\",children:\"Palette\"}),\" or \",(0,n.jsx)(e.a,{href:\"https://colorbox.io/\",children:\"Color Box\"}),\" to generate your palette.\"]}),`\n`,(0,n.jsxs)(e.blockquote,{children:[`\n`,(0,n.jsxs)(e.p,{children:[\"Semantic colors should be placed inside the \",(0,n.jsx)(e.code,{children:\"nextui\"}),\" plugin options, not inside the TailwindCSS theme object.\"]}),`\n`]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",meta:\"{7-13,19-25,33-37}\",children:`module.exports = {\n  plugins: [\n    nextui({\n      themes: {\n        light: {\n          colors: {\n            background: \"#FFFFFF\", // or DEFAULT\n            foreground: \"#11181C\", // or 50 to 900 DEFAULT\n            primary: {\n              //... 50 to 900\n              foreground: \"#FFFFFF\",\n              DEFAULT: \"#006FEE\",\n            },\n            // ... rest of the colors\n          },\n        },\n        dark: {\n          colors: {\n            background: \"#000000\", // or DEFAULT\n            foreground: \"#ECEDEE\", // or 50 to 900 DEFAULT\n            primary: {\n              //... 50 to 900\n              foreground: \"#FFFFFF\",\n              DEFAULT: \"#006FEE\",\n            },\n          },\n          // ... rest of the colors\n        },\n        mytheme: {\n          // custom theme\n          extend: \"dark\",\n          colors: {\n            primary: {\n              DEFAULT: \"#BEF264\",\n              foreground: \"#000000\",\n            },\n            focus: \"#BEF264\",\n          },\n        },\n      },\n    }),\n  ],\n};\n`})}),`\n`,(0,n.jsxs)(r,{className:\"flex items-center gap-2\",children:[(0,n.jsx)(e.p,{children:\"Change the docs theme to see the semantic colors in action.\"}),(0,n.jsx)(h,{})]}),`\n`,(0,n.jsx)(a,{}),`\n`,(0,n.jsx)(e.h3,{id:\"using-semantic-colors\",children:\"Using Semantic Colors\"}),`\n`,(0,n.jsx)(e.p,{children:`Semantic colors can be applied anywhere in your project where colors are used, such as\ntext color, border color, background color utilities, and more.`}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-html\",children:`<div class=\"bg-primary-500 text-primary-50 rounded-small px-2 py-1\">\n  This is a primary color box\n</div>\n`})}),`\n`,(0,n.jsx)(d,{y:4}),`\n`,`\n`,(0,n.jsx)(t,{title:\"Semantic Colors Example\",showEditor:!1,files:f}),`\n`,(0,n.jsx)(e.h3,{id:\"javascript-variables\",children:\"Javascript Variables\"}),`\n`,(0,n.jsx)(e.p,{children:\"Import semantic and common colors into your JavaScript files as follows:\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",children:`import {commonColors, semanticColors} from \"@nextui-org/theme\";\n\nconsole.log(commonColors.white); // #FFFFFF\nconsole.log(commonColors.blue[500]); // #006FEE\n\nconsole.log(semanticColors.dark.warning.DEFAULT); // #FFC107\nconsole.log(semanticColors.light.primary.DEFAULT); // #006FEE\n`})}),`\n`,(0,n.jsx)(e.h3,{id:\"css-variables\",children:\"CSS Variables\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"NextUI creates CSS variables using the format \",(0,n.jsx)(e.code,{children:\"--prefix-colorname-shade\"}),` for each semantic color. By\ndefault the prefix is `,(0,n.jsx)(e.code,{children:\"nextui\"}),\", but you can change it with the \",(0,n.jsx)(e.code,{children:\"prefix\"}),\" option.\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-js\",meta:\"{4}\",children:`module.exports = {\n  plugins: [\n    nextui({\n      prefix: \"myapp\",\n    }),\n  ],\n};\n`})}),`\n`,(0,n.jsx)(e.p,{children:\"Then you can use the CSS variables in your CSS files.\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-css\",children:`/* With default prefix */\n.my-component {\n  background-color: hsl(var(--nextui-primary-500));\n}\n/*  With custom prefix */\n.my-component {\n  background-color: hsl(var(--myapp-primary-500));\n}\n`})})]})}function C(o={}){let{wrapper:e}=o.components||{};return e?(0,n.jsx)(e,{...o,children:(0,n.jsx)(g,{...o})}):g(o)}function c(o,e){throw new Error(\"Expected \"+(e?\"component\":\"object\")+\" `\"+o+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return T(A);})();\n;return Component;"
  },
  "_id": "docs/customization/colors.mdx",
  "_raw": {
    "sourceFilePath": "docs/customization/colors.mdx",
    "sourceFileName": "colors.mdx",
    "sourceFileDir": "docs/customization",
    "contentType": "mdx",
    "flattenedPath": "docs/customization/colors"
  },
  "type": "Doc",
  "slug": "/docs/customization/colors",
  "slugAsParams": "customization/colors",
  "url": "/docs/customization/colors"
}