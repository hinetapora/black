{
  "title": "Input",
  "description": "Input is a component that allows users to enter text. It can be used to get user inputs in forms, search fields, and more.",
  "body": {
    "raw": "\nimport {inputContent} from \"@/content/components/input\";\n\n# Input\n\nInput is a component that allows users to enter text. It can be used to get user inputs in forms, search fields, and more.\n\n<ComponentLinks component=\"input\" reactAriaHook=\"useTextField\" />\n\n---\n\n<CarbonAd/>\n\n## Installation\n\n<PackageManagers\n  showGlobalInstallWarning\n  commands={{\n    cli: \"npx nextui-cli@latest add input\",\n    npm: \"npm install @nextui-org/input\",\n    yarn: \"yarn add @nextui-org/input\",\n    pnpm: \"pnpm add @nextui-org/input\",\n    bun: \"bun add @nextui-org/input\"\n  }}\n/>\n\n\n## Import\n\n<ImportTabs\n  commands={{\n    main: 'import {Input} from \"@nextui-org/react\";',\n    individual: 'import {Input} from \"@nextui-org/input\";',\n  }}\n/>\n\n## Usage\n\n<CodeDemo title=\"Usage\" files={inputContent.usage} />\n\n### Disabled\n\n<CodeDemo title=\"Disabled\" files={inputContent.disabled} />\n\n### Read Only\n\n<CodeDemo title=\"Read Only\" files={inputContent.readOnly} />\n\n### Required\n\nIf you pass the `isRequired` property to the input, it will have a `danger` asterisk at\nthe end of the label and the input will be required.\n\n<CodeDemo title=\"Required\" files={inputContent.required} />\n\n### Sizes\n\n<CodeDemo title=\"Sizes\" files={inputContent.sizes} />\n\n### Colors\n\n<CodeDemo title=\"Colors\" files={inputContent.colors} />\n\n### Variants\n\n<CodeDemo title=\"Variants\" files={inputContent.variants} />\n\n### Radius\n\n<CodeDemo title=\"Radius\" files={inputContent.radius} />\n\n### Label Placements\n\nYou can change the position of the label by setting the `labelPlacement` property to `inside`, `outside` or `outside-left`.\n\n<CodeDemo title=\"Label Placements\" files={inputContent.labelPlacements} />\n\n> **Note**: If the `label` is not passed, the `labelPlacement` property will be `outside` by default.\n\n### Password Input\n\nYou can use the `type` property to change the input type to `password`.\n\n<CodeDemo title=\"Password Input\" highlightedLines=\"25\" files={inputContent.password} />\n\n### Clear Button\n\nIf you pass the `isClearable` property to the input, it will have a clear button at the\nend of the input, it will be visible when the input has a value.\n\n<CodeDemo title=\"Clear Button\" highlightedLines=\"7\" files={inputContent.clearButton} />\n\n### Start & End Content\n\nYou can use the `startContent` and `endContent` properties to add content to the start and end of the input.\n\n<CodeDemo title=\"Start and End Content\" files={inputContent.startEndContent} />\n\n### With Description\n\nYou can add a description to the input by passing the `description` property.\n\n<CodeDemo title=\"With Description\" files={inputContent.description} />\n\n### With Error Message\n\nYou can combine the `isInvalid` and `errorMessage` properties to show an invalid input. `errorMessage` is only shown when `isInvalid` is set to `true`.\n\n<CodeDemo title=\"With Error Message\" files={inputContent.errorMessage} />\n\nExample with `regex` email validation:\n\n<CodeDemo title=\"With Regex Validation\" files={inputContent.regexValidation} />\n\n### Controlled\n\nYou can use the `value` and `onValueChange` properties to control the input value.\n\n<CodeDemo title=\"Controlled\" files={inputContent.controlled} />\n\n> **Note**: NextUI `Input` also supports native events like `onChange`, useful for form libraries\n> such as [Formik](https://formik.org/) and [React Hook Form](https://react-hook-form.com/).\n\n## Slots\n\n- **base**: Input wrapper, it handles alignment, placement, and general appearance.\n- **label**: Label of the input, it is the one that is displayed above, inside or left of the input.\n- **mainWrapper**: Wraps the `inputWrapper` when position is `outside` / `outside-left`.\n- **inputWrapper**: Wraps the `label` (when it is inside) and the `innerWrapper`.\n- **innerWrapper**: Wraps the `input`, the `startContent` and the `endContent`.\n- **input**: The input element.\n- **clearButton**: The clear button, it is at the end of the input.\n- **helperWrapper**: Wraps the `description` and the `errorMessage`.\n- **description**: The description of the input.\n- **errorMessage**: The error message of the input.\n\n### Custom Styles\n\nYou can customize the `Input` component by passing custom Tailwind CSS classes to the component slots.\n\n<CodeDemo title=\"Custom Styles\" highlightedLines=\"13-31\" files={inputContent.customStyles} />\n\n### Custom Implementation\n\nIn case you need to customize the input even further, you can use the `useInput` hook to create your own implementation.\n\n<CodeDemo\n  showPreview={false}\n  showOpenInCodeSandbox={true}\n  title=\"Custom Implementation\"\n  files={inputContent.customImpl}\n/>\n\n<Spacer y={4} />\n\n## Data Attributes\n\n`Input` has the following attributes on the `base` element:\n\n- **data-invalid**:\n  When the input is invalid. Based on `isInvalid` prop.\n- **data-required**:\n  When the input is required. Based on `isRequired` prop.\n- **data-readonly**:\n  When the input is readonly. Based on `isReadOnly` prop.\n- **data-hover**:\n  When the input is being hovered. Based on [useHover](https://react-spectrum.adobe.com/react-aria/useHover.html)\n- **data-focus**:\n  When the input is being focused. Based on [useFocusRing](https://react-spectrum.adobe.com/react-aria/useFocusRing.html).\n- **data-focus-within**:\n  When the input is being focused or any of its children. Based on [useFocusWithin](https://react-spectrum.adobe.com/react-aria/useFocusWithin.html).\n- **data-focus-visible**:\n  When the input is being focused with the keyboard. Based on [useFocusRing](https://react-spectrum.adobe.com/react-aria/useFocusRing.html).\n- **data-disabled**:\n  When the input is disabled. Based on `isDisabled` prop.\n\n<Spacer y={4} />\n\n## Accessibility\n\n- Built with a native `<input>` element.\n- Visual and ARIA labeling support.\n- Change, clipboard, composition, selection, and input event support.\n- Required and invalid states exposed to assistive technology via ARIA.\n- Support for description and error message help text linked to the input via ARIA.\n\n<Spacer y={4} />\n\n## API\n\n### Input Props\n\n| Attribute          | Type                                                                                                                                                                   | Description                                                                                                                                                   | Default   |\n| ------------------ | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------- | --------- |\n| children           | `ReactNode`                                                                                                                                                            | The content of the input.                                                                                                                                     | -         |\n| variant            | `flat` \\| `bordered` \\| `faded` \\| `underlined`                                                                                                                        | The variant of the input.                                                                                                                                     | `flat`    |\n| color              | `default` \\| `primary` \\| `secondary` \\| `success` \\| `warning` \\| `danger`                                                                                            | The color of the input.                                                                                                                                       | `default` |\n| size               | `sm` \\| `md` \\| `lg`                                                                                                                                                   | The size of the input.                                                                                                                                        | `md`      |\n| radius             | `none` \\| `sm` \\| `md` \\| `lg` \\| `full`                                                                                                                               | The radius of the input.                                                                                                                                      | -         |\n| label              | `ReactNode`                                                                                                                                                            | The content to display as the label.                                                                                                                          | -         |\n| value              | `string`                                                                                                                                                               | The current value of the input (controlled).                                                                                                                  | -         |\n| defaultValue       | `string`                                                                                                                                                               | The default value of the input (uncontrolled).                                                                                                                | -         |\n| placeholder        | `string`                                                                                                                                                               | The placeholder of the input.                                                                                                                                 | -         |\n| description        | `ReactNode`                                                                                                                                                            | A description for the input. Provides a hint such as specific requirements for what to choose.                                                                | -         |\n| errorMessage       | `ReactNode` \\| `((v: ValidationResult) => ReactNode)`                                                                                                                  | An error message for the input. It is only shown when `isInvalid` is set to `true`                                                                            | -         |\n| validate           | `(value: string) => ValidationError ｜ true ｜ null ｜ undefined`                                                                                                       | Validate input values when committing (e.g. on blur), returning error messages for invalid values. Validation errors are displayed upon form submission if `validationBehavior` is set to `native`. For real-time validation, use the `isInvalid` prop.| -         |\n| validationBehavior | `native` \\| `aria`                                                                                                                                                     | Whether to use native HTML form validation to prevent form submission when the value is missing or invalid, or mark the field as required or invalid via ARIA.| `aria`    |\n| startContent       | `ReactNode`                                                                                                                                                            | Element to be rendered in the left side of the input.                                                                                                         | -         |\n| endContent         | `ReactNode`                                                                                                                                                            | Element to be rendered in the right side of the input.                                                                                                        | -         |\n| labelPlacement     | `inside` \\| `outside` \\| `outside-left`                                                                                                                                | The position of the label.                                                                                                                                    | `inside`  |\n| fullWidth          | `boolean`                                                                                                                                                              | Whether the input should take up the width of its parent.                                                                                                     | `true`    |\n| isClearable        | `boolean`                                                                                                                                                              | Whether the input should have a clear button.                                                                                                                 | `false`   |\n| isRequired         | `boolean`                                                                                                                                                              | Whether user input is required on the input before form submission.                                                                                           | `false`   |\n| isReadOnly         | `boolean`                                                                                                                                                              | Whether the input can be selected but not changed by the user.                                                                                                |           |\n| isDisabled         | `boolean`                                                                                                                                                              | Whether the input is disabled.                                                                                                                                | `false`   |\n| isInvalid          | `boolean`                                                                                                                                                              | Whether the input is invalid.                                                                                                                                 | `false`   |\n| baseRef            | `RefObject<HTMLDivElement>`                                                                                                                                            | The ref to the base element.                                                                                                                                  | -         |\n| validationState    | `valid` \\| `invalid`                                                                                                                                                   | Whether the input should display its \"valid\" or \"invalid\" visual styling. (**Deprecated**) use **isInvalid** instead.                                         | -         |\n| disableAnimation   | `boolean`                                                                                                                                                              | Whether the input should be animated.                                                                                                                         | `false`   |\n| classNames         | `Record<\"base\"｜ \"label\"｜ \"inputWrapper\"｜ \"innerWrapper\"｜ \"mainWrapper\" ｜ \"input\" ｜ \"clearButton\" ｜ \"helperWrapper\" ｜ \"description\" ｜ \"errorMessage\", string>`    | Allows to set custom class names for the Input slots.                                                                                                         | -         |\n\n### Input Events\n\n| Attribute     | Type                                  | Description                                                                                                                         |\n| ------------- | ------------------------------------- | ----------------------------------------------------------------------------------------------------------------------------------- |\n| onChange      | `React.ChangeEvent<HTMLInputElement>` | Handler that is called when the element's value changes. You can pull out the new value by accessing `event.target.value` (string). |\n| onValueChange | `(value: string) => void`             | Handler that is called when the element's value changes.                                                                            |\n| onClear       | `() => void`                          | Handler that is called when the clear button is clicked.                                                                            |\n",
    "code": "var Component=(()=>{var V=Object.create;var s=Object.defineProperty;var B=Object.getOwnPropertyDescriptor;var F=Object.getOwnPropertyNames;var T=Object.getPrototypeOf,q=Object.prototype.hasOwnProperty;var D=(n,t)=>()=>(t||n((t={exports:{}}).exports,t),t.exports),z=(n,t)=>{for(var i in t)s(n,i,{get:t[i],enumerable:!0})},h=(n,t,i,r)=>{if(t&&typeof t==\"object\"||typeof t==\"function\")for(let o of F(t))!q.call(n,o)&&o!==i&&s(n,o,{get:()=>t[o],enumerable:!(r=B(t,o))||r.enumerable});return n};var Z=(n,t,i)=>(i=n!=null?V(T(n)):{},h(t||!n||!n.__esModule?s(i,\"default\",{value:n,enumerable:!0}):i,n)),H=n=>h(s({},\"__esModule\",{value:!0}),n);var m=D((Ve,u)=>{u.exports=_jsx_runtime});var Se={};z(Se,{default:()=>L,frontmatter:()=>je});var e=Z(m());var O=`import {Input} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <div className=\"flex w-full flex-wrap md:flex-nowrap gap-4\">\n      <Input type=\"email\" label=\"Email\" />\n      <Input type=\"email\" label=\"Email\" placeholder=\"Enter your email\" />\n    </div>\n  );\n}`,_={\"/App.jsx\":O},f={..._};var Y=`import {Input} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <Input\n      isDisabled\n      type=\"email\"\n      label=\"Email\"\n      defaultValue=\"junior@nextui.org\"\n      className=\"max-w-xs\"\n    />\n  );\n}`,U={\"/App.jsx\":Y},x={...U};var $=`import {Input} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <Input\n      isReadOnly\n      type=\"email\"\n      label=\"Email\"\n      variant=\"bordered\"\n      defaultValue=\"junior@nextui.org\"\n      className=\"max-w-xs\"\n    />\n  );\n}`,X={\"/App.jsx\":$},b={...X};var G=`import {Input} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <Input\n      isRequired\n      type=\"email\"\n      label=\"Email\"\n      defaultValue=\"junior@nextui.org\"\n      className=\"max-w-xs\"\n    />\n  );\n}`,J={\"/App.jsx\":G},g={...J};var K=`import {Input} from \"@nextui-org/react\";\n\nexport default function App() {\n\n  const sizes = [\"sm\", \"md\", \"lg\"];\n\n  return (\n    <div className=\"w-full flex flex-col gap-4\">\n      {sizes.map((size) => (\n        <div key={size} className=\"flex w-full flex-wrap md:flex-nowrap mb-6 md:mb-0 gap-4\">\n          <Input size={size} type=\"email\" label=\"Email\" />\n          <Input size={size} type=\"email\" label=\"Email\" placeholder=\"Enter your email\" />\n        </div>\n      ))}  \n    </div>  \n  );\n}`,Q={\"/App.jsx\":K},v={...Q};var ee=`import {Input} from \"@nextui-org/react\";\n\nexport default function App() {\n  const colors = [\n    \"default\",\n    \"primary\",\n    \"secondary\",\n    \"success\",\n    \"warning\",\n    \"danger\",\n  ];\n\n  return (\n    <div className=\"w-full flex flex-row flex-wrap gap-4\">\n      {colors.map((color) => (\n        <Input\n          key={color}\n          type=\"email\"\n          color={color}\n          label=\"Email\"\n          placeholder=\"Enter your email\"\n          defaultValue=\"junior@nextui.org\"\n          className=\"max-w-[220px]\"\n        />\n      ))}\n    </div>\n  );\n}`,te={\"/App.jsx\":ee},C={...te};var ne=`import {Input} from \"@nextui-org/react\";\n\nexport default function App() {\n  const variants = [\"flat\", \"bordered\", \"underlined\", \"faded\"];\n\n  return (\n    <div className=\"w-full flex flex-col gap-4\">\n      {variants.map((variant) => (\n        <div key={variant} className=\"flex w-full flex-wrap md:flex-nowrap mb-6 md:mb-0 gap-4\">\n          <Input type=\"email\" variant={variant} label=\"Email\" />\n          <Input type=\"email\" variant={variant} label=\"Email\" placeholder=\"Enter your email\" />\n        </div>\n      ))}  \n    </div>  \n  );\n}`,re={\"/App.jsx\":ne},I={...re};var le=`import {Input} from \"@nextui-org/react\";\n\nexport default function App() {\n  const radius = [\n    \"full\",\n    \"lg\",\n    \"md\",\n    \"sm\",\n    \"none\",\n  ];\n\n  return (\n    <div className=\"w-full flex flex-row flex-wrap gap-4\">\n      {radius.map((r) => (\n        <Input\n          key={r}\n          radius={r}\n          type=\"email\"\n          label=\"Email\"\n          placeholder=\"Enter your email\"\n          defaultValue=\"junior@nextui.org\"\n          className=\"max-w-[220px]\"\n        />\n      ))}\n    </div>\n  );\n}`,ie={\"/App.jsx\":le},y={...ie};var oe=`import {Input} from \"@nextui-org/react\";\n\nexport default function App() {\n  const placements = [\n    \"inside\",\n    \"outside\",\n    \"outside-left\",\n  ];\n\n  return (\n    <div className=\"flex flex-col gap-4\">\n      <div className=\"flex flex-col gap-2\">\n        <h3 className=\"text-default-500 text-small\">Without placeholder</h3>\n        <div className=\"flex w-full flex-wrap items-end md:flex-nowrap mb-6 md:mb-0 gap-4\">\n          {placements.map((placement) => (\n            <Input\n              key={placement}\n              type=\"email\"\n              label=\"Email\"\n              labelPlacement={placement}\n              description={placement}\n            />\n          ))}\n        </div>\n      </div>  \n      <div className=\"flex flex-col gap-2\">\n        <h3 className=\"text-default-500 text-small\">With placeholder</h3>\n        <div className=\"flex w-full flex-wrap items-end md:flex-nowrap mb-6 md:mb-0 gap-4\">\n          {placements.map((placement) => (\n            <Input\n              key={placement}\n              type=\"email\"\n              label=\"Email\"\n              labelPlacement={placement}\n              placeholder=\"Enter your email\"\n              description={placement}\n            />\n          ))}\n        </div>\n      </div>  \n    </div>  \n  );\n}`,ae={\"/App.jsx\":oe},w={...ae};var de=`import {Input} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <Input\n      type=\"email\"\n      label=\"Email\"\n      defaultValue=\"junior@nextui.org\"\n      description=\"We'll never share your email with anyone else.\"\n      className=\"max-w-xs\"\n    />\n  );\n}`,se={\"/App.jsx\":de},A={...se};var ce=`export const EyeSlashFilledIcon = (props) => (\n  <svg\n    aria-hidden=\"true\"\n    fill=\"none\"\n    focusable=\"false\"\n    height=\"1em\"\n    role=\"presentation\"\n    viewBox=\"0 0 24 24\"\n    width=\"1em\"\n    {...props}\n  >\n    <path\n      d=\"M21.2714 9.17834C20.9814 8.71834 20.6714 8.28834 20.3514 7.88834C19.9814 7.41834 19.2814 7.37834 18.8614 7.79834L15.8614 10.7983C16.0814 11.4583 16.1214 12.2183 15.9214 13.0083C15.5714 14.4183 14.4314 15.5583 13.0214 15.9083C12.2314 16.1083 11.4714 16.0683 10.8114 15.8483C10.8114 15.8483 9.38141 17.2783 8.35141 18.3083C7.85141 18.8083 8.01141 19.6883 8.68141 19.9483C9.75141 20.3583 10.8614 20.5683 12.0014 20.5683C13.7814 20.5683 15.5114 20.0483 17.0914 19.0783C18.7014 18.0783 20.1514 16.6083 21.3214 14.7383C22.2714 13.2283 22.2214 10.6883 21.2714 9.17834Z\"\n      fill=\"currentColor\"\n    />\n    <path\n      d=\"M14.0206 9.98062L9.98062 14.0206C9.47062 13.5006 9.14062 12.7806 9.14062 12.0006C9.14062 10.4306 10.4206 9.14062 12.0006 9.14062C12.7806 9.14062 13.5006 9.47062 14.0206 9.98062Z\"\n      fill=\"currentColor\"\n    />\n    <path\n      d=\"M18.25 5.74969L14.86 9.13969C14.13 8.39969 13.12 7.95969 12 7.95969C9.76 7.95969 7.96 9.76969 7.96 11.9997C7.96 13.1197 8.41 14.1297 9.14 14.8597L5.76 18.2497H5.75C4.64 17.3497 3.62 16.1997 2.75 14.8397C1.75 13.2697 1.75 10.7197 2.75 9.14969C3.91 7.32969 5.33 5.89969 6.91 4.91969C8.49 3.95969 10.22 3.42969 12 3.42969C14.23 3.42969 16.39 4.24969 18.25 5.74969Z\"\n      fill=\"currentColor\"\n    />\n    <path\n      d=\"M14.8581 11.9981C14.8581 13.5681 13.5781 14.8581 11.9981 14.8581C11.9381 14.8581 11.8881 14.8581 11.8281 14.8381L14.8381 11.8281C14.8581 11.8881 14.8581 11.9381 14.8581 11.9981Z\"\n      fill=\"currentColor\"\n    />\n    <path\n      d=\"M21.7689 2.22891C21.4689 1.92891 20.9789 1.92891 20.6789 2.22891L2.22891 20.6889C1.92891 20.9889 1.92891 21.4789 2.22891 21.7789C2.37891 21.9189 2.56891 21.9989 2.76891 21.9989C2.96891 21.9989 3.15891 21.9189 3.30891 21.7689L21.7689 3.30891C22.0789 3.00891 22.0789 2.52891 21.7689 2.22891Z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);`,pe=`export const EyeFilledIcon = (props) => (\n  <svg\n    aria-hidden=\"true\"\n    fill=\"none\"\n    focusable=\"false\"\n    height=\"1em\"\n    role=\"presentation\"\n    viewBox=\"0 0 24 24\"\n    width=\"1em\"\n    {...props}\n  >\n    <path\n      d=\"M21.25 9.14969C18.94 5.51969 15.56 3.42969 12 3.42969C10.22 3.42969 8.49 3.94969 6.91 4.91969C5.33 5.89969 3.91 7.32969 2.75 9.14969C1.75 10.7197 1.75 13.2697 2.75 14.8397C5.06 18.4797 8.44 20.5597 12 20.5597C13.78 20.5597 15.51 20.0397 17.09 19.0697C18.67 18.0897 20.09 16.6597 21.25 14.8397C22.25 13.2797 22.25 10.7197 21.25 9.14969ZM12 16.0397C9.76 16.0397 7.96 14.2297 7.96 11.9997C7.96 9.76969 9.76 7.95969 12 7.95969C14.24 7.95969 16.04 9.76969 16.04 11.9997C16.04 14.2297 14.24 16.0397 12 16.0397Z\"\n      fill=\"currentColor\"\n    />\n    <path\n      d=\"M11.9984 9.14062C10.4284 9.14062 9.14844 10.4206 9.14844 12.0006C9.14844 13.5706 10.4284 14.8506 11.9984 14.8506C13.5684 14.8506 14.8584 13.5706 14.8584 12.0006C14.8584 10.4306 13.5684 9.14062 11.9984 9.14062Z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);`,he=`import {Input} from \"@nextui-org/react\";\nimport {EyeFilledIcon} from \"./EyeFilledIcon\";\nimport {EyeSlashFilledIcon} from \"./EyeSlashFilledIcon\";\n\nexport default function App() {\n  const [isVisible, setIsVisible] = React.useState(false);\n\n  const toggleVisibility = () => setIsVisible(!isVisible);\n\n  return (\n    <Input\n      label=\"Password\"\n      variant=\"bordered\"\n      placeholder=\"Enter your password\"\n      endContent={\n        <button className=\"focus:outline-none\" type=\"button\" onClick={toggleVisibility} aria-label=\"toggle password visibility\">\n          {isVisible ? (\n            <EyeSlashFilledIcon className=\"text-2xl text-default-400 pointer-events-none\" />\n          ) : (\n            <EyeFilledIcon className=\"text-2xl text-default-400 pointer-events-none\" />\n          )}\n        </button>\n      }\n      type={isVisible ? \"text\" : \"password\"}\n      className=\"max-w-xs\"\n    />\n  );\n}`,ue={\"/App.jsx\":he,\"/EyeSlashFilledIcon.jsx\":ce,\"/EyeFilledIcon.jsx\":pe},k={...ue};var me=`import {Input} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <Input\n      isClearable\n      type=\"email\"\n      label=\"Email\"\n      variant=\"bordered\"\n      placeholder=\"Enter your email\"\n      defaultValue=\"junior@nextui.org\"\n      onClear={() => console.log(\"input cleared\")}\n      className=\"max-w-xs\"\n    />\n  );\n}`,fe={\"/App.jsx\":me},N={...fe};var xe=`export const MailIcon = (props) => (\n  <svg\n    aria-hidden=\"true\"\n    fill=\"none\"\n    focusable=\"false\"\n    height=\"1em\"\n    role=\"presentation\"\n    viewBox=\"0 0 24 24\"\n    width=\"1em\"\n    {...props}\n  >\n    <path\n      d=\"M17 3.5H7C4 3.5 2 5 2 8.5V15.5C2 19 4 20.5 7 20.5H17C20 20.5 22 19 22 15.5V8.5C22 5 20 3.5 17 3.5ZM17.47 9.59L14.34 12.09C13.68 12.62 12.84 12.88 12 12.88C11.16 12.88 10.31 12.62 9.66 12.09L6.53 9.59C6.21 9.33 6.16 8.85 6.41 8.53C6.67 8.21 7.14 8.15 7.46 8.41L10.59 10.91C11.35 11.52 12.64 11.52 13.4 10.91L16.53 8.41C16.85 8.15 17.33 8.2 17.58 8.53C17.84 8.85 17.79 9.33 17.47 9.59Z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);`,be=`import {Input} from \"@nextui-org/react\";\nimport {MailIcon} from './MailIcon';\n\nexport default function App() {\n  return (\n    <div className=\"flex flex-col gap-4\">\n      <div className=\"flex w-full flex-wrap md:flex-nowrap mb-6 md:mb-0 gap-4\">\n        <Input\n          type=\"email\"\n          label=\"Email\"\n          placeholder=\"you@example.com\"\n          labelPlacement=\"outside\"\n          startContent={\n            <MailIcon className=\"text-2xl text-default-400 pointer-events-none flex-shrink-0\" />\n          }\n        />\n        <Input\n          type=\"number\"\n          label=\"Price\"\n          placeholder=\"0.00\"\n          labelPlacement=\"outside\"\n          startContent={\n            <div className=\"pointer-events-none flex items-center\">\n              <span className=\"text-default-400 text-small\">$</span>\n            </div>\n          }\n        />\n        <Input\n          type=\"url\"\n          label=\"Website\"\n          placeholder=\"nextui.org\"\n          labelPlacement=\"outside\"\n          startContent={\n            <div className=\"pointer-events-none flex items-center\">\n              <span className=\"text-default-400 text-small\">https://</span>\n            </div>\n          }\n        />\n      </div>\n      <div className=\"flex w-full flex-wrap md:flex-nowrap mb-6 md:mb-0 gap-4\">\n        <Input\n          type=\"email\"\n          label=\"Email\"\n          placeholder=\"you@example.com\"\n          labelPlacement=\"outside\"\n          endContent={\n            <MailIcon className=\"text-2xl text-default-400 pointer-events-none flex-shrink-0\" />\n          }\n        />\n        <Input\n          type=\"number\"\n          label=\"Price\"\n          placeholder=\"0.00\"\n          labelPlacement=\"outside\"\n          endContent={\n            <div className=\"pointer-events-none flex items-center\">\n              <span className=\"text-default-400 text-small\">$</span>\n            </div>\n          }\n        />\n        <Input\n          type=\"url\"\n          label=\"Website\"\n          placeholder=\"nextui\"\n          labelPlacement=\"outside\"\n          endContent={\n            <div className=\"pointer-events-none flex items-center\">\n              <span className=\"text-default-400 text-small\">.org/</span>\n            </div>\n          }\n        />\n      </div>\n      <div className=\"flex w-full flex-wrap md:flex-nowrap mb-6 md:mb-0 gap-4\">\n        <Input\n          label=\"Email\"\n          placeholder=\"nextui\"\n          labelPlacement=\"outside\"\n          startContent={\n            <MailIcon className=\"text-xl text-default-400 pointer-events-none flex-shrink-0\" />\n          }\n          endContent={\n            <div className=\"pointer-events-none flex items-center\">\n              <span className=\"text-default-400 text-small\">@gmail.com</span>\n            </div>\n          }\n        />\n        <Input\n          label=\"Price\"\n          placeholder=\"0.00\"\n          labelPlacement=\"outside\"\n          startContent={\n            <div className=\"pointer-events-none flex items-center\">\n              <span className=\"text-default-400 text-small\">$</span>\n            </div>\n          }\n          endContent={\n            <div className=\"flex items-center\">\n              <label className=\"sr-only\" htmlFor=\"currency\">\n                Currency\n              </label>\n              <select\n                className=\"outline-none border-0 bg-transparent text-default-400 text-small\"\n                id=\"currency\"\n                name=\"currency\"\n              >\n                <option>USD</option>\n                <option>ARS</option>\n                <option>EUR</option>\n              </select>\n            </div>\n          }\n          type=\"number\"\n        />\n        <Input\n          type=\"url\"\n          label=\"Website\"\n          placeholder=\"nextui\"\n          labelPlacement=\"outside\"\n          startContent={\n            <div className=\"pointer-events-none flex items-center\">\n              <span className=\"text-default-400 text-small\">https://</span>\n            </div>\n          }\n          endContent={\n            <div className=\"pointer-events-none flex items-center\">\n              <span className=\"text-default-400 text-small\">.org</span>\n            </div>\n          }\n        />\n      </div>\n    </div>  \n  );\n}`,ge={\"/App.jsx\":be,\"/MailIcon.jsx\":xe},E={...ge};var ve=`import {Input} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <Input\n      type=\"email\"\n      label=\"Email\"\n      variant=\"bordered\"\n      defaultValue=\"junior2nextui.org\"\n      isInvalid={true}\n      errorMessage=\"Please enter a valid email\"\n      className=\"max-w-xs\"\n    />\n  );\n}`,Ce={\"/App.jsx\":ve},W={...Ce};var Ie=`import {Input} from \"@nextui-org/react\";\n\nexport default function App() {\n  const [value, setValue] = React.useState(\"junior2nextui.org\");\n\n  const validateEmail = (value) => value.match(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+.[A-Z]{2,4}$/i);\n\n  const isInvalid = React.useMemo(() => {\n    if (value === \"\") return false;\n\n    return validateEmail(value) ? false : true;\n  }, [value]);\n\n  return (\n    <Input\n      value={value}\n      type=\"email\"\n      label=\"Email\"\n      variant=\"bordered\"\n      isInvalid={isInvalid}\n      color={isInvalid ? \"danger\" : \"success\"}\n      errorMessage=\"Please enter a valid email\"\n      onValueChange={setValue}\n      className=\"max-w-xs\"\n    />\n  );\n}`,ye={\"/App.jsx\":Ie},M={...ye};var we=`import {Input} from \"@nextui-org/react\";\n\nexport default function App() {\n  const [value, setValue] = React.useState(\"\");\n\n  return (\n    <div className=\"w-full flex flex-col gap-2 max-w-[240px]\">\n      <Input\n        label=\"Email\"\n        placeholder=\"Enter your email\"\n        value={value}\n        onValueChange={setValue}\n      />\n      <p className=\"text-default-500 text-small\">Input value: {value}</p>\n    </div>\n  );\n}`,Ae={\"/App.jsx\":we},P={...Ae};var ke=`export const SearchIcon = (props) => (\n  <svg\n    aria-hidden=\"true\"\n    fill=\"none\"\n    focusable=\"false\"\n    height=\"1em\"\n    role=\"presentation\"\n    viewBox=\"0 0 24 24\"\n    width=\"1em\"\n    {...props}\n  >\n    <path\n      d=\"M11.5 21C16.7467 21 21 16.7467 21 11.5C21 6.25329 16.7467 2 11.5 2C6.25329 2 2 6.25329 2 11.5C2 16.7467 6.25329 21 11.5 21Z\"\n      stroke=\"currentColor\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"2\"\n    />\n    <path\n      d=\"M22 22L20 20\"\n      stroke=\"currentColor\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"2\"\n    />\n  </svg>\n);`,Ne=`import {Input} from \"@nextui-org/react\";\nimport {SearchIcon} from \"./SearchIcon\";\n\nexport default function App() {\n  return (\n    <div className=\"w-[340px] h-[240px] px-8 rounded-2xl flex justify-center items-center bg-gradient-to-tr from-pink-500 to-yellow-500 text-white shadow-lg\">\n      <Input\n        label=\"Search\"\n        isClearable\n        radius=\"lg\"\n        classNames={{\n          label: \"text-black/50 dark:text-white/90\",\n          input: [\n            \"bg-transparent\",\n            \"text-black/90 dark:text-white/90\",\n            \"placeholder:text-default-700/50 dark:placeholder:text-white/60\",\n          ],\n          innerWrapper: \"bg-transparent\",\n          inputWrapper: [\n            \"shadow-xl\",\n            \"bg-default-200/50\",\n            \"dark:bg-default/60\",\n            \"backdrop-blur-xl\",\n            \"backdrop-saturate-200\",\n            \"hover:bg-default-200/70\",\n            \"dark:hover:bg-default/70\",\n            \"group-data-[focus=true]:bg-default-200/50\",\n            \"dark:group-data-[focus=true]:bg-default/60\",\n            \"!cursor-text\",\n          ],\n        }}\n        placeholder=\"Type to search...\"\n        startContent={\n          <SearchIcon className=\"text-black/50 mb-0.5 dark:text-white/90 text-slate-400 pointer-events-none flex-shrink-0\" />\n        }\n      />\n    </div>\n  );\n}`,Ee={\"/App.jsx\":Ne,\"/SearchIcon.jsx\":ke},R={...Ee};var We=`export const SearchIcon = (props) => (\n  <svg\n    aria-hidden=\"true\"\n    fill=\"none\"\n    focusable=\"false\"\n    height=\"1em\"\n    role=\"presentation\"\n    viewBox=\"0 0 24 24\"\n    width=\"1em\"\n    {...props}\n  >\n    <path\n      d=\"M11.5 21C16.7467 21 21 16.7467 21 11.5C21 6.25329 16.7467 2 11.5 2C6.25329 2 2 6.25329 2 11.5C2 16.7467 6.25329 21 11.5 21Z\"\n      stroke=\"currentColor\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"2\"\n    />\n    <path\n      d=\"M22 22L20 20\"\n      stroke=\"currentColor\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"2\"\n    />\n  </svg>\n);`,Me=`export const CloseFilledIcon = (props) => (\n  <svg\n    aria-hidden=\"true\"\n    focusable=\"false\"\n    height=\"1em\"\n    role=\"presentation\"\n    viewBox=\"0 0 24 24\"\n    width=\"1em\"\n    {...props}\n  >\n    <path\n      d=\"M12 2a10 10 0 1010 10A10.016 10.016 0 0012 2zm3.36 12.3a.754.754 0 010 1.06.748.748 0 01-1.06 0l-2.3-2.3-2.3 2.3a.748.748 0 01-1.06 0 .754.754 0 010-1.06l2.3-2.3-2.3-2.3A.75.75 0 019.7 8.64l2.3 2.3 2.3-2.3a.75.75 0 011.06 1.06l-2.3 2.3z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);`,Pe=`import React, {forwardRef} from \"react\";\nimport {useInput} from \"@nextui-org/react\";\nimport {SearchIcon} from \"./SearchIcon\";\nimport {CloseFilledIcon} from \"./CloseFilledIcon\";\n\nconst styles = {\n  label: \"text-black/50 dark:text-white/90\",\n  input: [\n    \"bg-transparent\",\n    \"text-black/90 dark:text-white/90\",\n    \"placeholder:text-default-700/50 dark:placeholder:text-white/60\",\n  ],\n  innerWrapper: \"bg-transparent\",\n  inputWrapper: [\n    \"shadow-xl\",\n    \"bg-default-200/50\",\n    \"dark:bg-default/60\",\n    \"backdrop-blur-xl\",\n    \"backdrop-saturate-200\",\n    \"hover:bg-default-200/70\",\n    \"focus-within:!bg-default-200/50\",\n    \"dark:hover:bg-default/70\",\n    \"dark:focus-within:!bg-default/60\",\n    \"!cursor-text\",\n  ],\n};\n\nconst MyInput = forwardRef((props, ref) => {\n  const {\n    Component,\n    label,\n    domRef,\n    description,\n    isClearable,\n    startContent,\n    endContent,\n    shouldLabelBeOutside,\n    shouldLabelBeInside,\n    errorMessage,\n    getBaseProps,\n    getLabelProps,\n    getInputProps,\n    getInnerWrapperProps,\n    getInputWrapperProps,\n    getDescriptionProps,\n    getErrorMessageProps,\n    getClearButtonProps,\n  } = useInput({\n    ...props,\n    ref,\n    // this is just for the example, the props bellow should be passed by the parent component\n    label: \"Search\",\n    type: \"search\",\n    placeholder: \"Type to search...\",\n    startContent: (\n      <SearchIcon className=\"text-black/50 mb-0.5 dark:text-white/90 text-slate-400 pointer-events-none flex-shrink-0\" />\n    ),\n    // custom styles\n    classNames: {\n      ...styles,\n    },\n  });\n\n  const labelContent = <label {...getLabelProps()}>{label}</label>;\n\n  const end = React.useMemo(() => {\n    if (isClearable) {\n      return <span {...getClearButtonProps()}>{endContent || <CloseFilledIcon />}</span>;\n    }\n\n    return endContent;\n  }, [isClearable, getClearButtonProps]);\n\n  const innerWrapper = React.useMemo(() => {\n    if (startContent || end) {\n      return (\n        <div {...getInnerWrapperProps()}>\n          {startContent}\n          <input {...getInputProps()} />\n          {end}\n        </div>\n      );\n    }\n\n    return <input {...getInputProps()} />;\n  }, [startContent, end, getInputProps, getInnerWrapperProps]);\n\n  return (\n    <div className=\"w-[340px] h-[300px] px-8 rounded-2xl flex justify-center items-center bg-gradient-to-tr from-pink-500 to-yellow-500 text-white shadow-lg\">\n      <Component {...getBaseProps()}>\n        {shouldLabelBeOutside ? labelContent : null}\n        <div\n          {...getInputWrapperProps()}\n          role=\"button\"\n          onClick={() => {\n            domRef.current?.focus();\n          }}\n        >\n          {shouldLabelBeInside ? labelContent : null}\n          {innerWrapper}\n        </div>\n        {description && <div {...getDescriptionProps()}>{description}</div>}\n        {errorMessage && <div {...getErrorMessageProps()}>{errorMessage}</div>}\n      </Component>\n    </div>\n  );\n});\n\nMyInput.displayName = \"MyInput\";\n\nexport default MyInput;`,Re={\"/App.jsx\":Pe,\"/SearchIcon.jsx\":We,\"/CloseFilledIcon.jsx\":Me},j={...Re};var l={usage:f,disabled:x,readOnly:b,required:g,sizes:v,colors:C,variants:I,radius:y,labelPlacements:w,description:A,password:k,clearButton:N,startEndContent:E,errorMessage:W,regexValidation:M,controlled:P,customStyles:R,customImpl:j};var je={title:\"Input\",description:\"Input is a component that allows users to enter text. It can be used to get user inputs in forms, search fields, and more.\"};function S(n){let t={a:\"a\",blockquote:\"blockquote\",code:\"code\",h1:\"h1\",h2:\"h2\",h3:\"h3\",hr:\"hr\",li:\"li\",p:\"p\",strong:\"strong\",table:\"table\",tbody:\"tbody\",td:\"td\",th:\"th\",thead:\"thead\",tr:\"tr\",ul:\"ul\",...n.components},{CarbonAd:i,CodeDemo:r,ComponentLinks:o,ImportTabs:c,PackageManagers:p,Spacer:d}=t;return i||a(\"CarbonAd\",!0),r||a(\"CodeDemo\",!0),o||a(\"ComponentLinks\",!0),c||a(\"ImportTabs\",!0),p||a(\"PackageManagers\",!0),d||a(\"Spacer\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(t.h1,{id:\"input\",children:\"Input\"}),`\n`,(0,e.jsx)(t.p,{children:\"Input is a component that allows users to enter text. It can be used to get user inputs in forms, search fields, and more.\"}),`\n`,(0,e.jsx)(o,{component:\"input\",reactAriaHook:\"useTextField\"}),`\n`,(0,e.jsx)(t.hr,{}),`\n`,(0,e.jsx)(i,{}),`\n`,(0,e.jsx)(t.h2,{id:\"installation\",children:\"Installation\"}),`\n`,(0,e.jsx)(p,{showGlobalInstallWarning:!0,commands:{cli:\"npx nextui-cli@latest add input\",npm:\"npm install @nextui-org/input\",yarn:\"yarn add @nextui-org/input\",pnpm:\"pnpm add @nextui-org/input\",bun:\"bun add @nextui-org/input\"}}),`\n`,(0,e.jsx)(t.h2,{id:\"import\",children:\"Import\"}),`\n`,(0,e.jsx)(c,{commands:{main:'import {Input} from \"@nextui-org/react\";',individual:'import {Input} from \"@nextui-org/input\";'}}),`\n`,(0,e.jsx)(t.h2,{id:\"usage\",children:\"Usage\"}),`\n`,(0,e.jsx)(r,{title:\"Usage\",files:l.usage}),`\n`,(0,e.jsx)(t.h3,{id:\"disabled\",children:\"Disabled\"}),`\n`,(0,e.jsx)(r,{title:\"Disabled\",files:l.disabled}),`\n`,(0,e.jsx)(t.h3,{id:\"read-only\",children:\"Read Only\"}),`\n`,(0,e.jsx)(r,{title:\"Read Only\",files:l.readOnly}),`\n`,(0,e.jsx)(t.h3,{id:\"required\",children:\"Required\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"If you pass the \",(0,e.jsx)(t.code,{children:\"isRequired\"}),\" property to the input, it will have a \",(0,e.jsx)(t.code,{children:\"danger\"}),` asterisk at\nthe end of the label and the input will be required.`]}),`\n`,(0,e.jsx)(r,{title:\"Required\",files:l.required}),`\n`,(0,e.jsx)(t.h3,{id:\"sizes\",children:\"Sizes\"}),`\n`,(0,e.jsx)(r,{title:\"Sizes\",files:l.sizes}),`\n`,(0,e.jsx)(t.h3,{id:\"colors\",children:\"Colors\"}),`\n`,(0,e.jsx)(r,{title:\"Colors\",files:l.colors}),`\n`,(0,e.jsx)(t.h3,{id:\"variants\",children:\"Variants\"}),`\n`,(0,e.jsx)(r,{title:\"Variants\",files:l.variants}),`\n`,(0,e.jsx)(t.h3,{id:\"radius\",children:\"Radius\"}),`\n`,(0,e.jsx)(r,{title:\"Radius\",files:l.radius}),`\n`,(0,e.jsx)(t.h3,{id:\"label-placements\",children:\"Label Placements\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"You can change the position of the label by setting the \",(0,e.jsx)(t.code,{children:\"labelPlacement\"}),\" property to \",(0,e.jsx)(t.code,{children:\"inside\"}),\", \",(0,e.jsx)(t.code,{children:\"outside\"}),\" or \",(0,e.jsx)(t.code,{children:\"outside-left\"}),\".\"]}),`\n`,(0,e.jsx)(r,{title:\"Label Placements\",files:l.labelPlacements}),`\n`,(0,e.jsxs)(t.blockquote,{children:[`\n`,(0,e.jsxs)(t.p,{children:[(0,e.jsx)(t.strong,{children:\"Note\"}),\": If the \",(0,e.jsx)(t.code,{children:\"label\"}),\" is not passed, the \",(0,e.jsx)(t.code,{children:\"labelPlacement\"}),\" property will be \",(0,e.jsx)(t.code,{children:\"outside\"}),\" by default.\"]}),`\n`]}),`\n`,(0,e.jsx)(t.h3,{id:\"password-input\",children:\"Password Input\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"You can use the \",(0,e.jsx)(t.code,{children:\"type\"}),\" property to change the input type to \",(0,e.jsx)(t.code,{children:\"password\"}),\".\"]}),`\n`,(0,e.jsx)(r,{title:\"Password Input\",highlightedLines:\"25\",files:l.password}),`\n`,(0,e.jsx)(t.h3,{id:\"clear-button\",children:\"Clear Button\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"If you pass the \",(0,e.jsx)(t.code,{children:\"isClearable\"}),` property to the input, it will have a clear button at the\nend of the input, it will be visible when the input has a value.`]}),`\n`,(0,e.jsx)(r,{title:\"Clear Button\",highlightedLines:\"7\",files:l.clearButton}),`\n`,(0,e.jsx)(t.h3,{id:\"start--end-content\",children:\"Start & End Content\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"You can use the \",(0,e.jsx)(t.code,{children:\"startContent\"}),\" and \",(0,e.jsx)(t.code,{children:\"endContent\"}),\" properties to add content to the start and end of the input.\"]}),`\n`,(0,e.jsx)(r,{title:\"Start and End Content\",files:l.startEndContent}),`\n`,(0,e.jsx)(t.h3,{id:\"with-description\",children:\"With Description\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"You can add a description to the input by passing the \",(0,e.jsx)(t.code,{children:\"description\"}),\" property.\"]}),`\n`,(0,e.jsx)(r,{title:\"With Description\",files:l.description}),`\n`,(0,e.jsx)(t.h3,{id:\"with-error-message\",children:\"With Error Message\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"You can combine the \",(0,e.jsx)(t.code,{children:\"isInvalid\"}),\" and \",(0,e.jsx)(t.code,{children:\"errorMessage\"}),\" properties to show an invalid input. \",(0,e.jsx)(t.code,{children:\"errorMessage\"}),\" is only shown when \",(0,e.jsx)(t.code,{children:\"isInvalid\"}),\" is set to \",(0,e.jsx)(t.code,{children:\"true\"}),\".\"]}),`\n`,(0,e.jsx)(r,{title:\"With Error Message\",files:l.errorMessage}),`\n`,(0,e.jsxs)(t.p,{children:[\"Example with \",(0,e.jsx)(t.code,{children:\"regex\"}),\" email validation:\"]}),`\n`,(0,e.jsx)(r,{title:\"With Regex Validation\",files:l.regexValidation}),`\n`,(0,e.jsx)(t.h3,{id:\"controlled\",children:\"Controlled\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"You can use the \",(0,e.jsx)(t.code,{children:\"value\"}),\" and \",(0,e.jsx)(t.code,{children:\"onValueChange\"}),\" properties to control the input value.\"]}),`\n`,(0,e.jsx)(r,{title:\"Controlled\",files:l.controlled}),`\n`,(0,e.jsxs)(t.blockquote,{children:[`\n`,(0,e.jsxs)(t.p,{children:[(0,e.jsx)(t.strong,{children:\"Note\"}),\": NextUI \",(0,e.jsx)(t.code,{children:\"Input\"}),\" also supports native events like \",(0,e.jsx)(t.code,{children:\"onChange\"}),`, useful for form libraries\nsuch as `,(0,e.jsx)(t.a,{href:\"https://formik.org/\",children:\"Formik\"}),\" and \",(0,e.jsx)(t.a,{href:\"https://react-hook-form.com/\",children:\"React Hook Form\"}),\".\"]}),`\n`]}),`\n`,(0,e.jsx)(t.h2,{id:\"slots\",children:\"Slots\"}),`\n`,(0,e.jsxs)(t.ul,{children:[`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"base\"}),\": Input wrapper, it handles alignment, placement, and general appearance.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"label\"}),\": Label of the input, it is the one that is displayed above, inside or left of the input.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"mainWrapper\"}),\": Wraps the \",(0,e.jsx)(t.code,{children:\"inputWrapper\"}),\" when position is \",(0,e.jsx)(t.code,{children:\"outside\"}),\" / \",(0,e.jsx)(t.code,{children:\"outside-left\"}),\".\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"inputWrapper\"}),\": Wraps the \",(0,e.jsx)(t.code,{children:\"label\"}),\" (when it is inside) and the \",(0,e.jsx)(t.code,{children:\"innerWrapper\"}),\".\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"innerWrapper\"}),\": Wraps the \",(0,e.jsx)(t.code,{children:\"input\"}),\", the \",(0,e.jsx)(t.code,{children:\"startContent\"}),\" and the \",(0,e.jsx)(t.code,{children:\"endContent\"}),\".\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"input\"}),\": The input element.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"clearButton\"}),\": The clear button, it is at the end of the input.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"helperWrapper\"}),\": Wraps the \",(0,e.jsx)(t.code,{children:\"description\"}),\" and the \",(0,e.jsx)(t.code,{children:\"errorMessage\"}),\".\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"description\"}),\": The description of the input.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"errorMessage\"}),\": The error message of the input.\"]}),`\n`]}),`\n`,(0,e.jsx)(t.h3,{id:\"custom-styles\",children:\"Custom Styles\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"You can customize the \",(0,e.jsx)(t.code,{children:\"Input\"}),\" component by passing custom Tailwind CSS classes to the component slots.\"]}),`\n`,(0,e.jsx)(r,{title:\"Custom Styles\",highlightedLines:\"13-31\",files:l.customStyles}),`\n`,(0,e.jsx)(t.h3,{id:\"custom-implementation\",children:\"Custom Implementation\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"In case you need to customize the input even further, you can use the \",(0,e.jsx)(t.code,{children:\"useInput\"}),\" hook to create your own implementation.\"]}),`\n`,(0,e.jsx)(r,{showPreview:!1,showOpenInCodeSandbox:!0,title:\"Custom Implementation\",files:l.customImpl}),`\n`,(0,e.jsx)(d,{y:4}),`\n`,(0,e.jsx)(t.h2,{id:\"data-attributes\",children:\"Data Attributes\"}),`\n`,(0,e.jsxs)(t.p,{children:[(0,e.jsx)(t.code,{children:\"Input\"}),\" has the following attributes on the \",(0,e.jsx)(t.code,{children:\"base\"}),\" element:\"]}),`\n`,(0,e.jsxs)(t.ul,{children:[`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"data-invalid\"}),`:\nWhen the input is invalid. Based on `,(0,e.jsx)(t.code,{children:\"isInvalid\"}),\" prop.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"data-required\"}),`:\nWhen the input is required. Based on `,(0,e.jsx)(t.code,{children:\"isRequired\"}),\" prop.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"data-readonly\"}),`:\nWhen the input is readonly. Based on `,(0,e.jsx)(t.code,{children:\"isReadOnly\"}),\" prop.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"data-hover\"}),`:\nWhen the input is being hovered. Based on `,(0,e.jsx)(t.a,{href:\"https://react-spectrum.adobe.com/react-aria/useHover.html\",children:\"useHover\"})]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"data-focus\"}),`:\nWhen the input is being focused. Based on `,(0,e.jsx)(t.a,{href:\"https://react-spectrum.adobe.com/react-aria/useFocusRing.html\",children:\"useFocusRing\"}),\".\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"data-focus-within\"}),`:\nWhen the input is being focused or any of its children. Based on `,(0,e.jsx)(t.a,{href:\"https://react-spectrum.adobe.com/react-aria/useFocusWithin.html\",children:\"useFocusWithin\"}),\".\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"data-focus-visible\"}),`:\nWhen the input is being focused with the keyboard. Based on `,(0,e.jsx)(t.a,{href:\"https://react-spectrum.adobe.com/react-aria/useFocusRing.html\",children:\"useFocusRing\"}),\".\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"data-disabled\"}),`:\nWhen the input is disabled. Based on `,(0,e.jsx)(t.code,{children:\"isDisabled\"}),\" prop.\"]}),`\n`]}),`\n`,(0,e.jsx)(d,{y:4}),`\n`,(0,e.jsx)(t.h2,{id:\"accessibility\",children:\"Accessibility\"}),`\n`,(0,e.jsxs)(t.ul,{children:[`\n`,(0,e.jsxs)(t.li,{children:[\"Built with a native \",(0,e.jsx)(t.code,{children:\"<input>\"}),\" element.\"]}),`\n`,(0,e.jsx)(t.li,{children:\"Visual and ARIA labeling support.\"}),`\n`,(0,e.jsx)(t.li,{children:\"Change, clipboard, composition, selection, and input event support.\"}),`\n`,(0,e.jsx)(t.li,{children:\"Required and invalid states exposed to assistive technology via ARIA.\"}),`\n`,(0,e.jsx)(t.li,{children:\"Support for description and error message help text linked to the input via ARIA.\"}),`\n`]}),`\n`,(0,e.jsx)(d,{y:4}),`\n`,(0,e.jsx)(t.h2,{id:\"api\",children:\"API\"}),`\n`,(0,e.jsx)(t.h3,{id:\"input-props\",children:\"Input Props\"}),`\n`,(0,e.jsxs)(t.table,{children:[(0,e.jsx)(t.thead,{children:(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.th,{children:\"Attribute\"}),(0,e.jsx)(t.th,{children:\"Type\"}),(0,e.jsx)(t.th,{children:\"Description\"}),(0,e.jsx)(t.th,{children:\"Default\"})]})}),(0,e.jsxs)(t.tbody,{children:[(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"children\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"ReactNode\"})}),(0,e.jsx)(t.td,{children:\"The content of the input.\"}),(0,e.jsx)(t.td,{children:\"-\"})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"variant\"}),(0,e.jsxs)(t.td,{children:[(0,e.jsx)(t.code,{children:\"flat\"}),\" | \",(0,e.jsx)(t.code,{children:\"bordered\"}),\" | \",(0,e.jsx)(t.code,{children:\"faded\"}),\" | \",(0,e.jsx)(t.code,{children:\"underlined\"})]}),(0,e.jsx)(t.td,{children:\"The variant of the input.\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"flat\"})})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"color\"}),(0,e.jsxs)(t.td,{children:[(0,e.jsx)(t.code,{children:\"default\"}),\" | \",(0,e.jsx)(t.code,{children:\"primary\"}),\" | \",(0,e.jsx)(t.code,{children:\"secondary\"}),\" | \",(0,e.jsx)(t.code,{children:\"success\"}),\" | \",(0,e.jsx)(t.code,{children:\"warning\"}),\" | \",(0,e.jsx)(t.code,{children:\"danger\"})]}),(0,e.jsx)(t.td,{children:\"The color of the input.\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"default\"})})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"size\"}),(0,e.jsxs)(t.td,{children:[(0,e.jsx)(t.code,{children:\"sm\"}),\" | \",(0,e.jsx)(t.code,{children:\"md\"}),\" | \",(0,e.jsx)(t.code,{children:\"lg\"})]}),(0,e.jsx)(t.td,{children:\"The size of the input.\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"md\"})})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"radius\"}),(0,e.jsxs)(t.td,{children:[(0,e.jsx)(t.code,{children:\"none\"}),\" | \",(0,e.jsx)(t.code,{children:\"sm\"}),\" | \",(0,e.jsx)(t.code,{children:\"md\"}),\" | \",(0,e.jsx)(t.code,{children:\"lg\"}),\" | \",(0,e.jsx)(t.code,{children:\"full\"})]}),(0,e.jsx)(t.td,{children:\"The radius of the input.\"}),(0,e.jsx)(t.td,{children:\"-\"})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"label\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"ReactNode\"})}),(0,e.jsx)(t.td,{children:\"The content to display as the label.\"}),(0,e.jsx)(t.td,{children:\"-\"})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"value\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"string\"})}),(0,e.jsx)(t.td,{children:\"The current value of the input (controlled).\"}),(0,e.jsx)(t.td,{children:\"-\"})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"defaultValue\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"string\"})}),(0,e.jsx)(t.td,{children:\"The default value of the input (uncontrolled).\"}),(0,e.jsx)(t.td,{children:\"-\"})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"placeholder\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"string\"})}),(0,e.jsx)(t.td,{children:\"The placeholder of the input.\"}),(0,e.jsx)(t.td,{children:\"-\"})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"description\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"ReactNode\"})}),(0,e.jsx)(t.td,{children:\"A description for the input. Provides a hint such as specific requirements for what to choose.\"}),(0,e.jsx)(t.td,{children:\"-\"})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"errorMessage\"}),(0,e.jsxs)(t.td,{children:[(0,e.jsx)(t.code,{children:\"ReactNode\"}),\" | \",(0,e.jsx)(t.code,{children:\"((v: ValidationResult) => ReactNode)\"})]}),(0,e.jsxs)(t.td,{children:[\"An error message for the input. It is only shown when \",(0,e.jsx)(t.code,{children:\"isInvalid\"}),\" is set to \",(0,e.jsx)(t.code,{children:\"true\"})]}),(0,e.jsx)(t.td,{children:\"-\"})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"validate\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"(value: string) => ValidationError \\uFF5C true \\uFF5C null \\uFF5C undefined\"})}),(0,e.jsxs)(t.td,{children:[\"Validate input values when committing (e.g. on blur), returning error messages for invalid values. Validation errors are displayed upon form submission if \",(0,e.jsx)(t.code,{children:\"validationBehavior\"}),\" is set to \",(0,e.jsx)(t.code,{children:\"native\"}),\". For real-time validation, use the \",(0,e.jsx)(t.code,{children:\"isInvalid\"}),\" prop.\"]}),(0,e.jsx)(t.td,{children:\"-\"})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"validationBehavior\"}),(0,e.jsxs)(t.td,{children:[(0,e.jsx)(t.code,{children:\"native\"}),\" | \",(0,e.jsx)(t.code,{children:\"aria\"})]}),(0,e.jsx)(t.td,{children:\"Whether to use native HTML form validation to prevent form submission when the value is missing or invalid, or mark the field as required or invalid via ARIA.\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"aria\"})})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"startContent\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"ReactNode\"})}),(0,e.jsx)(t.td,{children:\"Element to be rendered in the left side of the input.\"}),(0,e.jsx)(t.td,{children:\"-\"})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"endContent\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"ReactNode\"})}),(0,e.jsx)(t.td,{children:\"Element to be rendered in the right side of the input.\"}),(0,e.jsx)(t.td,{children:\"-\"})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"labelPlacement\"}),(0,e.jsxs)(t.td,{children:[(0,e.jsx)(t.code,{children:\"inside\"}),\" | \",(0,e.jsx)(t.code,{children:\"outside\"}),\" | \",(0,e.jsx)(t.code,{children:\"outside-left\"})]}),(0,e.jsx)(t.td,{children:\"The position of the label.\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"inside\"})})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"fullWidth\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"boolean\"})}),(0,e.jsx)(t.td,{children:\"Whether the input should take up the width of its parent.\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"true\"})})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"isClearable\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"boolean\"})}),(0,e.jsx)(t.td,{children:\"Whether the input should have a clear button.\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"false\"})})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"isRequired\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"boolean\"})}),(0,e.jsx)(t.td,{children:\"Whether user input is required on the input before form submission.\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"false\"})})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"isReadOnly\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"boolean\"})}),(0,e.jsx)(t.td,{children:\"Whether the input can be selected but not changed by the user.\"}),(0,e.jsx)(t.td,{})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"isDisabled\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"boolean\"})}),(0,e.jsx)(t.td,{children:\"Whether the input is disabled.\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"false\"})})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"isInvalid\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"boolean\"})}),(0,e.jsx)(t.td,{children:\"Whether the input is invalid.\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"false\"})})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"baseRef\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"RefObject<HTMLDivElement>\"})}),(0,e.jsx)(t.td,{children:\"The ref to the base element.\"}),(0,e.jsx)(t.td,{children:\"-\"})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"validationState\"}),(0,e.jsxs)(t.td,{children:[(0,e.jsx)(t.code,{children:\"valid\"}),\" | \",(0,e.jsx)(t.code,{children:\"invalid\"})]}),(0,e.jsxs)(t.td,{children:['Whether the input should display its \"valid\" or \"invalid\" visual styling. (',(0,e.jsx)(t.strong,{children:\"Deprecated\"}),\") use \",(0,e.jsx)(t.strong,{children:\"isInvalid\"}),\" instead.\"]}),(0,e.jsx)(t.td,{children:\"-\"})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"disableAnimation\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"boolean\"})}),(0,e.jsx)(t.td,{children:\"Whether the input should be animated.\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"false\"})})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"classNames\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:'Record<\"base\"\\uFF5C \"label\"\\uFF5C \"inputWrapper\"\\uFF5C \"innerWrapper\"\\uFF5C \"mainWrapper\" \\uFF5C \"input\" \\uFF5C \"clearButton\" \\uFF5C \"helperWrapper\" \\uFF5C \"description\" \\uFF5C \"errorMessage\", string>'})}),(0,e.jsx)(t.td,{children:\"Allows to set custom class names for the Input slots.\"}),(0,e.jsx)(t.td,{children:\"-\"})]})]})]}),`\n`,(0,e.jsx)(t.h3,{id:\"input-events\",children:\"Input Events\"}),`\n`,(0,e.jsxs)(t.table,{children:[(0,e.jsx)(t.thead,{children:(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.th,{children:\"Attribute\"}),(0,e.jsx)(t.th,{children:\"Type\"}),(0,e.jsx)(t.th,{children:\"Description\"})]})}),(0,e.jsxs)(t.tbody,{children:[(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"onChange\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"React.ChangeEvent<HTMLInputElement>\"})}),(0,e.jsxs)(t.td,{children:[\"Handler that is called when the element's value changes. You can pull out the new value by accessing \",(0,e.jsx)(t.code,{children:\"event.target.value\"}),\" (string).\"]})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"onValueChange\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"(value: string) => void\"})}),(0,e.jsx)(t.td,{children:\"Handler that is called when the element's value changes.\"})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"onClear\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"() => void\"})}),(0,e.jsx)(t.td,{children:\"Handler that is called when the clear button is clicked.\"})]})]})]})]})}function L(n={}){let{wrapper:t}=n.components||{};return t?(0,e.jsx)(t,{...n,children:(0,e.jsx)(S,{...n})}):S(n)}function a(n,t){throw new Error(\"Expected \"+(t?\"component\":\"object\")+\" `\"+n+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return H(Se);})();\n;return Component;"
  },
  "_id": "docs/components/input.mdx",
  "_raw": {
    "sourceFilePath": "docs/components/input.mdx",
    "sourceFileName": "input.mdx",
    "sourceFileDir": "docs/components",
    "contentType": "mdx",
    "flattenedPath": "docs/components/input"
  },
  "type": "Doc",
  "slug": "/docs/components/input",
  "slugAsParams": "components/input",
  "url": "/docs/components/input"
}