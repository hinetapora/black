{
  "title": "Select",
  "description": "A select displays a collapsible list of options and allows a user to select one or more of them.",
  "body": {
    "raw": "\nimport {selectContent} from \"@/content/components/select\";\n\n# Select\n\nA select displays a collapsible list of options and allows a user to select one or more of them.\n\n<ComponentLinks component=\"select\" reactAriaHook=\"useSelect\" />\n\n---\n\n<CarbonAd/>\n\n## Installation\n\n<PackageManagers\n  showGlobalInstallWarning\n  commands={{\n    cli: \"npx nextui-cli@latest add select\",\n    npm: \"npm install @nextui-org/select\",\n    yarn: \"yarn add @nextui-org/select\",\n    pnpm: \"pnpm add @nextui-org/select\",\n    bun: \"bun add @nextui-org/select\"\n  }}\n/>\n\n## Import\n\nNextUI exports 3 select-related components:\n\n- **Select**: The main component, which is a wrapper for the other components.\n- **SelectSection**: The component that contains a group of select items.\n- **SelectItem**: The component that represents a select item.\n\n<ImportTabs\n  commands={{\n    main: 'import {Select, SelectSection, SelectItem} from \"@nextui-org/react\";',\n    individual: 'import {Select, SelectSection, SelectItem} from \"@nextui-org/select\";',\n  }}\n/>\n\n## Usage\n\n<CodeDemo title=\"Usage\" files={selectContent.usage} />\n\n### Dynamic items\n\nSelect follows the [Collection Components API](https://react-spectrum.adobe.com/react-stately/collections.html), accepting both static and dynamic collections.\n\n- **Static**: The usage example above shows the static implementation, which can be used when the full list of options is known ahead of time.\n- **Dynamic**: The example below can be used when the options come from an external data source such as an API call, or update over time.\n\n<CodeDemo title=\"Dynamic items\" highlightedLines=\"7\" files={selectContent.dynamic} />\n\n### Multiple Selection\n\nYou can use the `selectionMode=\"multiple\"` property to allow multiple selection.\n\n<CodeDemo title=\"Multiple Selection\" files={selectContent.multiple} />\n\n### Disabled\n\n<CodeDemo title=\"Disabled\" highlightedLines=\"8\" files={selectContent.disabled} />\n\n### Disabled Items\n\nYou can disable specific items by using the `disabledKeys` property.\n\n<CodeDemo title=\"Disabled Items\" highlightedLines=\"10\" files={selectContent.disabledItems} />\n\n### Required\n\nIf you pass the `isRequired` property to the select, it will have a `danger` asterisk at\nthe end of the label and the select will be required.\n\n<CodeDemo title=\"Required\" highlightedLines=\"8\" files={selectContent.required} />\n\n### Sizes\n\n<CodeDemo title=\"Sizes\" highlightedLines=\"13,24\" files={selectContent.sizes} />\n\n### Colors\n\n<CodeDemo title=\"Colors\" files={selectContent.colors} />\n\n### Variants\n\n<CodeDemo title=\"Variants\" files={selectContent.variants} />\n\n### Radius\n\n<CodeDemo title=\"Radius\" files={selectContent.radius} />\n\n### Label Placements\n\nYou can change the position of the label by setting the `labelPlacement` property to `inside`, `outside` or `outside-left`.\n\n<CodeDemo title=\"Label Placements\" highlightedLines=\"19,37\" files={selectContent.labelPlacements} />\n\n> **Note**: If the `label` is not passed, the `labelPlacement` property will be `outside` by default.\n\n### Start Content\n\nYou can use the `startContent` and `endContent` properties to add content to the start and end of\nthe select.\n\n<CodeDemo title=\"Start Content\" highlightedLines=\"13\" files={selectContent.startContent} />\n\n### Item Start & End Content\n\nSince the `Select` component uses the [Listbox](/docs/components/listbox) component under the hood, you can\nuse the `startContent` and `endContent` properties of the `SelectItem` component to add content to the start\nand end of the select item.\n\n<CodeDemo title=\"Item Start Content\" files={selectContent.itemStartContent} />\n\n### Custom Selector Icon\n\nBy default the select uses a `chevron-down` icon as the selector icon which rotates when the select is open. You can\ncustomize this icon by passing a custom one to the `selectorIcon` property.\n\n<CodeDemo title=\"Custom Selector Icon\" files={selectContent.customSelectorIcon} />\n\n> **Note**: Use the `disableSelectorIconRotation` property to disable the rotation of the icon.\n\n### Without Scroll Shadow\n\nSelect component uses the [ScrollShadow](/docs/components/scroll-shadow) under the hood to show a shadow when the select content is scrollable.\nYou can disable this shadow by passing using the `scrollShadowProps` property.\n\n<CodeDemo title=\"Without Scroll Shadow\" files={selectContent.withoutScrollShadow} />\n\n> **Note**: You can also use the `showScrollIndicators` property to disable the scroll indicators.\n\n### With Description\n\nYou can add a description to the select by passing the `description` property.\n\n<CodeDemo title=\"With Description\" files={selectContent.description} />\n\n### With Error Message\n\nYou can combine the `isInvalid` and `errorMessage` properties to show an invalid select.\n\n<CodeDemo title=\"With Error Message\" files={selectContent.errorMessage} />\n\n### Controlled\n\nYou can use the `selectedKeys` and `onSelectionChange` / `onChange` properties to control the select value.\n\nUsing `onSelectionChange`:\n\n<CodeDemo title=\"Controlled with onSelectionChange\" files={selectContent.singleControlled} />\n\nUsing `onChange`:\n\n<CodeDemo title=\"Controlled with onChange\" files={selectContent.singleControlledOnChange} />\n\n### Controlling the open state\n\nYou can control the open state of the select by using the `isOpen` and `onOpenChange` / `onClose` properties.\n\n<CodeDemo title=\"Controlling the open state\" files={selectContent.openState} />\n\n### Custom Items\n\nYou can customize the select items by modifying the `SelectItem` children.\n\n<CodeDemo title=\"Custom Items\" files={selectContent.customItems} />\n\n### Custom Render Value\n\nBy default the select will render the selected item's text value, but you can customize this by passing a `renderValue` function.\n\n<CodeDemo title=\"Custom Render Value\" files={selectContent.customRenderValue} />\n\nThe `renderValue` function receives the selected items as a parameter and must return a\n`ReactNode`. Check the [Render Value Function](#render-value-function) section for more details.\n\n### Asynchronous Loading\n\nSelect supports asynchronous loading, in the example below we are using a custom hook to fetch the [Pokemon API](https://pokeapi.co/api/v2/pokemon) data in combination with the `useInfiniteScroll` hook to load more data when the user reaches the end of the list.\n\nThe `isLoading` prop is used to show a loading indicator instead of the selector icon when the data is being fetched.\n\n<PackageManagers\n  commands={{\n    npm: \"npm install @nextui-org/use-infinite-scroll\",\n    yarn: \"yarn add @nextui-org/use-infinite-scroll\",\n    pnpm: \"pnpm add @nextui-org/use-infinite-scroll\",\n  }}\n/>\n\n```jsx\nimport {useInfiniteScroll} from \"@nextui-org/use-infinite-scroll\";\n```\n\n<Spacer y={2} />\n\n<CodeDemo\n  asIframe\n  typescriptStrict={true}\n  title=\"Asynchronous Loading\"\n  hideWindowActions={true}\n  resizeEnabled={false}\n  displayMode=\"always\"\n  files={selectContent.asyncLoadingItems}\n  previewHeight=\"400px\"\n  iframeSrc=\"/examples/select/async-items-loading\"\n/>\n\n### With Sections\n\nYou can use the `SelectSection` component to group select items.\n\n<CodeDemo title=\"With Sections\" files={selectContent.sections} />\n\n### Custom Sections Style\n\nYou can customize the sections style by using the `classNames` property of the `SelectSection` component.\n\n<CodeDemo title=\"Custom Sections Style\" files={selectContent.customSectionsStyle} />\n\n### Multiple Select Controlled\n\nYou can use the same properties as the single select to control the multiple select, `selectedKeys` and `onSelectionChange` / `onChange`.\n\nUsing `onSelectionChange`:\n\n<CodeDemo\n  title=\"Multiple Selection Controlled with onSelectionChange\"\n  files={selectContent.multipleControlled}\n/>\n\nUsing `onChange`:\n\n<CodeDemo\n  title=\"Multiple Selection Controlled with onChange\"\n  files={selectContent.multipleControlledOnChange}\n/>\n\n### Multiple With Chips\n\nYou can render any component as the select value by using the `renderValue` property. In this example we are\nusing the [Chip](/docs/components/chip) component to render the selected items.\n\n<CodeDemo title=\"Multiple Selection with Chips\" files={selectContent.multipleWithChips} />\n\n> **Note**: Make sure to pass the `isMultiline` property to the `Select` component to allow the chips to wrap.\n\nThe `renderValue` function receives the selected items as a parameter and must return a\n`ReactNode`. Check the [Render Value Function](#render-value-function) section for more details.\n\n### Customizing the select\n\nYou can customize any slot of the select by using the `classNames` property. Select\ncomponent also provides the [popoverProps](/docs/components/popover#api) and [listboxProps](/docs/components/listbox#api) properties to customize\nthe popover and listbox components.\n\n<CodeDemo title=\"Custom Styles\" files={selectContent.customStyles} />\n\n## Slots\n\n- **base**: The main wrapper of the select. This wraps the rest of the slots.\n- **label**: The label of the select.\n- **mainWrapper**: Wraps the `helperWrapper` and the `trigger` slots.\n- **trigger**: The trigger of the select. This wraps the label the inner wrapper and the selector icon.\n- **innerWrapper**: The wrapper of the select content. This wraps the start/end content and the select value.\n- **selectorIcon**: The selector icon of the select. This is the icon that rotates when the select is open (`data-open`).\n- **value**: The select value. This is also the slot that wraps the `renderValue` function result.\n- **listboxWrapper**: The wrapper of the listbox. This wraps the listbox component, this slot is used on top of the scroll shadow component.\n- **listbox**: The listbox component. This is the component that wraps the select items.\n- **popoverContent**: The popover content slot. Use this to modify the popover content styles.\n- **helperWrapper**: The wrapper of the helper text. This wraps the helper text and the error message.\n- **description**: The description of the select.\n- **errorMessage**: The error message of the select.\n\n## Data Attributes\n\n`Select` has the following attributes on the `base` element:\n\n- **data-filled**:\n  Indicates if the select has a value, is focused, has start/end content or is open.\n- **data-has-value**:\n  Indicates if the select has selected item(s).\n- **data-has-label**:\n  Indicates if the select has a label. Based on `label` prop.\n- **data-has-helper**:\n  Indicates if the select has helper text. Based on `errorMessage` or `description` prop.\n- **data-invalid**:\n  Indicates if the select is invalid. Based on `isInvalid` prop.\n\n`Select` has the following attributes on the `trigger` element:\n\n- **data-open**:\n  Indicates if the select is open.\n- **data-disabled**:\n  When the select trigger is disabled. Based on select `isDisabled` prop.\n- **data-focus**:\n  When the select trigger is being focused. Based on [useFocusRing](https://react-spectrum.adobe.com/react-aria/useFocusRing.html).\n- **data-focus-visible**:\n  When the select trigger is being focused with the keyboard. Based on [useFocusRing](https://react-spectrum.adobe.com/react-aria/useFocusRing.html).\n- **data-pressed**:\n  When the select trigger is pressed. Based on [usePress](https://react-spectrum.adobe.com/react-aria/usePress.html)\n- **data-hover**:\n  When the select trigger is being hovered. Based on [useHover](https://react-spectrum.adobe.com/react-aria/useHover.html)\n\n`Select` has the following attributes on the `selectorIcon` element:\n\n- **data-open**:\n  Indicates if the select is open.\n\n`SelectItem` has the following attributes on the `base` element:\n\n- **data-disabled**:\n  When the select item is disabled. Based on select `disabledKeys` prop.\n- **data-selected**:\n  When the select item is selected. Based on select `selectedKeys` prop.\n- **data-hover**:\n  When the select item is being hovered. Based on [useHover](https://react-spectrum.adobe.com/react-aria/useHover.html)\n- **data-pressed**:\n  When the select item is pressed. Based on [usePress](https://react-spectrum.adobe.com/react-aria/usePress.html)\n- **data-focus**:\n  When the select item is being focused. Based on [useFocusRing](https://react-spectrum.adobe.com/react-aria/useFocusRing.html).\n- **data-focus-visible**:\n  When the select item is being focused with the keyboard. Based on [useFocusRing](https://react-spectrum.adobe.com/react-aria/useFocusRing.html).\n\n<Spacer y={4} />\n\n## Accessibility\n\n- Exposed to assistive technology as a button with a listbox popup using ARIA (combined with [Listbox](/docs/components/listbox)).\n- Support for selecting a single option.\n- Support for selecting multiple options.\n- Support for disabled options.\n- Support for sections.\n- Labeling support for accessibility.\n- Support for description and error message help text linked to the input via ARIA.\n- Support for mouse, touch, and keyboard interactions.\n- Tab stop focus management.\n- Keyboard support for opening the listbox using the arrow keys, including automatically focusing the first or last item accordingly.\n- Typeahead to allow selecting options by typing text, even without opening the listbox.\n- Browser autofill integration via a hidden native `<select>` element.\n- Support for mobile form navigation via software keyboard.\n- Mobile screen reader listbox dismissal support.\n\n<Spacer y={4} />\n\n## API\n\n### Select Props\n\n| Attribute                   | Type                                                                                                                                                                                                                   | Description                                                                                                            | Default            |\n| --------------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ---------------------------------------------------------------------------------------------------------------------- | ------------------ |\n| children\\*                  | `ReactNode[]`                                                                                                                                                                                                          | The children to render. Usually a list of `SelectItem` and `SelectSection` elements.                                   | -                  |\n| items                       | [`Iterable<T>`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols)                                                                                                                 | Item objects in the select. (dynamic)                                                                                  | -                  |\n| selectionMode               | `single` \\| `multiple`                                                                                                                                                                                                 | The type of selection that is allowed in the collection.                                                               | -                  |\n| selectedKeys                | `all` \\| `Iterable<React.Key>`                                                                                                                                                                                                | The currently selected keys in the collection (controlled).                                                            | -                  |\n| disabledKeys                | `Iterable<React.Key>`                                                                                                                                                                                                | The item keys that are disabled. These items cannot be selected, focused, or otherwise interacted with.                | -                  |\n| defaultSelectedKeys         | `all` \\| `Iterable<React.Key>`                                                                                                                                                                                                 | The initial selected keys in the collection (uncontrolled).                                                            | -                  |\n| variant                     | `flat` \\| `bordered` \\| `faded` \\| `underlined`                                                                                                                                                                        | The variant of the select.                                                                                             | `flat`             |\n| color                       | `default` \\| `primary` \\| `secondary` \\| `success` \\| `warning` \\| `danger`                                                                                                                                            | The color of the select.                                                                                               | `default`          |\n| size                        | `sm` \\| `md` \\| `lg`                                                                                                                                                                                                   | The size of the select.                                                                                                | `md`               |\n| radius                      | `none` \\| `sm` \\| `md` \\| `lg` \\| `full`                                                                                                                                                                               | The radius of the select.                                                                                              | -                  |\n| placeholder                 | `string`                                                                                                                                                                                                               | The placeholder of the select.                                                                                         | `Select an option` |\n| labelPlacement              | `inside` \\| `outside` \\| `outside-left`                                                                                                                                                                                | The position of the label.                                                                                             | `inside`           |\n| label                       | `ReactNode`                                                                                                                                                                                                            | The content to display as the label.                                                                                   | -                  |\n| description                 | `ReactNode`                                                                                                                                                                                                            | A description for the select. Provides a hint such as specific requirements for what to choose.                        | -                  |\n| errorMessage                | `ReactNode` \\| `((v: ValidationResult) => ReactNode)`                                                                                                                                                                  | An error message for the select.                                                                                       | -                  |\n| startContent                | `ReactNode`                                                                                                                                                                                                            | Element to be rendered in the left side of the select.                                                                 | -                  |\n| endContent                  | `ReactNode`                                                                                                                                                                                                            | Element to be rendered in the right side of the select.                                                                | -                  |\n| selectorIcon                | `ReactNode`                                                                                                                                                                                                            | Element to be rendered as the selector icon.                                                                           | -                  |\n| scrollRef                   | `React.RefObject<HTMLElement>`                                                                                                                                                                                         | A ref to the scrollable element.                                                                                       | -                  |\n| spinnerRef                  | `React.RefObject<HTMLElement>`                                                                                                                                                                                         | A ref to the spinner element.                                                                                          | -                  |\n| fullWidth                   | `boolean`                                                                                                                                                                                                              | Whether the select should take up the width of its parent.                                                             | `true`             |\n| isOpen                      | `boolean`                                                                                                                                                                                                              | Whether the select is open by default (controlled).                                                                    | -                  |\n| defaultOpen                 | `boolean`                                                                                                                                                                                                              | Whether the select is open by default (uncontrolled).                                                                  | -                  |\n| isRequired                  | `boolean`                                                                                                                                                                                                              | Whether user select is required on the select before form submission.                                                  | `false`            |\n| isDisabled                  | `boolean`                                                                                                                                                                                                              | Whether the select is disabled.                                                                                        | `false`            |\n| isMultiline                 | `boolean`                                                                                                                                                                                                              | Whether the select should allow multiple lines of text.                                                                | `false`            |\n| isInvalid                   | `boolean`                                                                                                                                                                                                              | Whether the select is invalid.                                                                                         | `false`            |\n| validationState             | `valid` \\| `invalid`                                                                                                                                                                                                   | Whether the select should display its \"valid\" or \"invalid\" visual styling. (**Deprecated**) use **isInvalid** instead. | -                  |\n| showScrollIndicators        | `boolean`                                                                                                                                                                                                              | Whether the select should show scroll indicators when the listbox is scrollable.                                       | `true`             |\n| autoFocus                   | `boolean`                                                                                                                                                                                                              | Whether the select should be focused on the first mount.                                                               | `false`            |\n| disallowEmptySelection      | `boolean`                                                                                                                                                                                                              | Whether the collection allows empty selection.                                                                         | `false`            |\n| disableAnimation            | `boolean`                                                                                                                                                                                                              | Whether the select should be animated.                                                                                 | `true`             |\n| disableSelectorIconRotation | `boolean`                                                                                                                                                                                                              | Whether the select should disable the rotation of the selector icon.                                                   | `false`            |\n| popoverProps                | [PopoverProps](/docs/components/popover#api)                                                                                                                                                                           | Props to be passed to the popover component.                                                                           | -                  |\n| listboxProps                | [ListboxProps](/docs/components/listbox#api)                                                                                                                                                                           | Props to be passed to the listbox component.                                                                           | -                  |\n| scrollShadowProps           | [ScrollShadowProps](/docs/components/scroll-shadow#api)                                                                                                                                                                | Props to be passed to the scroll shadow component.                                                                     | -                  |\n| classNames                  | `Record<\"base\"｜ \"label\"｜ \"trigger\"｜ \"mainWrapper\" ｜ \"innerWrapper\"｜ \"selectorIcon\" ｜ \"value\" ｜ \"listboxWrapper\"｜ \"listbox\" ｜ \"popoverContent\" ｜ \"helperWrapper\" ｜ \"description\" ｜ \"errorMessage\", string>` | Allows to set custom class names for the Select slots.                                                                 | -                  |\n\n### Select Events\n\n| Attribute         | Type                                          | Description                                                                          |\n| ----------------- | --------------------------------------------- | ------------------------------------------------------------------------------------ |\n| onClose           | `() => void`                                  | Callback fired when the select popover is closed.                                    |\n| onOpenChange      | `(isOpen: boolean) => void`                   | Callback fired when the select popover is opened or closed.                          |\n| onSelectionChange | `(keys: \"all\" \\| Set<React.Key> & {anchorKey?: string; currentKey?: string}) => void`                 | Callback fired when the selected keys change.                                        |\n| onChange          | `React.ChangeEvent<HTMLSelectElement>`        | Native select change event, fired when the selected value changes.                   |\n| renderValue       | [RenderValueFunction](#render-value-function) | Function to render the value of the select. It renders the selected item by default. |\n\n---\n\n### SelectItem Props\n\nCheck the [ListboxItem](/docs/components/listbox#listboxitem-props) props.\n\n### SelectItem Events\n\nCheck the [ListboxItem](/docs/components/listbox#listboxitem-events) events.\n\n### SelectSection Props\n\nCheck the [ListboxSection](/docs/components/listbox#listboxsection-props) props.\n\n---\n\n### Types\n\n#### Render Value Function\n\nThe `T` type is the type of the data passed to the select `items`.\n\n```tsx\nexport type SelectedItemProps<T> = {\n  /** A unique key for the item. */\n  key?: Key;\n  /** The props passed to the item. */\n  props?: Record<string, any>;\n  /** The item data. */\n  data?: T | null;\n  /** An accessibility label for this item. */\n  \"aria-label\"?: string;\n  /** The rendered contents of this item (e.g. JSX). */\n  rendered?: ReactNode;\n  /** A string value for this item, used for features like typeahead. */\n  textValue?: string;\n  /** The type of item this item represents. */\n  type?: string;\n};\n\ntype SelectedItems<T> = Array<SelectedItemProps<T>>;\n\nrenderValue: (items: SelectedItems<T>) => ReactNode;\n```\n",
    "code": "var Component=(()=>{var X=Object.create;var c=Object.defineProperty;var ee=Object.getOwnPropertyDescriptor;var te=Object.getOwnPropertyNames;var ae=Object.getPrototypeOf,le=Object.prototype.hasOwnProperty;var ne=(n,t)=>()=>(t||n((t={exports:{}}).exports,t),t.exports),ie=(n,t)=>{for(var i in t)c(n,i,{get:t[i],enumerable:!0})},h=(n,t,i,a)=>{if(t&&typeof t==\"object\"||typeof t==\"function\")for(let o of te(t))!le.call(n,o)&&o!==i&&c(n,o,{get:()=>t[o],enumerable:!(a=ee(t,o))||a.enumerable});return n};var oe=(n,t,i)=>(i=n!=null?X(ae(n)):{},h(t||!n||!n.__esModule?c(i,\"default\",{value:n,enumerable:!0}):i,n)),re=n=>h(c({},\"__esModule\",{value:!0}),n);var u=ne((_t,p)=>{p.exports=_jsx_runtime});var Yt={};ie(Yt,{default:()=>$,frontmatter:()=>Ut});var e=oe(u());var se=`export const animals = [\n  {key: \"cat\", label: \"Cat\"},\n  {key: \"dog\", label: \"Dog\"},\n  {key: \"elephant\", label: \"Elephant\"},\n  {key: \"lion\", label: \"Lion\"},\n  {key: \"tiger\", label: \"Tiger\"},\n  {key: \"giraffe\", label: \"Giraffe\"},\n  {key: \"dolphin\", label: \"Dolphin\"},\n  {key: \"penguin\", label: \"Penguin\"},\n  {key: \"zebra\", label: \"Zebra\"},\n  {key: \"shark\", label: \"Shark\"},\n  {key: \"whale\", label: \"Whale\"},\n  {key: \"otter\", label: \"Otter\"},\n  {key: \"crocodile\", label: \"Crocodile\"}\n];`,ce=`import {Select, SelectItem} from \"@nextui-org/react\";\nimport {animals} from \"./data\";\n\nexport default function App() {\n  return (\n    <div className=\"flex w-full flex-wrap md:flex-nowrap gap-4\">\n      <Select \n        label=\"Select an animal\" \n        className=\"max-w-xs\" \n      >\n        {animals.map((animal) => (\n          <SelectItem key={animal.key}>\n            {animal.label}\n          </SelectItem>\n        ))}\n      </Select>\n      <Select\n        label=\"Favorite Animal\"\n        placeholder=\"Select an animal\"\n        className=\"max-w-xs\"\n      >\n        {animals.map((animal) => (\n          <SelectItem key={animal.key}>\n            {animal.label}\n          </SelectItem>\n        ))}\n      </Select>\n    </div>\n  );\n}`,de={\"/App.jsx\":ce,\"/data.js\":se},f={...de};var me=`export const animals = [\n  {key: \"cat\", label: \"Cat\"},\n  {key: \"dog\", label: \"Dog\"},\n  {key: \"elephant\", label: \"Elephant\"},\n  {key: \"lion\", label: \"Lion\"},\n  {key: \"tiger\", label: \"Tiger\"},\n  {key: \"giraffe\", label: \"Giraffe\"},\n  {key: \"dolphin\", label: \"Dolphin\"},\n  {key: \"penguin\", label: \"Penguin\"},\n  {key: \"zebra\", label: \"Zebra\"},\n  {key: \"shark\", label: \"Shark\"},\n  {key: \"whale\", label: \"Whale\"},\n  {key: \"otter\", label: \"Otter\"},\n  {key: \"crocodile\", label: \"Crocodile\"}\n];`,he=`import {Select, SelectItem} from \"@nextui-org/react\";\nimport {animals} from \"./data\";\n\nexport default function App() {\n  return (\n    <Select\n      items={animals}\n      label=\"Favorite Animal\"\n      placeholder=\"Select an animal\"\n      className=\"max-w-xs\"\n    >\n      {(animal) => <SelectItem>{animal.label}</SelectItem>}\n    </Select>\n  );\n}`,pe={\"/App.jsx\":he,\"/data.js\":me},g={...pe};var ue=`export const animals = [\n  {key: \"cat\", label: \"Cat\"},\n  {key: \"dog\", label: \"Dog\"},\n  {key: \"elephant\", label: \"Elephant\"},\n  {key: \"lion\", label: \"Lion\"},\n  {key: \"tiger\", label: \"Tiger\"},\n  {key: \"giraffe\", label: \"Giraffe\"},\n  {key: \"dolphin\", label: \"Dolphin\"},\n  {key: \"penguin\", label: \"Penguin\"},\n  {key: \"zebra\", label: \"Zebra\"},\n  {key: \"shark\", label: \"Shark\"},\n  {key: \"whale\", label: \"Whale\"},\n  {key: \"otter\", label: \"Otter\"},\n  {key: \"crocodile\", label: \"Crocodile\"}\n];`,fe=`import {Select, SelectItem} from \"@nextui-org/react\";\nimport {animals} from \"./data\";\n\nexport default function App() {\n  return (\n    <Select\n      isDisabled\n      label=\"Favorite Animal\"\n      placeholder=\"Select an animal\"\n      defaultSelectedKeys={[\"cat\"]}\n      className=\"max-w-xs\"\n    >\n      {animals.map((animal) => (\n        <SelectItem key={animal.key}>\n          {animal.label}\n        </SelectItem>\n      ))}\n    </Select>\n  );\n}`,ge={\"/App.jsx\":fe,\"/data.js\":ue},b={...ge};var be=`export const animals = [\n  {key: \"cat\", label: \"Cat\"},\n  {key: \"dog\", label: \"Dog\"},\n  {key: \"elephant\", label: \"Elephant\"},\n  {key: \"lion\", label: \"Lion\"},\n  {key: \"tiger\", label: \"Tiger\"},\n  {key: \"giraffe\", label: \"Giraffe\"},\n  {key: \"dolphin\", label: \"Dolphin\"},\n  {key: \"penguin\", label: \"Penguin\"},\n  {key: \"zebra\", label: \"Zebra\"},\n  {key: \"shark\", label: \"Shark\"},\n  {key: \"whale\", label: \"Whale\"},\n  {key: \"otter\", label: \"Otter\"},\n  {key: \"crocodile\", label: \"Crocodile\"}\n];`,ye=`import {Select, SelectItem} from \"@nextui-org/react\";\nimport {animals} from \"./data\";\n\nexport default function App() {\n  return (\n    <Select\n      label=\"Favorite Animal\"\n      placeholder=\"Select an animal\"\n      disabledKeys={[\"zebra\", \"tiger\", \"lion\", \"elephant\", \"crocodile\", \"whale\"]}\n      className=\"max-w-xs\"\n    >\n      {animals.map((animal) => (\n        <SelectItem key={animal.key}>\n          {animal.label}\n        </SelectItem>\n      ))}\n    </Select>\n  );\n}`,Se={\"/App.jsx\":ye,\"/data.js\":be},y={...Se};var ke=`export const animals = [\n  {key: \"cat\", label: \"Cat\"},\n  {key: \"dog\", label: \"Dog\"},\n  {key: \"elephant\", label: \"Elephant\"},\n  {key: \"lion\", label: \"Lion\"},\n  {key: \"tiger\", label: \"Tiger\"},\n  {key: \"giraffe\", label: \"Giraffe\"},\n  {key: \"dolphin\", label: \"Dolphin\"},\n  {key: \"penguin\", label: \"Penguin\"},\n  {key: \"zebra\", label: \"Zebra\"},\n  {key: \"shark\", label: \"Shark\"},\n  {key: \"whale\", label: \"Whale\"},\n  {key: \"otter\", label: \"Otter\"},\n  {key: \"crocodile\", label: \"Crocodile\"}\n];`,ve=`import {Select, SelectItem} from \"@nextui-org/react\";\nimport {animals} from \"./data\";\n\nexport default function App() {\n  return (\n    <Select\n      isRequired\n      label=\"Favorite Animal\"\n      placeholder=\"Select an animal\"\n      defaultSelectedKeys={[\"cat\"]}\n      className=\"max-w-xs\"\n    >\n      {animals.map((animal) => (\n        <SelectItem key={animal.key}>\n          {animal.label}\n        </SelectItem>\n      ))}\n    </Select>\n  );\n}`,xe={\"/App.jsx\":ve,\"/data.js\":ke},S={...xe};var Ie=`export const animals = [\n  {key: \"cat\", label: \"Cat\"},\n  {key: \"dog\", label: \"Dog\"},\n  {key: \"elephant\", label: \"Elephant\"},\n  {key: \"lion\", label: \"Lion\"},\n  {key: \"tiger\", label: \"Tiger\"},\n  {key: \"giraffe\", label: \"Giraffe\"},\n  {key: \"dolphin\", label: \"Dolphin\"},\n  {key: \"penguin\", label: \"Penguin\"},\n  {key: \"zebra\", label: \"Zebra\"},\n  {key: \"shark\", label: \"Shark\"},\n  {key: \"whale\", label: \"Whale\"},\n  {key: \"otter\", label: \"Otter\"},\n  {key: \"crocodile\", label: \"Crocodile\"}\n];`,we=`import {Select, SelectItem} from \"@nextui-org/react\";\nimport {animals} from \"./data\";\n\nexport default function App() {\n  const sizes = [\"sm\", \"md\", \"lg\"];\n\n  return (\n    <div className=\"w-full flex flex-col gap-4\">\n      {sizes.map((size) => (\n        <div key={size} className=\"flex w-full flex-wrap md:flex-nowrap mb-6 md:mb-0 gap-4\">\n          <Select \n            size={size}\n            label=\"Select an animal\" \n            className=\"max-w-xs\" \n          >\n            {animals.map((animal) => (\n              <SelectItem key={animal.key}>\n                {animal.label}\n              </SelectItem>\n            ))}\n          </Select>\n          <Select\n            size={size}\n            label=\"Favorite Animal\"\n            placeholder=\"Select an animal\"\n            className=\"max-w-xs\"\n          >\n            {animals.map((animal) => (\n              <SelectItem key={animal.key}>\n                {animal.label}\n              </SelectItem>\n            ))}\n          </Select>\n        </div>\n      ))}  \n    </div>  \n  );\n}`,Ae={\"/App.jsx\":we,\"/data.js\":Ie},k={...Ae};var Ce=`export const animals = [\n  {key: \"cat\", label: \"Cat\"},\n  {key: \"dog\", label: \"Dog\"},\n  {key: \"elephant\", label: \"Elephant\"},\n  {key: \"lion\", label: \"Lion\"},\n  {key: \"tiger\", label: \"Tiger\"},\n  {key: \"giraffe\", label: \"Giraffe\"},\n  {key: \"dolphin\", label: \"Dolphin\"},\n  {key: \"penguin\", label: \"Penguin\"},\n  {key: \"zebra\", label: \"Zebra\"},\n  {key: \"shark\", label: \"Shark\"},\n  {key: \"whale\", label: \"Whale\"},\n  {key: \"otter\", label: \"Otter\"},\n  {key: \"crocodile\", label: \"Crocodile\"}\n];`,je=`import {Select, SelectItem} from \"@nextui-org/react\";\nimport {animals} from \"./data\";\n\nexport default function App() {\n  const colors = [\n    \"default\",\n    \"primary\",\n    \"secondary\",\n    \"success\",\n    \"warning\",\n    \"danger\",\n  ];\n\n  return (\n    <div className=\"w-full flex flex-row flex-wrap gap-4\">\n      {colors.map((color) => (\n        <Select\n          key={color}\n          color={color}\n          label=\"Favorite Animal\"\n          placeholder=\"Select an animal\"\n          defaultSelectedKeys={[\"cat\"]}\n          className=\"max-w-xs\"\n        >\n          {animals.map((animal) => (\n            <SelectItem key={animal.key}>\n              {animal.label}\n            </SelectItem>\n          ))}\n        </Select>\n      ))}  \n    </div>  \n  );\n}`,Ne={\"/App.jsx\":je,\"/data.js\":Ce},v={...Ne};var Me=`export const animals = [\n  {key: \"cat\", label: \"Cat\"},\n  {key: \"dog\", label: \"Dog\"},\n  {key: \"elephant\", label: \"Elephant\"},\n  {key: \"lion\", label: \"Lion\"},\n  {key: \"tiger\", label: \"Tiger\"},\n  {key: \"giraffe\", label: \"Giraffe\"},\n  {key: \"dolphin\", label: \"Dolphin\"},\n  {key: \"penguin\", label: \"Penguin\"},\n  {key: \"zebra\", label: \"Zebra\"},\n  {key: \"shark\", label: \"Shark\"},\n  {key: \"whale\", label: \"Whale\"},\n  {key: \"otter\", label: \"Otter\"},\n  {key: \"crocodile\", label: \"Crocodile\"}\n];`,Te=`import {Select, SelectItem} from \"@nextui-org/react\";\nimport {animals} from \"./data\";\n\nexport default function App() {\n  const variants = [\"flat\", \"bordered\", \"underlined\", \"faded\"];\n\n  return (\n    <div className=\"w-full flex flex-col gap-4\">\n      {variants.map((variant) => (\n        <div key={variant} className=\"flex w-full flex-wrap md:flex-nowrap mb-6 md:mb-0 gap-4\">\n          <Select \n            variant={variant}\n            label=\"Select an animal\" \n            className=\"max-w-xs\" \n          >\n            {animals.map((animal) => (\n              <SelectItem key={animal.key}>\n                {animal.label}\n              </SelectItem>\n            ))}\n          </Select>\n          <Select\n            variant={variant}\n            label=\"Favorite Animal\"\n            placeholder=\"Select an animal\"\n            className=\"max-w-xs\"\n          >\n            {animals.map((animal) => (\n              <SelectItem key={animal.key}>\n                {animal.label}\n              </SelectItem>\n            ))}\n          </Select>\n        </div>\n      ))}  \n    </div>  \n  );\n}`,Pe={\"/App.jsx\":Te,\"/data.js\":Me},x={...Pe};var De=`export const animals = [\n  {key: \"cat\", label: \"Cat\"},\n  {key: \"dog\", label: \"Dog\"},\n  {key: \"elephant\", label: \"Elephant\"},\n  {key: \"lion\", label: \"Lion\"},\n  {key: \"tiger\", label: \"Tiger\"},\n  {key: \"giraffe\", label: \"Giraffe\"},\n  {key: \"dolphin\", label: \"Dolphin\"},\n  {key: \"penguin\", label: \"Penguin\"},\n  {key: \"zebra\", label: \"Zebra\"},\n  {key: \"shark\", label: \"Shark\"},\n  {key: \"whale\", label: \"Whale\"},\n  {key: \"otter\", label: \"Otter\"},\n  {key: \"crocodile\", label: \"Crocodile\"}\n];`,Le=`import {Select, SelectItem} from \"@nextui-org/react\";\nimport {animals} from \"./data\";\n\nexport default function App() {\n  const radius = [\n    \"full\",\n    \"lg\",\n    \"md\",\n    \"sm\",\n    \"none\",\n  ];\n\n  return (\n    <div className=\"w-full flex flex-row flex-wrap gap-4\">\n      {radius.map((r) => (\n        <Select\n          key={r}\n          radius={r}\n          label=\"Favorite Animal\"\n          placeholder=\"Select an animal\"\n          defaultSelectedKeys={[\"cat\"]}\n          className=\"max-w-[45%]\"\n        >\n          {animals.map((animal) => (\n            <SelectItem key={animal.key}>\n              {animal.label}\n            </SelectItem>\n          ))}\n        </Select>\n      ))}  \n    </div>  \n  );\n}`,Re={\"/App.jsx\":Le,\"/data.js\":De},I={...Re};var Oe=`export const animals = [\n  {key: \"cat\", label: \"Cat\"},\n  {key: \"dog\", label: \"Dog\"},\n  {key: \"elephant\", label: \"Elephant\"},\n  {key: \"lion\", label: \"Lion\"},\n  {key: \"tiger\", label: \"Tiger\"},\n  {key: \"giraffe\", label: \"Giraffe\"},\n  {key: \"dolphin\", label: \"Dolphin\"},\n  {key: \"penguin\", label: \"Penguin\"},\n  {key: \"zebra\", label: \"Zebra\"},\n  {key: \"shark\", label: \"Shark\"},\n  {key: \"whale\", label: \"Whale\"},\n  {key: \"otter\", label: \"Otter\"},\n  {key: \"crocodile\", label: \"Crocodile\"}\n];`,ze=`import {Select, SelectItem} from \"@nextui-org/react\";\nimport {animals} from \"./data\";\n\nexport default function App() {\n  const placements = [\n    \"inside\",\n    \"outside\",\n    \"outside-left\",\n  ];\n\n  return (\n    <div className=\"w-full flex flex-col gap-4\">\n      <div className=\"flex flex-col gap-2\">\n        <h3 className=\"text-default-500 text-small\">Without placeholder</h3>\n        <div className=\"flex w-full flex-wrap items-end md:flex-nowrap mb-6 md:mb-0 gap-4\">\n          {placements.map((placement) => (\n            <Select\n              labelPlacement={placement}\n              label=\"Favorite Animal\"\n              className=\"max-w-xs\"\n            >\n              {animals.map((animal) => (\n                <SelectItem key={animal.key}>\n                  {animal.label}\n                </SelectItem>\n              ))}\n            </Select>\n          ))}\n        </div>\n      </div>  \n      <div className=\"flex flex-col gap-2\">\n        <h3 className=\"text-default-500 text-small\">With placeholder</h3>\n        <div className=\"flex w-full flex-wrap items-end md:flex-nowrap mb-6 md:mb-0 gap-4\">\n          {placements.map((placement) => (\n            <Select\n              labelPlacement={placement}\n              label=\"Favorite Animal\"\n              placeholder=\"Select an animal\"\n              className=\"max-w-xs\"\n            >\n              {animals.map((animal) => (\n                <SelectItem key={animal.key}>\n                  {animal.label}\n                </SelectItem>\n              ))}\n            </Select>\n          ))}\n        </div>\n      </div>  \n    </div>  \n  );\n}`,We={\"/App.jsx\":ze,\"/data.js\":Oe},w={...We};var Fe=`export const animals = [\n  {key: \"cat\", label: \"Cat\"},\n  {key: \"dog\", label: \"Dog\"},\n  {key: \"elephant\", label: \"Elephant\"},\n  {key: \"lion\", label: \"Lion\"},\n  {key: \"tiger\", label: \"Tiger\"},\n  {key: \"giraffe\", label: \"Giraffe\"},\n  {key: \"dolphin\", label: \"Dolphin\"},\n  {key: \"penguin\", label: \"Penguin\"},\n  {key: \"zebra\", label: \"Zebra\"},\n  {key: \"shark\", label: \"Shark\"},\n  {key: \"whale\", label: \"Whale\"},\n  {key: \"otter\", label: \"Otter\"},\n  {key: \"crocodile\", label: \"Crocodile\"}\n];`,Ee=`export const PetIcon = (props) => (\n  <svg\n    aria-hidden=\"true\"\n    fill=\"none\"\n    focusable=\"false\"\n    height=\"1em\"\n    role=\"presentation\"\n    viewBox=\"0 0 24 24\"\n    width=\"1em\"\n    {...props}\n  >\n    <path\n      d=\"M19.0803 15.7203C18.4903 12.1903 15.1003 9.32031 11.5203 9.32031C7.63028 9.32031 4.21028 12.4703 3.88028 16.3503C3.75028 17.8503 4.23028 19.2703 5.22028 20.3403C6.20028 21.4103 7.58028 22.0003 9.08028 22.0003H13.7603C15.4503 22.0003 16.9303 21.3403 17.9403 20.1503C18.9503 18.9603 19.3503 17.3803 19.0803 15.7203Z\"\n      fill=\"currentColor\"\n    />\n    <path\n      d=\"M10.2796 7.86C11.8978 7.86 13.2096 6.54819 13.2096 4.93C13.2096 3.31181 11.8978 2 10.2796 2C8.66141 2 7.34961 3.31181 7.34961 4.93C7.34961 6.54819 8.66141 7.86 10.2796 7.86Z\"\n      fill=\"currentColor\"\n    />\n    <path\n      d=\"M16.94 9.02844C18.2876 9.02844 19.38 7.93601 19.38 6.58844C19.38 5.24086 18.2876 4.14844 16.94 4.14844C15.5924 4.14844 14.5 5.24086 14.5 6.58844C14.5 7.93601 15.5924 9.02844 16.94 9.02844Z\"\n      fill=\"currentColor\"\n    />\n    <path\n      d=\"M20.5496 12.9313C21.6266 12.9313 22.4996 12.0582 22.4996 10.9812C22.4996 9.90429 21.6266 9.03125 20.5496 9.03125C19.4727 9.03125 18.5996 9.90429 18.5996 10.9812C18.5996 12.0582 19.4727 12.9313 20.5496 12.9313Z\"\n      fill=\"currentColor\"\n    />\n    <path\n      d=\"M3.94 10.9816C5.28757 10.9816 6.38 9.88914 6.38 8.54156C6.38 7.19399 5.28757 6.10156 3.94 6.10156C2.59243 6.10156 1.5 7.19399 1.5 8.54156C1.5 9.88914 2.59243 10.9816 3.94 10.9816Z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);`,Ve=`import {Select, SelectItem} from \"@nextui-org/react\";\nimport {PetIcon} from \"./PetIcon\";\nimport {animals} from \"./data\";\n\nexport default function App() {\n  return (\n    <Select\n      className=\"max-w-xs\"\n      defaultSelectedKeys={[\"cat\"]}\n      label=\"Favorite Animal\"\n      placeholder=\"Select an animal\"\n      startContent={<PetIcon />}\n    >\n      {animals.map((animal) => (\n        <SelectItem key={animal.key}>{animal.label}</SelectItem>\n      ))}\n    </Select>\n  );\n}\n`,Ke={\"/App.jsx\":Ve,\"/PetIcon.jsx\":Ee,\"/data.js\":Fe},A={...Ke};var He=`import {Select, SelectItem, Avatar} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <Select\n      className=\"max-w-xs\"\n      label=\"Select country\"\n    >\n      <SelectItem\n        key=\"argentina\"\n        startContent={<Avatar alt=\"Argentina\" className=\"w-6 h-6\" src=\"https://flagcdn.com/ar.svg\" />}\n      >\n        Argentina\n      </SelectItem>\n      <SelectItem\n        key=\"venezuela\"\n        startContent={<Avatar alt=\"Venezuela\" className=\"w-6 h-6\" src=\"https://flagcdn.com/ve.svg\" />}\n      >\n        Venezuela\n      </SelectItem>\n      <SelectItem\n        key=\"brazil\"\n        startContent={<Avatar alt=\"Brazil\" className=\"w-6 h-6\" src=\"https://flagcdn.com/br.svg\" />}\n      >\n        Brazil\n      </SelectItem>\n      <SelectItem\n        key=\"switzerland\"\n        startContent={\n          <Avatar alt=\"Switzerland\" className=\"w-6 h-6\" src=\"https://flagcdn.com/ch.svg\" />\n        }\n      >\n        Switzerland\n      </SelectItem>\n      <SelectItem\n        key=\"germany\"\n        startContent={<Avatar alt=\"Germany\" className=\"w-6 h-6\" src=\"https://flagcdn.com/de.svg\" />}\n      >\n        Germany\n      </SelectItem>\n      <SelectItem\n        key=\"spain\"\n        startContent={<Avatar alt=\"Spain\" className=\"w-6 h-6\" src=\"https://flagcdn.com/es.svg\" />}\n      >\n        Spain\n      </SelectItem>\n      <SelectItem\n        key=\"france\"\n        startContent={<Avatar alt=\"France\" className=\"w-6 h-6\" src=\"https://flagcdn.com/fr.svg\" />}\n      >\n        France\n      </SelectItem>\n      <SelectItem\n        key=\"italy\"\n        startContent={<Avatar alt=\"Italy\" className=\"w-6 h-6\" src=\"https://flagcdn.com/it.svg\" />}\n      >\n        Italy\n      </SelectItem>\n      <SelectItem\n        key=\"mexico\"\n        startContent={<Avatar alt=\"Mexico\" className=\"w-6 h-6\" src=\"https://flagcdn.com/mx.svg\" />}\n      >\n        Mexico\n      </SelectItem>\n    </Select>\n  );\n}`,Be={\"/App.jsx\":He},C={...Be};var Ze=`export type Pokemon = {\n  name: string;\n  url: string;\n};\n\nexport type UsePokemonListProps = {\n  /** Delay to wait before fetching more items */\n  fetchDelay?: number;\n};\n\nexport function usePokemonList({fetchDelay = 0}: UsePokemonListProps = {}) {\n  const [items, setItems] = React.useState<Pokemon[]>([]);\n  const [hasMore, setHasMore] = React.useState(true);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [offset, setOffset] = React.useState(0);\n  const limit = 10; // Number of items per page, adjust as necessary\n\n  const loadPokemon = async (currentOffset: number) => {\n    const controller = new AbortController();\n    const {signal} = controller;\n\n    try {\n      setIsLoading(true);\n\n      if (offset > 0) {\n        // Delay to simulate network latency\n        await new Promise((resolve) => setTimeout(resolve, fetchDelay));\n      }\n\n      let res = await fetch(\n        \\`https://pokeapi.co/api/v2/pokemon?offset=\\${currentOffset}&limit=\\${limit}\\`,\n        {signal},\n      );\n\n      if (!res.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n\n      let json = await res.json();\n\n      setHasMore(json.next !== null);\n      // Append new results to existing ones\n      setItems((prevItems) => [...prevItems, ...json.results]);\n    } catch (error) {\n      if (error.name === \"AbortError\") {\n        console.log(\"Fetch aborted\");\n      } else {\n        console.error(\"There was an error with the fetch operation:\", error);\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  React.useEffect(() => {\n    loadPokemon(offset);\n  }, []);\n\n  const onLoadMore = () => {\n    const newOffset = offset + limit;\n\n    setOffset(newOffset);\n    loadPokemon(newOffset);\n  };\n\n  return {\n    items,\n    hasMore,\n    isLoading,\n    onLoadMore,\n  };\n}\n\n`,Ge=`export function usePokemonList({fetchDelay = 0} = {}) {\n  const [items, setItems] = React.useState([]);\n  const [hasMore, setHasMore] = React.useState(true);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [offset, setOffset] = React.useState(0);\n  const limit = 10; // Number of items per page, adjust as necessary\n\n  const loadPokemon = async (currentOffset) => {\n    const controller = new AbortController();\n    const {signal} = controller;\n\n    try {\n      setIsLoading(true);\n\n      if (offset > 0) {\n        // Delay to simulate network latency\n        await new Promise((resolve) => setTimeout(resolve, fetchDelay));\n      }\n\n      let res = await fetch(\n        \\`https://pokeapi.co/api/v2/pokemon?offset=\\${currentOffset}&limit=\\${limit}\\`,\n        {signal},\n      );\n\n      if (!res.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n\n      let json = await res.json();\n\n      setHasMore(json.next !== null);\n      // Append new results to existing ones\n      setItems((prevItems) => [...prevItems, ...json.results]);\n    } catch (error) {\n      if (error.name === \"AbortError\") {\n        console.log(\"Fetch aborted\");\n      } else {\n        console.error(\"There was an error with the fetch operation:\", error);\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  React.useEffect(() => {\n    loadPokemon(offset);\n  }, []);\n\n  const onLoadMore = () => {\n    const newOffset = offset + limit;\n\n    setOffset(newOffset);\n    loadPokemon(newOffset);\n  };\n\n  return {\n    items,\n    hasMore,\n    isLoading,\n    onLoadMore,\n  };\n};`,j=`import {Select, SelectItem} from \"@nextui-org/react\";\nimport {useInfiniteScroll} from \"@nextui-org/use-infinite-scroll\";\nimport {usePokemonList} from \"./usePokemonList\";\n\nexport default function App() {\n  const [isOpen, setIsOpen] = React.useState(false);\n  const {items, hasMore, isLoading, onLoadMore} = usePokemonList({fetchDelay: 1500});\n\n  const [, scrollerRef] = useInfiniteScroll({\n    hasMore,\n    isEnabled: isOpen,\n    shouldUseLoader: false, // We don't want to show the loader at the bottom of the list\n    onLoadMore,\n  });\n\n  return (\n    <Select\n      className=\"max-w-xs\"\n      isLoading={isLoading}\n      items={items}\n      label=\"Pick a Pokemon\"\n      placeholder=\"Select a Pokemon\"\n      scrollRef={scrollerRef}\n      selectionMode=\"single\"\n      onOpenChange={setIsOpen}\n    >\n      {(item) => (\n        <SelectItem key={item.name} className=\"capitalize\">\n          {item.name}\n        </SelectItem>\n      )}\n    </Select>\n  );\n}`,qe={\"/App.jsx\":j,\"/usePokemonList.js\":Ge},Ue={\"/App.tsx\":j,\"/usePokemonList.ts\":Ze},N={...qe,...Ue};var Ye=`export const animals = [\n  {key: \"cat\", label: \"Cat\"},\n  {key: \"dog\", label: \"Dog\"},\n  {key: \"elephant\", label: \"Elephant\"},\n  {key: \"lion\", label: \"Lion\"},\n  {key: \"tiger\", label: \"Tiger\"},\n  {key: \"giraffe\", label: \"Giraffe\"},\n  {key: \"dolphin\", label: \"Dolphin\"},\n  {key: \"penguin\", label: \"Penguin\"},\n  {key: \"zebra\", label: \"Zebra\"},\n  {key: \"shark\", label: \"Shark\"},\n  {key: \"whale\", label: \"Whale\"},\n  {key: \"otter\", label: \"Otter\"},\n  {key: \"crocodile\", label: \"Crocodile\"}\n];`,Je=`import {Select, SelectItem} from \"@nextui-org/react\";\nimport {animals} from \"./data\";\n\nexport default function App() {\n  return (\n    <Select\n      label=\"Favorite Animal\"\n      placeholder=\"Select an animal\"\n      defaultSelectedKeys={[\"cat\"]}\n      className=\"max-w-xs\"\n      scrollShadowProps={{\n        isEnabled: false\n      }}\n    >\n      {animals.map((animal) => (\n        <SelectItem key={animal.key}>\n          {animal.label}\n        </SelectItem>\n      ))}\n    </Select>\n  );\n}`,_e={\"/App.jsx\":Je,\"/data.js\":Ye},M={..._e};var Qe=`export const animals = [\n  {key: \"cat\", label: \"Cat\"},\n  {key: \"dog\", label: \"Dog\"},\n  {key: \"elephant\", label: \"Elephant\"},\n  {key: \"lion\", label: \"Lion\"},\n  {key: \"tiger\", label: \"Tiger\"},\n  {key: \"giraffe\", label: \"Giraffe\"},\n  {key: \"dolphin\", label: \"Dolphin\"},\n  {key: \"penguin\", label: \"Penguin\"},\n  {key: \"zebra\", label: \"Zebra\"},\n  {key: \"shark\", label: \"Shark\"},\n  {key: \"whale\", label: \"Whale\"},\n  {key: \"otter\", label: \"Otter\"},\n  {key: \"crocodile\", label: \"Crocodile\"}\n];`,$e=`import {Select, SelectItem} from \"@nextui-org/react\";\nimport {animals} from \"./data\";\n\nexport default function App() {\n  return (\n    <Select\n      label=\"Favorite Animal\"\n      placeholder=\"Select an animal\"\n      description=\"The second most popular pet in the world\"\n      defaultSelectedKeys={[\"cat\"]}\n      className=\"max-w-xs\"\n    >\n      {animals.map((animal) => (\n        <SelectItem key={animal.key}>\n          {animal.label}\n        </SelectItem>\n      ))}\n    </Select>\n  );\n}`,Xe={\"/App.jsx\":$e,\"/data.js\":Qe},T={...Xe};var et=`export const animals = [\n  {key: \"cat\", label: \"Cat\"},\n  {key: \"dog\", label: \"Dog\"},\n  {key: \"elephant\", label: \"Elephant\"},\n  {key: \"lion\", label: \"Lion\"},\n  {key: \"tiger\", label: \"Tiger\"},\n  {key: \"giraffe\", label: \"Giraffe\"},\n  {key: \"dolphin\", label: \"Dolphin\"},\n  {key: \"penguin\", label: \"Penguin\"},\n  {key: \"zebra\", label: \"Zebra\"},\n  {key: \"shark\", label: \"Shark\"},\n  {key: \"whale\", label: \"Whale\"},\n  {key: \"otter\", label: \"Otter\"},\n  {key: \"crocodile\", label: \"Crocodile\"}\n];`,tt=`import {Select, SelectItem} from \"@nextui-org/react\";\nimport {animals} from \"./data\";\n\nexport default function App() {\n  const [value, setValue] = React.useState(new Set([]));\n  const [touched, setTouched] = React.useState(false);\n\n  const isValid = value.has(\"cat\");\n\n  return (\n    <Select\n      label=\"Favorite Animal\"\n      variant=\"bordered\"\n      placeholder=\"Select an animal\"\n      description=\"The second most popular pet in the world\"\n      errorMessage={isValid || !touched ? \"\" : \"You must select a cat\"}\n      isInvalid={isValid || !touched ? false : true}\n      selectedKeys={value}\n      className=\"max-w-xs\"\n      onSelectionChange={setValue}\n      onClose={() => setTouched(true)}\n    >\n      {animals.map((animal) => (\n        <SelectItem key={animal.key}>\n          {animal.label}\n        </SelectItem>\n      ))}\n    </Select>\n  );\n}`,at={\"/App.jsx\":tt,\"/data.js\":et},P={...at};var D=`export const animals = [\n  {key: \"cat\", label: \"Cat\"},\n  {key: \"dog\", label: \"Dog\"},\n  {key: \"elephant\", label: \"Elephant\"},\n  {key: \"lion\", label: \"Lion\"},\n  {key: \"tiger\", label: \"Tiger\"},\n  {key: \"giraffe\", label: \"Giraffe\"},\n  {key: \"dolphin\", label: \"Dolphin\"},\n  {key: \"penguin\", label: \"Penguin\"},\n  {key: \"zebra\", label: \"Zebra\"},\n  {key: \"shark\", label: \"Shark\"},\n  {key: \"whale\", label: \"Whale\"},\n  {key: \"otter\", label: \"Otter\"},\n  {key: \"crocodile\", label: \"Crocodile\"}\n];`,lt=`import {Select, SelectItem, Selection} from \"@nextui-org/react\";\nimport {animals} from \"./data\";\n\nexport default function App() {\n  const [value, setValue] = React.useState<Selection>(new Set([]));\n\n  return (\n    <div className=\"flex w-full max-w-xs flex-col gap-2\">\n      <Select\n        label=\"Favorite Animal\"\n        variant=\"bordered\"\n        placeholder=\"Select an animal\"\n        selectedKeys={value}\n        className=\"max-w-xs\"\n        onSelectionChange={setValue}\n      >\n        {animals.map((animal) => (\n          <SelectItem key={animal.key}>\n            {animal.label}\n          </SelectItem>\n        ))}\n      </Select>\n      <p className=\"text-default-500 text-small\">Selected: {value}</p>\n    </div>\n  );\n}`,nt=`import {Select, SelectItem} from \"@nextui-org/react\";\nimport {animals} from \"./data\";\n\nexport default function App() {\n  const [value, setValue] = React.useState(new Set([]));\n\n  return (\n    <div className=\"flex w-full max-w-xs flex-col gap-2\">\n      <Select\n        label=\"Favorite Animal\"\n        variant=\"bordered\"\n        placeholder=\"Select an animal\"\n        selectedKeys={value}\n        className=\"max-w-xs\"\n        onSelectionChange={setValue}\n      >\n        {animals.map((animal) => (\n          <SelectItem key={animal.key}>\n            {animal.label}\n          </SelectItem>\n        ))}\n      </Select>\n      <p className=\"text-small text-default-500\">Selected: {value}</p>\n    </div>\n  );\n}`,it={\"/App.jsx\":nt,\"/data.js\":D},ot={\"/App.tsx\":lt,\"/data.js\":D},L={...it,...ot};var R=`export const animals = [\n  {key: \"cat\", label: \"Cat\"},\n  {key: \"dog\", label: \"Dog\"},\n  {key: \"elephant\", label: \"Elephant\"},\n  {key: \"lion\", label: \"Lion\"},\n  {key: \"tiger\", label: \"Tiger\"},\n  {key: \"giraffe\", label: \"Giraffe\"},\n  {key: \"dolphin\", label: \"Dolphin\"},\n  {key: \"penguin\", label: \"Penguin\"},\n  {key: \"zebra\", label: \"Zebra\"},\n  {key: \"shark\", label: \"Shark\"},\n  {key: \"whale\", label: \"Whale\"},\n  {key: \"otter\", label: \"Otter\"},\n  {key: \"crocodile\", label: \"Crocodile\"}\n];`,rt=`import {Select, SelectItem} from \"@nextui-org/react\";\nimport {animals} from \"./data\";\n\nexport default function App() {\n  const [value, setValue] = React.useState(\"\");\n\n  const handleSelectionChange = (e) => {\n    setValue(e.target.value);\n  };\n\n  return (\n    <div className=\"flex w-full max-w-xs flex-col gap-2\">\n      <Select\n        label=\"Favorite Animal\"\n        variant=\"bordered\"\n        placeholder=\"Select an animal\"\n        selectedKeys={[value]}\n        className=\"max-w-xs\"\n        onChange={handleSelectionChange}\n      >\n        {animals.map((animal) => (\n          <SelectItem key={animal.key}>\n            {animal.label}\n          </SelectItem>\n        ))}\n      </Select>\n      <p className=\"text-small text-default-500\">Selected: {value}</p>\n    </div>\n  );\n}`,st=`import {Select, SelectItem} from \"@nextui-org/react\";\nimport {animals} from \"./data\";\n\nexport default function App() {\n  const [value, setValue] = React.useState<string>(\"\");\n\n  const handleSelectionChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setValue(e.target.value);\n  };\n\n  return (\n    <div className=\"flex w-full max-w-xs flex-col gap-2\">\n      <Select\n        label=\"Favorite Animal\"\n        variant=\"bordered\"\n        placeholder=\"Select an animal\"\n        selectedKeys={[value]}\n        className=\"max-w-xs\"\n        onChange={handleSelectionChange}\n      >\n        {animals.map((animal) => (\n          <SelectItem key={animal.key}>\n            {animal.label}\n          </SelectItem>\n        ))}\n      </Select>\n      <p className=\"text-small text-default-500\">Selected: {value}</p>\n    </div>\n  );\n}`,ct={\"/App.jsx\":rt,\"/data.js\":R},dt={\"/App.tsx\":st,\"/data.js\":R},O={...ct,...dt};var mt=`export const animals = [\n  {key: \"cat\", label: \"Cat\"},\n  {key: \"dog\", label: \"Dog\"},\n  {key: \"elephant\", label: \"Elephant\"},\n  {key: \"lion\", label: \"Lion\"},\n  {key: \"tiger\", label: \"Tiger\"},\n  {key: \"giraffe\", label: \"Giraffe\"},\n  {key: \"dolphin\", label: \"Dolphin\"},\n  {key: \"penguin\", label: \"Penguin\"},\n  {key: \"zebra\", label: \"Zebra\"},\n  {key: \"shark\", label: \"Shark\"},\n  {key: \"whale\", label: \"Whale\"},\n  {key: \"otter\", label: \"Otter\"},\n  {key: \"crocodile\", label: \"Crocodile\"}\n];`,ht=`import {Select, SelectItem, Button} from \"@nextui-org/react\";\nimport {animals} from \"./data\";\n\nexport default function App() {\n  const [isOpen, setIsOpen] = React.useState(false);\n\n  return (\n    <div className=\"flex w-full max-w-xs items-center gap-2\">\n      <Select\n        isOpen={isOpen}\n        label=\"Favorite Animal\"\n        placeholder=\"Select an animal\"\n        defaultSelectedKeys={[\"cat\"]}\n        onOpenChange={(open) => open !== isOpen && setIsOpen(open)}\n        className=\"max-w-xs\"\n      >\n        {animals.map((animal) => (\n          <SelectItem key={animal.key}>\n            {animal.label}\n          </SelectItem>\n        ))}\n      </Select>\n      <Button aria-label=\"Open\" aria-pressed={isOpen} onPress={() => setIsOpen(!isOpen)}>\n        {isOpen ? \"Close\" : \"Open\"}\n      </Button>\n    </div>\n  );\n}`,pt={\"/App.jsx\":ht,\"/data.js\":mt},z={...pt};var ut=`export const users = [\n  {\n    id: 1,\n    name: \"Tony Reichert\",\n    role: \"CEO\",\n    team: \"Management\",\n    status: \"active\",\n    age: \"29\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/male/1.png\",\n    email: \"tony.reichert@example.com\",\n  },\n  {\n    id: 2,\n    name: \"Zoey Lang\",\n    role: \"Tech Lead\",\n    team: \"Development\",\n    status: \"paused\",\n    age: \"25\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/female/1.png\",\n    email: \"zoey.lang@example.com\",\n  },\n  {\n    id: 3,\n    name: \"Jane Fisher\",\n    role: \"Sr. Dev\",\n    team: \"Development\",\n    status: \"active\",\n    age: \"22\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/female/2.png\",\n    email: \"jane.fisher@example.com\",\n  },\n  {\n    id: 4,\n    name: \"William Howard\",\n    role: \"C.M.\",\n    team: \"Marketing\",\n    status: \"vacation\",\n    age: \"28\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/male/2.png\",\n    email: \"william.howard@example.com\",\n  },\n  {\n    id: 5,\n    name: \"Kristen Copper\",\n    role: \"S. Manager\",\n    team: \"Sales\",\n    status: \"active\",\n    age: \"24\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/female/3.png\",\n    email: \"kristen.cooper@example.com\",\n  },\n  {\n    id: 6,\n    name: \"Brian Kim\",\n    role: \"P. Manager\",\n    team: \"Management\",\n    age: \"29\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/male/3.png\",\n    email: \"brian.kim@example.com\",\n    status: \"active\",\n  },\n  {\n    id: 7,\n    name: \"Michael Hunt\",\n    role: \"Designer\",\n    team: \"Design\",\n    status: \"paused\",\n    age: \"27\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/male/4.png\",\n    email: \"michael.hunt@example.com\",\n  },\n  {\n    id: 8,\n    name: \"Samantha Brooks\",\n    role: \"HR Manager\",\n    team: \"HR\",\n    status: \"active\",\n    age: \"31\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/female/4.png\",\n    email: \"samantha.brooks@example.com\",\n  },\n  {\n    id: 9,\n    name: \"Frank Harrison\",\n    role: \"F. Manager\",\n    team: \"Finance\",\n    status: \"vacation\",\n    age: \"33\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/male/5.png\",\n    email: \"frank.harrison@example.com\",\n  },\n  {\n    id: 10,\n    name: \"Emma Adams\",\n    role: \"Ops Manager\",\n    team: \"Operations\",\n    status: \"active\",\n    age: \"35\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/female/5.png\",\n    email: \"emma.adams@example.com\",\n  },\n  {\n    id: 11,\n    name: \"Brandon Stevens\",\n    role: \"Jr. Dev\",\n    team: \"Development\",\n    status: \"active\",\n    age: \"22\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/male/7.png\",\n    email: \"brandon.stevens@example.com\",\n  },\n  {\n    id: 12,\n    name: \"Megan Richards\",\n    role: \"P. Manager\",\n    team: \"Product\",\n    status: \"paused\",\n    age: \"28\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/female/7.png\",\n    email: \"megan.richards@example.com\",\n  },\n  {\n    id: 13,\n    name: \"Oliver Scott\",\n    role: \"S. Manager\",\n    team: \"Security\",\n    status: \"active\",\n    age: \"37\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/male/8.png\",\n    email: \"oliver.scott@example.com\",\n  },\n  {\n    id: 14,\n    name: \"Grace Allen\",\n    role: \"M. Specialist\",\n    team: \"Marketing\",\n    status: \"active\",\n    age: \"30\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/female/8.png\",\n    email: \"grace.allen@example.com\",\n  },\n  {\n    id: 15,\n    name: \"Noah Carter\",\n    role: \"IT Specialist\",\n    team: \"I. Technology\",\n    status: \"paused\",\n    age: \"31\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/male/9.png\",\n    email: \"noah.carter@example.com\",\n  },\n  {\n    id: 16,\n    name: \"Ava Perez\",\n    role: \"Manager\",\n    team: \"Sales\",\n    status: \"active\",\n    age: \"29\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/female/9.png\",\n    email: \"ava.perez@example.com\",\n  },\n  {\n    id: 17,\n    name: \"Liam Johnson\",\n    role: \"Data Analyst\",\n    team: \"Analysis\",\n    status: \"active\",\n    age: \"28\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/male/11.png\",\n    email: \"liam.johnson@example.com\",\n  },\n  {\n    id: 18,\n    name: \"Sophia Taylor\",\n    role: \"QA Analyst\",\n    team: \"Testing\",\n    status: \"active\",\n    age: \"27\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/female/11.png\",\n    email: \"sophia.taylor@example.com\",\n  },\n  {\n    id: 19,\n    name: \"Lucas Harris\",\n    role: \"Administrator\",\n    team: \"Information Technology\",\n    status: \"paused\",\n    age: \"32\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/male/12.png\",\n    email: \"lucas.harris@example.com\",\n  },\n  {\n    id: 20,\n    name: \"Mia Robinson\",\n    role: \"Coordinator\",\n    team: \"Operations\",\n    status: \"active\",\n    age: \"26\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/female/12.png\",\n    email: \"mia.robinson@example.com\",\n  },\n];`,ft=`import {Select, SelectItem, Avatar} from \"@nextui-org/react\";\nimport {users} from \"./data\";\n\nexport default function App() {\n  return (\n    <Select\n      items={users}\n      label=\"Assigned to\"\n      placeholder=\"Select a user\"\n      labelPlacement=\"outside\"\n      className=\"max-w-xs\"\n    >\n      {(user) => (\n        <SelectItem key={user.id} textValue={user.name}>\n          <div className=\"flex gap-2 items-center\">\n            <Avatar alt={user.name} className=\"flex-shrink-0\" size=\"sm\" src={user.avatar} />\n            <div className=\"flex flex-col\">\n              <span className=\"text-small\">{user.name}</span>\n              <span className=\"text-tiny text-default-400\">{user.email}</span>\n            </div>\n          </div>\n        </SelectItem>\n      )}\n    </Select>\n  );\n}`,gt={\"/App.jsx\":ft,\"/data.js\":ut},W={...gt};var F=`export const users = [\n  {\n    id: 1,\n    name: \"Tony Reichert\",\n    role: \"CEO\",\n    team: \"Management\",\n    status: \"active\",\n    age: \"29\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/male/1.png\",\n    email: \"tony.reichert@example.com\",\n  },\n  {\n    id: 2,\n    name: \"Zoey Lang\",\n    role: \"Tech Lead\",\n    team: \"Development\",\n    status: \"paused\",\n    age: \"25\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/female/1.png\",\n    email: \"zoey.lang@example.com\",\n  },\n  {\n    id: 3,\n    name: \"Jane Fisher\",\n    role: \"Sr. Dev\",\n    team: \"Development\",\n    status: \"active\",\n    age: \"22\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/female/2.png\",\n    email: \"jane.fisher@example.com\",\n  },\n  {\n    id: 4,\n    name: \"William Howard\",\n    role: \"C.M.\",\n    team: \"Marketing\",\n    status: \"vacation\",\n    age: \"28\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/male/2.png\",\n    email: \"william.howard@example.com\",\n  },\n  {\n    id: 5,\n    name: \"Kristen Copper\",\n    role: \"S. Manager\",\n    team: \"Sales\",\n    status: \"active\",\n    age: \"24\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/female/3.png\",\n    email: \"kristen.cooper@example.com\",\n  },\n  {\n    id: 6,\n    name: \"Brian Kim\",\n    role: \"P. Manager\",\n    team: \"Management\",\n    age: \"29\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/male/3.png\",\n    email: \"brian.kim@example.com\",\n    status: \"active\",\n  },\n  {\n    id: 7,\n    name: \"Michael Hunt\",\n    role: \"Designer\",\n    team: \"Design\",\n    status: \"paused\",\n    age: \"27\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/male/4.png\",\n    email: \"michael.hunt@example.com\",\n  },\n  {\n    id: 8,\n    name: \"Samantha Brooks\",\n    role: \"HR Manager\",\n    team: \"HR\",\n    status: \"active\",\n    age: \"31\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/female/4.png\",\n    email: \"samantha.brooks@example.com\",\n  },\n  {\n    id: 9,\n    name: \"Frank Harrison\",\n    role: \"F. Manager\",\n    team: \"Finance\",\n    status: \"vacation\",\n    age: \"33\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/male/5.png\",\n    email: \"frank.harrison@example.com\",\n  },\n  {\n    id: 10,\n    name: \"Emma Adams\",\n    role: \"Ops Manager\",\n    team: \"Operations\",\n    status: \"active\",\n    age: \"35\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/female/5.png\",\n    email: \"emma.adams@example.com\",\n  },\n  {\n    id: 11,\n    name: \"Brandon Stevens\",\n    role: \"Jr. Dev\",\n    team: \"Development\",\n    status: \"active\",\n    age: \"22\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/male/7.png\",\n    email: \"brandon.stevens@example.com\",\n  },\n  {\n    id: 12,\n    name: \"Megan Richards\",\n    role: \"P. Manager\",\n    team: \"Product\",\n    status: \"paused\",\n    age: \"28\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/female/7.png\",\n    email: \"megan.richards@example.com\",\n  },\n  {\n    id: 13,\n    name: \"Oliver Scott\",\n    role: \"S. Manager\",\n    team: \"Security\",\n    status: \"active\",\n    age: \"37\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/male/8.png\",\n    email: \"oliver.scott@example.com\",\n  },\n  {\n    id: 14,\n    name: \"Grace Allen\",\n    role: \"M. Specialist\",\n    team: \"Marketing\",\n    status: \"active\",\n    age: \"30\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/female/8.png\",\n    email: \"grace.allen@example.com\",\n  },\n  {\n    id: 15,\n    name: \"Noah Carter\",\n    role: \"IT Specialist\",\n    team: \"I. Technology\",\n    status: \"paused\",\n    age: \"31\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/male/9.png\",\n    email: \"noah.carter@example.com\",\n  },\n  {\n    id: 16,\n    name: \"Ava Perez\",\n    role: \"Manager\",\n    team: \"Sales\",\n    status: \"active\",\n    age: \"29\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/female/9.png\",\n    email: \"ava.perez@example.com\",\n  },\n  {\n    id: 17,\n    name: \"Liam Johnson\",\n    role: \"Data Analyst\",\n    team: \"Analysis\",\n    status: \"active\",\n    age: \"28\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/male/11.png\",\n    email: \"liam.johnson@example.com\",\n  },\n  {\n    id: 18,\n    name: \"Sophia Taylor\",\n    role: \"QA Analyst\",\n    team: \"Testing\",\n    status: \"active\",\n    age: \"27\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/female/11.png\",\n    email: \"sophia.taylor@example.com\",\n  },\n  {\n    id: 19,\n    name: \"Lucas Harris\",\n    role: \"Administrator\",\n    team: \"Information Technology\",\n    status: \"paused\",\n    age: \"32\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/male/12.png\",\n    email: \"lucas.harris@example.com\",\n  },\n  {\n    id: 20,\n    name: \"Mia Robinson\",\n    role: \"Coordinator\",\n    team: \"Operations\",\n    status: \"active\",\n    age: \"26\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/female/12.png\",\n    email: \"mia.robinson@example.com\",\n  },\n];`,bt=`import {Select, SelectItem, Avatar} from \"@nextui-org/react\";\nimport {users} from \"./data\";\n\nexport default function App() {\n  return (\n    <Select\n      items={users}\n      label=\"Assigned to\"\n      placeholder=\"Select a user\"\n      labelPlacement=\"outside\"\n      classNames={{\n        base: \"max-w-xs\",\n        trigger: \"h-12\",\n      }}\n      renderValue={(items) => {\n        return items.map((item) => (\n          <div key={item.key} className=\"flex items-center gap-2\">\n            <Avatar\n              alt={item.data.name}\n              className=\"flex-shrink-0\"\n              size=\"sm\"\n              src={item.data.avatar}\n            />\n            <div className=\"flex flex-col\">\n              <span>{item.data.name}</span>\n              <span className=\"text-default-500 text-tiny\">({item.data.email})</span>\n            </div>\n          </div>\n        ));\n      }}\n    >\n      {(user) => (\n        <SelectItem key={user.id} textValue={user.name}>\n          <div className=\"flex gap-2 items-center\">\n            <Avatar alt={user.name} className=\"flex-shrink-0\" size=\"sm\" src={user.avatar} />\n            <div className=\"flex flex-col\">\n              <span className=\"text-small\">{user.name}</span>\n              <span className=\"text-tiny text-default-400\">{user.email}</span>\n            </div>\n          </div>\n        </SelectItem>\n      )}\n    </Select>\n  );\n}`,yt=`import {Select, SelectItem, Avatar, SelectedItems} from \"@nextui-org/react\";\nimport {users} from \"./data\";\n\ntype User = {\n  id: number;\n  name: string;\n  role: string;\n  team: string;\n  status: string;\n  age: string;\n  avatar: string;\n  email: string;\n};\n\nexport default function App() {\n  return (\n    <Select\n      items={users}\n      label=\"Assigned to\"\n      placeholder=\"Select a user\"\n      labelPlacement=\"outside\"\n      classNames={{\n        base: \"max-w-xs\",\n        trigger: \"h-12\",\n      }}\n      renderValue={(items: SelectedItems<User>) => {\n        return items.map((item) => (\n          <div key={item.key} className=\"flex items-center gap-2\">\n            <Avatar\n              alt={item.data.name}\n              className=\"flex-shrink-0\"\n              size=\"sm\"\n              src={item.data.avatar}\n            />\n            <div className=\"flex flex-col\">\n              <span>{item.data.name}</span>\n              <span className=\"text-default-500 text-tiny\">({item.data.email})</span>\n            </div>\n          </div>\n        ));\n      }}\n    >\n      {(user) => (\n        <SelectItem key={user.id} textValue={user.name}>\n          <div className=\"flex gap-2 items-center\">\n            <Avatar alt={user.name} className=\"flex-shrink-0\" size=\"sm\" src={user.avatar} />\n            <div className=\"flex flex-col\">\n              <span className=\"text-small\">{user.name}</span>\n              <span className=\"text-tiny text-default-400\">{user.email}</span>\n            </div>\n          </div>\n        </SelectItem>\n      )}\n    </Select>\n  );\n}`,St={\"/App.jsx\":bt,\"/data.js\":F},kt={\"/App.tsx\":yt,\"/data.ts\":F},E={...St,...kt};var vt=`import {Select, SelectItem, SelectSection} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <Select\n      label=\"Favorite Animal\"\n      placeholder=\"Select an animal\"\n      className=\"max-w-xs\"\n    >\n      <SelectSection showDivider title=\"Mammals\">\n        <SelectItem key=\"Lion\">Lion</SelectItem>\n        <SelectItem key=\"Tiger\">Tiger</SelectItem>\n        <SelectItem key=\"Elephant\">Elephant</SelectItem>\n        <SelectItem key=\"Kangaroo\">Kangaroo</SelectItem>\n        <SelectItem key=\"Panda\">Panda</SelectItem>\n        <SelectItem key=\"Giraffe\">Giraffe</SelectItem>\n        <SelectItem key=\"Zebra\">Zebra</SelectItem>\n        <SelectItem key=\"Cheetah\">Cheetah</SelectItem>\n      </SelectSection>\n      <SelectSection title=\"Birds\">\n        <SelectItem key=\"Eagle\">Eagle</SelectItem>\n        <SelectItem key=\"Parrot\">Parrot</SelectItem>\n        <SelectItem key=\"Penguin\">Penguin</SelectItem>\n        <SelectItem key=\"Ostrich\">Ostrich</SelectItem>\n        <SelectItem key=\"Peacock\">Peacock</SelectItem>\n        <SelectItem key=\"Swan\">Swan</SelectItem>\n        <SelectItem key=\"Falcon\">Falcon</SelectItem>\n        <SelectItem key=\"Flamingo\">Flamingo</SelectItem>\n      </SelectSection>\n    </Select>\n  );\n}`,xt={\"/App.jsx\":vt},V={...xt};var It=`import {Select, SelectItem, SelectSection} from \"@nextui-org/react\";\n\nexport default function App() {\n  const headingClasses = \"flex w-full sticky top-1 z-20 py-1.5 px-2 bg-default-100 shadow-small rounded-small\";\n\n  return (\n    <Select\n      label=\"Favorite Animal\"\n      placeholder=\"Select an animal\"\n      className=\"max-w-xs\"\n      scrollShadowProps={{\n        isEnabled: false,\n      }}\n    >\n      <SelectSection \n        title=\"Mammals\"\n        classNames={{\n          heading: headingClasses,\n        }}\n      >\n        <SelectItem key=\"Lion\">Lion</SelectItem>\n        <SelectItem key=\"Tiger\">Tiger</SelectItem>\n        <SelectItem key=\"Elephant\">Elephant</SelectItem>\n        <SelectItem key=\"Kangaroo\">Kangaroo</SelectItem>\n        <SelectItem key=\"Panda\">Panda</SelectItem>\n        <SelectItem key=\"Giraffe\">Giraffe</SelectItem>\n        <SelectItem key=\"Zebra\">Zebra</SelectItem>\n        <SelectItem key=\"Cheetah\">Cheetah</SelectItem>\n      </SelectSection>\n      <SelectSection \n        title=\"Birds\"\n        classNames={{\n          heading: headingClasses,\n        }}\n      >\n        <SelectItem key=\"Eagle\">Eagle</SelectItem>\n        <SelectItem key=\"Parrot\">Parrot</SelectItem>\n        <SelectItem key=\"Penguin\">Penguin</SelectItem>\n        <SelectItem key=\"Ostrich\">Ostrich</SelectItem>\n        <SelectItem key=\"Peacock\">Peacock</SelectItem>\n        <SelectItem key=\"Swan\">Swan</SelectItem>\n        <SelectItem key=\"Falcon\">Falcon</SelectItem>\n        <SelectItem key=\"Flamingo\">Flamingo</SelectItem>\n      </SelectSection>\n    </Select>\n  );\n}`,wt={\"/App.jsx\":It},K={...wt};var At=`export const animals = [\n  {key: \"cat\", label: \"Cat\"},\n  {key: \"dog\", label: \"Dog\"},\n  {key: \"elephant\", label: \"Elephant\"},\n  {key: \"lion\", label: \"Lion\"},\n  {key: \"tiger\", label: \"Tiger\"},\n  {key: \"giraffe\", label: \"Giraffe\"},\n  {key: \"dolphin\", label: \"Dolphin\"},\n  {key: \"penguin\", label: \"Penguin\"},\n  {key: \"zebra\", label: \"Zebra\"},\n  {key: \"shark\", label: \"Shark\"},\n  {key: \"whale\", label: \"Whale\"},\n  {key: \"otter\", label: \"Otter\"},\n  {key: \"crocodile\", label: \"Crocodile\"}\n];`,Ct=`import {Select, SelectItem} from \"@nextui-org/react\";\nimport {animals} from \"./data\";\n\nexport default function App() {\n  return (\n    <Select\n      label=\"Favorite Animal\"\n      placeholder=\"Select an animal\"\n      selectionMode=\"multiple\"\n      className=\"max-w-xs\"\n    >\n      {animals.map((animal) => (\n        <SelectItem key={animal.key}>\n          {animal.label}\n        </SelectItem>\n      ))}\n    </Select>\n  );\n}`,jt={\"/App.jsx\":Ct,\"/data.js\":At},H={...jt};var B=`export const animals = [\n  {key: \"cat\", label: \"Cat\"},\n  {key: \"dog\", label: \"Dog\"},\n  {key: \"elephant\", label: \"Elephant\"},\n  {key: \"lion\", label: \"Lion\"},\n  {key: \"tiger\", label: \"Tiger\"},\n  {key: \"giraffe\", label: \"Giraffe\"},\n  {key: \"dolphin\", label: \"Dolphin\"},\n  {key: \"penguin\", label: \"Penguin\"},\n  {key: \"zebra\", label: \"Zebra\"},\n  {key: \"shark\", label: \"Shark\"},\n  {key: \"whale\", label: \"Whale\"},\n  {key: \"otter\", label: \"Otter\"},\n  {key: \"crocodile\", label: \"Crocodile\"}\n];`,Nt=`import {Select, SelectItem} from \"@nextui-org/react\";\nimport {animals} from \"./data\";\n\nexport default function App() {\n  const [values, setValues] = React.useState(new Set([\"cat\", \"dog\"]));\n\n  return (\n    <div className=\"flex w-full max-w-xs flex-col gap-2\">\n      <Select\n        label=\"Favorite Animal\"\n        selectionMode=\"multiple\"\n        placeholder=\"Select an animal\"\n        selectedKeys={values}\n        className=\"max-w-xs\"\n        onSelectionChange={setValues}\n      >\n        {animals.map((animal) => (\n          <SelectItem key={animal.key}>\n            {animal.label}\n          </SelectItem>\n        ))}\n      </Select>\n      <p className=\"text-small text-default-500\">Selected: {Array.from(values).join(\", \")}</p>\n    </div>\n  );\n}`,Mt=`import {Select, SelectItem, Selection} from \"@nextui-org/react\";\nimport {animals} from \"./data\";\n\nexport default function App() {\n  const [values, setValues] = React.useState<Selection>(new Set([\"cat\", \"dog\"]));\n\n  return (\n    <div className=\"flex w-full max-w-xs flex-col gap-2\">\n      <Select\n        label=\"Favorite Animal\"\n        selectionMode=\"multiple\"\n        placeholder=\"Select an animal\"\n        selectedKeys={values}\n        className=\"max-w-xs\"\n        onSelectionChange={setValues}\n      >\n        {animals.map((animal) => (\n          <SelectItem key={animal.key}>\n            {animal.label}\n          </SelectItem>\n        ))}\n      </Select>\n      <p className=\"text-small text-default-500\">Selected: {Array.from(values).join(\", \")}</p>\n    </div>\n  );\n}`,Tt={\"/App.jsx\":Nt,\"/data.js\":B},Pt={\"/App.tsx\":Mt,\"/data.ts\":B},Z={...Tt,...Pt};var G=`export const animals = [\n  {key: \"cat\", label: \"Cat\"},\n  {key: \"dog\", label: \"Dog\"},\n  {key: \"elephant\", label: \"Elephant\"},\n  {key: \"lion\", label: \"Lion\"},\n  {key: \"tiger\", label: \"Tiger\"},\n  {key: \"giraffe\", label: \"Giraffe\"},\n  {key: \"dolphin\", label: \"Dolphin\"},\n  {key: \"penguin\", label: \"Penguin\"},\n  {key: \"zebra\", label: \"Zebra\"},\n  {key: \"shark\", label: \"Shark\"},\n  {key: \"whale\", label: \"Whale\"},\n  {key: \"otter\", label: \"Otter\"},\n  {key: \"crocodile\", label: \"Crocodile\"}\n];`,Dt=`import {Select, SelectItem} from \"@nextui-org/react\";\nimport {animals} from \"./data\";\n\nexport default function App() {\n  const [values, setValues] = React.useState(new Set([]));\n\n  const handleSelectionChange = (e) => {\n    setValues(new Set(e.target.value.split(\",\")));\n  };\n\n  return (\n    <div className=\"flex w-full max-w-xs flex-col gap-2\">\n      <Select\n        label=\"Favorite Animal\"\n        selectionMode=\"multiple\"\n        placeholder=\"Select an animal\"\n        selectedKeys={values}\n        className=\"max-w-xs\"\n        onChange={handleSelectionChange}\n      >\n        {animals.map((animal) => (\n          <SelectItem key={animal.key}>\n            {animal.label}\n          </SelectItem>\n        ))}\n      </Select>\n      <p className=\"text-small text-default-500\">Selected: {Array.from(values).join(\", \")}</p>\n    </div>      \n  );\n}`,Lt=`import {Select, SelectItem, Selection} from \"@nextui-org/react\";\nimport {animals} from \"./data\";\n\nexport default function App() {\n  const [values, setValues] = React.useState<Selection>(new Set([]));\n\n  const handleSelectionChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setValues(new Set(e.target.value.split(\",\")));\n  };\n\n  return (\n    <div className=\"flex w-full max-w-xs flex-col gap-2\">\n      <Select\n        label=\"Favorite Animal\"\n        selectionMode=\"multiple\"\n        placeholder=\"Select an animal\"\n        selectedKeys={values}\n        className=\"max-w-xs\"\n        onChange={handleSelectionChange}\n      >\n        {animals.map((animal) => (\n          <SelectItem key={animal.key}>\n            {animal.label}\n          </SelectItem>\n        ))}\n      </Select>\n      <p className=\"text-small text-default-500\">Selected: {Array.from(values).join(\", \")}</p>\n    </div>      \n  );\n}`,Rt={\"/App.jsx\":Dt,\"/data.js\":G},Ot={\"/App.tsx\":Lt,\"/data.ts\":G},q={...Rt,...Ot};var U=`export const users = [\n  {\n    id: 1,\n    name: \"Tony Reichert\",\n    role: \"CEO\",\n    team: \"Management\",\n    status: \"active\",\n    age: \"29\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/male/1.png\",\n    email: \"tony.reichert@example.com\",\n  },\n  {\n    id: 2,\n    name: \"Zoey Lang\",\n    role: \"Tech Lead\",\n    team: \"Development\",\n    status: \"paused\",\n    age: \"25\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/female/1.png\",\n    email: \"zoey.lang@example.com\",\n  },\n  {\n    id: 3,\n    name: \"Jane Fisher\",\n    role: \"Sr. Dev\",\n    team: \"Development\",\n    status: \"active\",\n    age: \"22\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/female/2.png\",\n    email: \"jane.fisher@example.com\",\n  },\n  {\n    id: 4,\n    name: \"William Howard\",\n    role: \"C.M.\",\n    team: \"Marketing\",\n    status: \"vacation\",\n    age: \"28\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/male/2.png\",\n    email: \"william.howard@example.com\",\n  },\n  {\n    id: 5,\n    name: \"Kristen Copper\",\n    role: \"S. Manager\",\n    team: \"Sales\",\n    status: \"active\",\n    age: \"24\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/female/3.png\",\n    email: \"kristen.cooper@example.com\",\n  },\n  {\n    id: 6,\n    name: \"Brian Kim\",\n    role: \"P. Manager\",\n    team: \"Management\",\n    age: \"29\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/male/3.png\",\n    email: \"brian.kim@example.com\",\n    status: \"active\",\n  },\n  {\n    id: 7,\n    name: \"Michael Hunt\",\n    role: \"Designer\",\n    team: \"Design\",\n    status: \"paused\",\n    age: \"27\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/male/4.png\",\n    email: \"michael.hunt@example.com\",\n  },\n  {\n    id: 8,\n    name: \"Samantha Brooks\",\n    role: \"HR Manager\",\n    team: \"HR\",\n    status: \"active\",\n    age: \"31\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/female/4.png\",\n    email: \"samantha.brooks@example.com\",\n  },\n  {\n    id: 9,\n    name: \"Frank Harrison\",\n    role: \"F. Manager\",\n    team: \"Finance\",\n    status: \"vacation\",\n    age: \"33\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/male/5.png\",\n    email: \"frank.harrison@example.com\",\n  },\n  {\n    id: 10,\n    name: \"Emma Adams\",\n    role: \"Ops Manager\",\n    team: \"Operations\",\n    status: \"active\",\n    age: \"35\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/female/5.png\",\n    email: \"emma.adams@example.com\",\n  },\n  {\n    id: 11,\n    name: \"Brandon Stevens\",\n    role: \"Jr. Dev\",\n    team: \"Development\",\n    status: \"active\",\n    age: \"22\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/male/7.png\",\n    email: \"brandon.stevens@example.com\",\n  },\n  {\n    id: 12,\n    name: \"Megan Richards\",\n    role: \"P. Manager\",\n    team: \"Product\",\n    status: \"paused\",\n    age: \"28\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/female/7.png\",\n    email: \"megan.richards@example.com\",\n  },\n  {\n    id: 13,\n    name: \"Oliver Scott\",\n    role: \"S. Manager\",\n    team: \"Security\",\n    status: \"active\",\n    age: \"37\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/male/8.png\",\n    email: \"oliver.scott@example.com\",\n  },\n  {\n    id: 14,\n    name: \"Grace Allen\",\n    role: \"M. Specialist\",\n    team: \"Marketing\",\n    status: \"active\",\n    age: \"30\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/female/8.png\",\n    email: \"grace.allen@example.com\",\n  },\n  {\n    id: 15,\n    name: \"Noah Carter\",\n    role: \"IT Specialist\",\n    team: \"I. Technology\",\n    status: \"paused\",\n    age: \"31\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/male/9.png\",\n    email: \"noah.carter@example.com\",\n  },\n  {\n    id: 16,\n    name: \"Ava Perez\",\n    role: \"Manager\",\n    team: \"Sales\",\n    status: \"active\",\n    age: \"29\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/female/9.png\",\n    email: \"ava.perez@example.com\",\n  },\n  {\n    id: 17,\n    name: \"Liam Johnson\",\n    role: \"Data Analyst\",\n    team: \"Analysis\",\n    status: \"active\",\n    age: \"28\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/male/11.png\",\n    email: \"liam.johnson@example.com\",\n  },\n  {\n    id: 18,\n    name: \"Sophia Taylor\",\n    role: \"QA Analyst\",\n    team: \"Testing\",\n    status: \"active\",\n    age: \"27\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/female/11.png\",\n    email: \"sophia.taylor@example.com\",\n  },\n  {\n    id: 19,\n    name: \"Lucas Harris\",\n    role: \"Administrator\",\n    team: \"Information Technology\",\n    status: \"paused\",\n    age: \"32\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/male/12.png\",\n    email: \"lucas.harris@example.com\",\n  },\n  {\n    id: 20,\n    name: \"Mia Robinson\",\n    role: \"Coordinator\",\n    team: \"Operations\",\n    status: \"active\",\n    age: \"26\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/female/12.png\",\n    email: \"mia.robinson@example.com\",\n  },\n];`,zt=`import {Select, SelectItem, Avatar, Chip} from \"@nextui-org/react\";\nimport {users} from \"./data\";\n\nexport default function App() {\n  return (\n    <Select\n      items={users}\n      label=\"Assigned to\"\n      variant=\"bordered\"\n      isMultiline={true}\n      selectionMode=\"multiple\"\n      placeholder=\"Select a user\"\n      labelPlacement=\"outside\"\n      classNames={{\n        base: \"max-w-xs\",\n        trigger: \"min-h-12 py-2\",\n      }}\n      renderValue={(items) => {\n        return (\n          <div className=\"flex flex-wrap gap-2\">\n            {items.map((item) => (\n              <Chip key={item.key}>{item.data.name}</Chip>\n            ))}\n          </div>\n        );\n      }}\n    >\n      {(user) => (\n        <SelectItem key={user.id} textValue={user.name}>\n          <div className=\"flex gap-2 items-center\">\n            <Avatar alt={user.name} className=\"flex-shrink-0\" size=\"sm\" src={user.avatar} />\n            <div className=\"flex flex-col\">\n              <span className=\"text-small\">{user.name}</span>\n              <span className=\"text-tiny text-default-400\">{user.email}</span>\n            </div>\n          </div>\n        </SelectItem>\n      )}\n    </Select>\n  );\n}`,Wt=`import {Select, SelectItem, Avatar, Chip, SelectedItems} from \"@nextui-org/react\";\nimport {users} from \"./data\";\n\ntype User = {\n  id: number;\n  name: string;\n  role: string;\n  team: string;\n  status: string;\n  age: string;\n  avatar: string;\n  email: string;\n};\n\nexport default function App() {\n  return (\n    <Select\n      items={users}\n      label=\"Assigned to\"\n      variant=\"bordered\"\n      isMultiline={true}\n      selectionMode=\"multiple\"\n      placeholder=\"Select a user\"\n      labelPlacement=\"outside\"\n      classNames={{\n        base: \"max-w-xs\",\n        trigger: \"min-h-12 py-2\",\n      }}\n      renderValue={(items: SelectedItems<User>) => {\n        return (\n          <div className=\"flex flex-wrap gap-2\">\n            {items.map((item) => (\n              <Chip key={item.key}>{item.data.name}</Chip>\n            ))}\n          </div>\n        );\n      }}\n    >\n      {(user) => (\n        <SelectItem key={user.id} textValue={user.name}>\n          <div className=\"flex gap-2 items-center\">\n            <Avatar alt={user.name} className=\"flex-shrink-0\" size=\"sm\" src={user.avatar} />\n            <div className=\"flex flex-col\">\n              <span className=\"text-small\">{user.name}</span>\n              <span className=\"text-tiny text-default-400\">{user.email}</span>\n            </div>\n          </div>\n        </SelectItem>\n      )}\n    </Select>\n  );\n}`,Ft={\"/App.jsx\":zt,\"/data.js\":U},Et={\"/App.tsx\":Wt,\"/data.js\":U},Y={...Ft,...Et};var Vt=`export const animals = [\n  {key: \"cat\", label: \"Cat\"},\n  {key: \"dog\", label: \"Dog\"},\n  {key: \"elephant\", label: \"Elephant\"},\n  {key: \"lion\", label: \"Lion\"},\n  {key: \"tiger\", label: \"Tiger\"},\n  {key: \"giraffe\", label: \"Giraffe\"},\n  {key: \"dolphin\", label: \"Dolphin\"},\n  {key: \"penguin\", label: \"Penguin\"},\n  {key: \"zebra\", label: \"Zebra\"},\n  {key: \"shark\", label: \"Shark\"},\n  {key: \"whale\", label: \"Whale\"},\n  {key: \"otter\", label: \"Otter\"},\n  {key: \"crocodile\", label: \"Crocodile\"}\n];`,Kt=`export const SelectorIcon = (props) => (\n    <svg\n      aria-hidden=\"true\"\n      fill=\"none\"\n      focusable=\"false\"\n      height=\"1em\"\n      role=\"presentation\"\n      stroke=\"currentColor\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"1.5\"\n      viewBox=\"0 0 24 24\"\n      width=\"1em\"\n      {...props}\n    >\n      <path d=\"M0 0h24v24H0z\" fill=\"none\" stroke=\"none\" />\n      <path d=\"M8 9l4 -4l4 4\" />\n      <path d=\"M16 15l-4 4l-4 -4\" />\n    </svg>\n);`,Ht=`import {Select, SelectItem} from \"@nextui-org/react\";\nimport {SelectorIcon} from \"./SelectorIcon\";\nimport {animals} from \"./data\";\n\nexport default function App() {\n  return (\n    <Select\n      label=\"Favorite Animal\"\n      placeholder=\"Select an animal\"\n      labelPlacement=\"outside\"\n      className=\"max-w-xs\"\n      disableSelectorIconRotation\n      selectorIcon={<SelectorIcon />}\n    >\n      {animals.map((animal) => (\n        <SelectItem key={animal.key}>\n          {animal.label}\n        </SelectItem>\n      ))}\n    </Select>\n  );\n}`,Bt={\"/App.jsx\":Ht,\"/data.js\":Vt,\"/SelectorIcon.jsx\":Kt},J={...Bt};var Zt=`export const users = [\n  {\n    id: 1,\n    name: \"Tony Reichert\",\n    role: \"CEO\",\n    team: \"Management\",\n    status: \"active\",\n    age: \"29\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/male/1.png\",\n    email: \"tony.reichert@example.com\",\n  },\n  {\n    id: 2,\n    name: \"Zoey Lang\",\n    role: \"Tech Lead\",\n    team: \"Development\",\n    status: \"paused\",\n    age: \"25\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/female/1.png\",\n    email: \"zoey.lang@example.com\",\n  },\n  {\n    id: 3,\n    name: \"Jane Fisher\",\n    role: \"Sr. Dev\",\n    team: \"Development\",\n    status: \"active\",\n    age: \"22\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/female/2.png\",\n    email: \"jane.fisher@example.com\",\n  },\n  {\n    id: 4,\n    name: \"William Howard\",\n    role: \"C.M.\",\n    team: \"Marketing\",\n    status: \"vacation\",\n    age: \"28\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/male/2.png\",\n    email: \"william.howard@example.com\",\n  },\n  {\n    id: 5,\n    name: \"Kristen Copper\",\n    role: \"S. Manager\",\n    team: \"Sales\",\n    status: \"active\",\n    age: \"24\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/female/3.png\",\n    email: \"kristen.cooper@example.com\",\n  },\n  {\n    id: 6,\n    name: \"Brian Kim\",\n    role: \"P. Manager\",\n    team: \"Management\",\n    age: \"29\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/male/3.png\",\n    email: \"brian.kim@example.com\",\n    status: \"active\",\n  },\n  {\n    id: 7,\n    name: \"Michael Hunt\",\n    role: \"Designer\",\n    team: \"Design\",\n    status: \"paused\",\n    age: \"27\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/male/4.png\",\n    email: \"michael.hunt@example.com\",\n  },\n  {\n    id: 8,\n    name: \"Samantha Brooks\",\n    role: \"HR Manager\",\n    team: \"HR\",\n    status: \"active\",\n    age: \"31\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/female/4.png\",\n    email: \"samantha.brooks@example.com\",\n  },\n  {\n    id: 9,\n    name: \"Frank Harrison\",\n    role: \"F. Manager\",\n    team: \"Finance\",\n    status: \"vacation\",\n    age: \"33\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/male/5.png\",\n    email: \"frank.harrison@example.com\",\n  },\n  {\n    id: 10,\n    name: \"Emma Adams\",\n    role: \"Ops Manager\",\n    team: \"Operations\",\n    status: \"active\",\n    age: \"35\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/female/5.png\",\n    email: \"emma.adams@example.com\",\n  },\n  {\n    id: 11,\n    name: \"Brandon Stevens\",\n    role: \"Jr. Dev\",\n    team: \"Development\",\n    status: \"active\",\n    age: \"22\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/male/7.png\",\n    email: \"brandon.stevens@example.com\",\n  },\n  {\n    id: 12,\n    name: \"Megan Richards\",\n    role: \"P. Manager\",\n    team: \"Product\",\n    status: \"paused\",\n    age: \"28\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/female/7.png\",\n    email: \"megan.richards@example.com\",\n  },\n  {\n    id: 13,\n    name: \"Oliver Scott\",\n    role: \"S. Manager\",\n    team: \"Security\",\n    status: \"active\",\n    age: \"37\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/male/8.png\",\n    email: \"oliver.scott@example.com\",\n  },\n  {\n    id: 14,\n    name: \"Grace Allen\",\n    role: \"M. Specialist\",\n    team: \"Marketing\",\n    status: \"active\",\n    age: \"30\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/female/8.png\",\n    email: \"grace.allen@example.com\",\n  },\n  {\n    id: 15,\n    name: \"Noah Carter\",\n    role: \"IT Specialist\",\n    team: \"I. Technology\",\n    status: \"paused\",\n    age: \"31\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/male/9.png\",\n    email: \"noah.carter@example.com\",\n  },\n  {\n    id: 16,\n    name: \"Ava Perez\",\n    role: \"Manager\",\n    team: \"Sales\",\n    status: \"active\",\n    age: \"29\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/female/9.png\",\n    email: \"ava.perez@example.com\",\n  },\n  {\n    id: 17,\n    name: \"Liam Johnson\",\n    role: \"Data Analyst\",\n    team: \"Analysis\",\n    status: \"active\",\n    age: \"28\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/male/11.png\",\n    email: \"liam.johnson@example.com\",\n  },\n  {\n    id: 18,\n    name: \"Sophia Taylor\",\n    role: \"QA Analyst\",\n    team: \"Testing\",\n    status: \"active\",\n    age: \"27\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/female/11.png\",\n    email: \"sophia.taylor@example.com\",\n  },\n  {\n    id: 19,\n    name: \"Lucas Harris\",\n    role: \"Administrator\",\n    team: \"Information Technology\",\n    status: \"paused\",\n    age: \"32\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/male/12.png\",\n    email: \"lucas.harris@example.com\",\n  },\n  {\n    id: 20,\n    name: \"Mia Robinson\",\n    role: \"Coordinator\",\n    team: \"Operations\",\n    status: \"active\",\n    age: \"26\",\n    avatar: \"https://d2u8k2ocievbld.cloudfront.net/memojis/female/12.png\",\n    email: \"mia.robinson@example.com\",\n  },\n];`,Gt=`import {Select, SelectItem, Avatar} from \"@nextui-org/react\";\nimport {users} from \"./data\";\n\nexport default function App() {\n  return (\n    <Select\n      items={users}\n      label=\"Assigned to\"\n      className=\"max-w-xs\"\n      variant=\"bordered\"\n      classNames={{\n        label: \"group-data-[filled=true]:-translate-y-5\",\n        trigger: \"min-h-16\",\n        listboxWrapper: \"max-h-[400px]\",\n      }}\n      listboxProps={{\n        itemClasses: {\n          base: [\n            \"rounded-md\",\n            \"text-default-500\",\n            \"transition-opacity\",\n            \"data-[hover=true]:text-foreground\",\n            \"data-[hover=true]:bg-default-100\",\n            \"dark:data-[hover=true]:bg-default-50\",\n            \"data-[selectable=true]:focus:bg-default-50\",\n            \"data-[pressed=true]:opacity-70\",\n            \"data-[focus-visible=true]:ring-default-500\",\n          ],\n        },\n      }}\n      popoverProps={{\n        classNames: {\n          base: \"before:bg-default-200\",\n          content: \"p-0 border-small border-divider bg-background\",\n        },\n      }}\n      renderValue={(items) => {\n        return items.map((item) => (\n          <div key={item.key} className=\"flex items-center gap-2\">\n            <Avatar\n              alt={item.data.name}\n              className=\"flex-shrink-0\"\n              size=\"sm\"\n              src={item.data.avatar}\n            />\n            <div className=\"flex flex-col\">\n              <span>{item.data.name}</span>\n              <span className=\"text-default-500 text-tiny\">({item.data.email})</span>\n            </div>\n          </div>\n        ));\n      }}\n    >\n      {(user) => (\n        <SelectItem key={user.id} textValue={user.name}>\n          <div className=\"flex gap-2 items-center\">\n            <Avatar alt={user.name} className=\"flex-shrink-0\" size=\"sm\" src={user.avatar} />\n            <div className=\"flex flex-col\">\n              <span className=\"text-small\">{user.name}</span>\n              <span className=\"text-tiny text-default-400\">{user.email}</span>\n            </div>\n          </div>\n        </SelectItem>\n      )}\n    </Select>\n  );\n}`,qt={\"/App.jsx\":Gt,\"/data.js\":Zt},_={...qt};var l={usage:f,dynamic:g,disabled:b,disabledItems:y,required:S,sizes:k,colors:v,variants:x,radius:I,labelPlacements:w,asyncLoadingItems:N,description:T,startContent:A,itemStartContent:C,withoutScrollShadow:M,errorMessage:P,singleControlled:L,singleControlledOnChange:O,openState:z,customItems:W,customRenderValue:E,sections:V,customSectionsStyle:K,multiple:H,multipleControlled:Z,multipleControlledOnChange:q,multipleWithChips:Y,customSelectorIcon:J,customStyles:_};var Ut={title:\"Select\",description:\"A select displays a collapsible list of options and allows a user to select one or more of them.\"};function Q(n){let t={a:\"a\",blockquote:\"blockquote\",code:\"code\",h1:\"h1\",h2:\"h2\",h3:\"h3\",h4:\"h4\",hr:\"hr\",li:\"li\",p:\"p\",pre:\"pre\",strong:\"strong\",table:\"table\",tbody:\"tbody\",td:\"td\",th:\"th\",thead:\"thead\",tr:\"tr\",ul:\"ul\",...n.components},{CarbonAd:i,CodeDemo:a,ComponentLinks:o,ImportTabs:m,PackageManagers:d,Spacer:s}=t;return i||r(\"CarbonAd\",!0),a||r(\"CodeDemo\",!0),o||r(\"ComponentLinks\",!0),m||r(\"ImportTabs\",!0),d||r(\"PackageManagers\",!0),s||r(\"Spacer\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(t.h1,{id:\"select\",children:\"Select\"}),`\n`,(0,e.jsx)(t.p,{children:\"A select displays a collapsible list of options and allows a user to select one or more of them.\"}),`\n`,(0,e.jsx)(o,{component:\"select\",reactAriaHook:\"useSelect\"}),`\n`,(0,e.jsx)(t.hr,{}),`\n`,(0,e.jsx)(i,{}),`\n`,(0,e.jsx)(t.h2,{id:\"installation\",children:\"Installation\"}),`\n`,(0,e.jsx)(d,{showGlobalInstallWarning:!0,commands:{cli:\"npx nextui-cli@latest add select\",npm:\"npm install @nextui-org/select\",yarn:\"yarn add @nextui-org/select\",pnpm:\"pnpm add @nextui-org/select\",bun:\"bun add @nextui-org/select\"}}),`\n`,(0,e.jsx)(t.h2,{id:\"import\",children:\"Import\"}),`\n`,(0,e.jsx)(t.p,{children:\"NextUI exports 3 select-related components:\"}),`\n`,(0,e.jsxs)(t.ul,{children:[`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"Select\"}),\": The main component, which is a wrapper for the other components.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"SelectSection\"}),\": The component that contains a group of select items.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"SelectItem\"}),\": The component that represents a select item.\"]}),`\n`]}),`\n`,(0,e.jsx)(m,{commands:{main:'import {Select, SelectSection, SelectItem} from \"@nextui-org/react\";',individual:'import {Select, SelectSection, SelectItem} from \"@nextui-org/select\";'}}),`\n`,(0,e.jsx)(t.h2,{id:\"usage\",children:\"Usage\"}),`\n`,(0,e.jsx)(a,{title:\"Usage\",files:l.usage}),`\n`,(0,e.jsx)(t.h3,{id:\"dynamic-items\",children:\"Dynamic items\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"Select follows the \",(0,e.jsx)(t.a,{href:\"https://react-spectrum.adobe.com/react-stately/collections.html\",children:\"Collection Components API\"}),\", accepting both static and dynamic collections.\"]}),`\n`,(0,e.jsxs)(t.ul,{children:[`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"Static\"}),\": The usage example above shows the static implementation, which can be used when the full list of options is known ahead of time.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"Dynamic\"}),\": The example below can be used when the options come from an external data source such as an API call, or update over time.\"]}),`\n`]}),`\n`,(0,e.jsx)(a,{title:\"Dynamic items\",highlightedLines:\"7\",files:l.dynamic}),`\n`,(0,e.jsx)(t.h3,{id:\"multiple-selection\",children:\"Multiple Selection\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"You can use the \",(0,e.jsx)(t.code,{children:'selectionMode=\"multiple\"'}),\" property to allow multiple selection.\"]}),`\n`,(0,e.jsx)(a,{title:\"Multiple Selection\",files:l.multiple}),`\n`,(0,e.jsx)(t.h3,{id:\"disabled\",children:\"Disabled\"}),`\n`,(0,e.jsx)(a,{title:\"Disabled\",highlightedLines:\"8\",files:l.disabled}),`\n`,(0,e.jsx)(t.h3,{id:\"disabled-items\",children:\"Disabled Items\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"You can disable specific items by using the \",(0,e.jsx)(t.code,{children:\"disabledKeys\"}),\" property.\"]}),`\n`,(0,e.jsx)(a,{title:\"Disabled Items\",highlightedLines:\"10\",files:l.disabledItems}),`\n`,(0,e.jsx)(t.h3,{id:\"required\",children:\"Required\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"If you pass the \",(0,e.jsx)(t.code,{children:\"isRequired\"}),\" property to the select, it will have a \",(0,e.jsx)(t.code,{children:\"danger\"}),` asterisk at\nthe end of the label and the select will be required.`]}),`\n`,(0,e.jsx)(a,{title:\"Required\",highlightedLines:\"8\",files:l.required}),`\n`,(0,e.jsx)(t.h3,{id:\"sizes\",children:\"Sizes\"}),`\n`,(0,e.jsx)(a,{title:\"Sizes\",highlightedLines:\"13,24\",files:l.sizes}),`\n`,(0,e.jsx)(t.h3,{id:\"colors\",children:\"Colors\"}),`\n`,(0,e.jsx)(a,{title:\"Colors\",files:l.colors}),`\n`,(0,e.jsx)(t.h3,{id:\"variants\",children:\"Variants\"}),`\n`,(0,e.jsx)(a,{title:\"Variants\",files:l.variants}),`\n`,(0,e.jsx)(t.h3,{id:\"radius\",children:\"Radius\"}),`\n`,(0,e.jsx)(a,{title:\"Radius\",files:l.radius}),`\n`,(0,e.jsx)(t.h3,{id:\"label-placements\",children:\"Label Placements\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"You can change the position of the label by setting the \",(0,e.jsx)(t.code,{children:\"labelPlacement\"}),\" property to \",(0,e.jsx)(t.code,{children:\"inside\"}),\", \",(0,e.jsx)(t.code,{children:\"outside\"}),\" or \",(0,e.jsx)(t.code,{children:\"outside-left\"}),\".\"]}),`\n`,(0,e.jsx)(a,{title:\"Label Placements\",highlightedLines:\"19,37\",files:l.labelPlacements}),`\n`,(0,e.jsxs)(t.blockquote,{children:[`\n`,(0,e.jsxs)(t.p,{children:[(0,e.jsx)(t.strong,{children:\"Note\"}),\": If the \",(0,e.jsx)(t.code,{children:\"label\"}),\" is not passed, the \",(0,e.jsx)(t.code,{children:\"labelPlacement\"}),\" property will be \",(0,e.jsx)(t.code,{children:\"outside\"}),\" by default.\"]}),`\n`]}),`\n`,(0,e.jsx)(t.h3,{id:\"start-content\",children:\"Start Content\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"You can use the \",(0,e.jsx)(t.code,{children:\"startContent\"}),\" and \",(0,e.jsx)(t.code,{children:\"endContent\"}),` properties to add content to the start and end of\nthe select.`]}),`\n`,(0,e.jsx)(a,{title:\"Start Content\",highlightedLines:\"13\",files:l.startContent}),`\n`,(0,e.jsx)(t.h3,{id:\"item-start--end-content\",children:\"Item Start & End Content\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"Since the \",(0,e.jsx)(t.code,{children:\"Select\"}),\" component uses the \",(0,e.jsx)(t.a,{href:\"/docs/components/listbox\",children:\"Listbox\"}),` component under the hood, you can\nuse the `,(0,e.jsx)(t.code,{children:\"startContent\"}),\" and \",(0,e.jsx)(t.code,{children:\"endContent\"}),\" properties of the \",(0,e.jsx)(t.code,{children:\"SelectItem\"}),` component to add content to the start\nand end of the select item.`]}),`\n`,(0,e.jsx)(a,{title:\"Item Start Content\",files:l.itemStartContent}),`\n`,(0,e.jsx)(t.h3,{id:\"custom-selector-icon\",children:\"Custom Selector Icon\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"By default the select uses a \",(0,e.jsx)(t.code,{children:\"chevron-down\"}),` icon as the selector icon which rotates when the select is open. You can\ncustomize this icon by passing a custom one to the `,(0,e.jsx)(t.code,{children:\"selectorIcon\"}),\" property.\"]}),`\n`,(0,e.jsx)(a,{title:\"Custom Selector Icon\",files:l.customSelectorIcon}),`\n`,(0,e.jsxs)(t.blockquote,{children:[`\n`,(0,e.jsxs)(t.p,{children:[(0,e.jsx)(t.strong,{children:\"Note\"}),\": Use the \",(0,e.jsx)(t.code,{children:\"disableSelectorIconRotation\"}),\" property to disable the rotation of the icon.\"]}),`\n`]}),`\n`,(0,e.jsx)(t.h3,{id:\"without-scroll-shadow\",children:\"Without Scroll Shadow\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"Select component uses the \",(0,e.jsx)(t.a,{href:\"/docs/components/scroll-shadow\",children:\"ScrollShadow\"}),` under the hood to show a shadow when the select content is scrollable.\nYou can disable this shadow by passing using the `,(0,e.jsx)(t.code,{children:\"scrollShadowProps\"}),\" property.\"]}),`\n`,(0,e.jsx)(a,{title:\"Without Scroll Shadow\",files:l.withoutScrollShadow}),`\n`,(0,e.jsxs)(t.blockquote,{children:[`\n`,(0,e.jsxs)(t.p,{children:[(0,e.jsx)(t.strong,{children:\"Note\"}),\": You can also use the \",(0,e.jsx)(t.code,{children:\"showScrollIndicators\"}),\" property to disable the scroll indicators.\"]}),`\n`]}),`\n`,(0,e.jsx)(t.h3,{id:\"with-description\",children:\"With Description\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"You can add a description to the select by passing the \",(0,e.jsx)(t.code,{children:\"description\"}),\" property.\"]}),`\n`,(0,e.jsx)(a,{title:\"With Description\",files:l.description}),`\n`,(0,e.jsx)(t.h3,{id:\"with-error-message\",children:\"With Error Message\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"You can combine the \",(0,e.jsx)(t.code,{children:\"isInvalid\"}),\" and \",(0,e.jsx)(t.code,{children:\"errorMessage\"}),\" properties to show an invalid select.\"]}),`\n`,(0,e.jsx)(a,{title:\"With Error Message\",files:l.errorMessage}),`\n`,(0,e.jsx)(t.h3,{id:\"controlled\",children:\"Controlled\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"You can use the \",(0,e.jsx)(t.code,{children:\"selectedKeys\"}),\" and \",(0,e.jsx)(t.code,{children:\"onSelectionChange\"}),\" / \",(0,e.jsx)(t.code,{children:\"onChange\"}),\" properties to control the select value.\"]}),`\n`,(0,e.jsxs)(t.p,{children:[\"Using \",(0,e.jsx)(t.code,{children:\"onSelectionChange\"}),\":\"]}),`\n`,(0,e.jsx)(a,{title:\"Controlled with onSelectionChange\",files:l.singleControlled}),`\n`,(0,e.jsxs)(t.p,{children:[\"Using \",(0,e.jsx)(t.code,{children:\"onChange\"}),\":\"]}),`\n`,(0,e.jsx)(a,{title:\"Controlled with onChange\",files:l.singleControlledOnChange}),`\n`,(0,e.jsx)(t.h3,{id:\"controlling-the-open-state\",children:\"Controlling the open state\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"You can control the open state of the select by using the \",(0,e.jsx)(t.code,{children:\"isOpen\"}),\" and \",(0,e.jsx)(t.code,{children:\"onOpenChange\"}),\" / \",(0,e.jsx)(t.code,{children:\"onClose\"}),\" properties.\"]}),`\n`,(0,e.jsx)(a,{title:\"Controlling the open state\",files:l.openState}),`\n`,(0,e.jsx)(t.h3,{id:\"custom-items\",children:\"Custom Items\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"You can customize the select items by modifying the \",(0,e.jsx)(t.code,{children:\"SelectItem\"}),\" children.\"]}),`\n`,(0,e.jsx)(a,{title:\"Custom Items\",files:l.customItems}),`\n`,(0,e.jsx)(t.h3,{id:\"custom-render-value\",children:\"Custom Render Value\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"By default the select will render the selected item's text value, but you can customize this by passing a \",(0,e.jsx)(t.code,{children:\"renderValue\"}),\" function.\"]}),`\n`,(0,e.jsx)(a,{title:\"Custom Render Value\",files:l.customRenderValue}),`\n`,(0,e.jsxs)(t.p,{children:[\"The \",(0,e.jsx)(t.code,{children:\"renderValue\"}),` function receives the selected items as a parameter and must return a\n`,(0,e.jsx)(t.code,{children:\"ReactNode\"}),\". Check the \",(0,e.jsx)(t.a,{href:\"#render-value-function\",children:\"Render Value Function\"}),\" section for more details.\"]}),`\n`,(0,e.jsx)(t.h3,{id:\"asynchronous-loading\",children:\"Asynchronous Loading\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"Select supports asynchronous loading, in the example below we are using a custom hook to fetch the \",(0,e.jsx)(t.a,{href:\"https://pokeapi.co/api/v2/pokemon\",children:\"Pokemon API\"}),\" data in combination with the \",(0,e.jsx)(t.code,{children:\"useInfiniteScroll\"}),\" hook to load more data when the user reaches the end of the list.\"]}),`\n`,(0,e.jsxs)(t.p,{children:[\"The \",(0,e.jsx)(t.code,{children:\"isLoading\"}),\" prop is used to show a loading indicator instead of the selector icon when the data is being fetched.\"]}),`\n`,(0,e.jsx)(d,{commands:{npm:\"npm install @nextui-org/use-infinite-scroll\",yarn:\"yarn add @nextui-org/use-infinite-scroll\",pnpm:\"pnpm add @nextui-org/use-infinite-scroll\"}}),`\n`,(0,e.jsx)(t.pre,{children:(0,e.jsx)(t.code,{className:\"language-jsx\",children:`import {useInfiniteScroll} from \"@nextui-org/use-infinite-scroll\";\n`})}),`\n`,(0,e.jsx)(s,{y:2}),`\n`,(0,e.jsx)(a,{asIframe:!0,typescriptStrict:!0,title:\"Asynchronous Loading\",hideWindowActions:!0,resizeEnabled:!1,displayMode:\"always\",files:l.asyncLoadingItems,previewHeight:\"400px\",iframeSrc:\"/examples/select/async-items-loading\"}),`\n`,(0,e.jsx)(t.h3,{id:\"with-sections\",children:\"With Sections\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"You can use the \",(0,e.jsx)(t.code,{children:\"SelectSection\"}),\" component to group select items.\"]}),`\n`,(0,e.jsx)(a,{title:\"With Sections\",files:l.sections}),`\n`,(0,e.jsx)(t.h3,{id:\"custom-sections-style\",children:\"Custom Sections Style\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"You can customize the sections style by using the \",(0,e.jsx)(t.code,{children:\"classNames\"}),\" property of the \",(0,e.jsx)(t.code,{children:\"SelectSection\"}),\" component.\"]}),`\n`,(0,e.jsx)(a,{title:\"Custom Sections Style\",files:l.customSectionsStyle}),`\n`,(0,e.jsx)(t.h3,{id:\"multiple-select-controlled\",children:\"Multiple Select Controlled\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"You can use the same properties as the single select to control the multiple select, \",(0,e.jsx)(t.code,{children:\"selectedKeys\"}),\" and \",(0,e.jsx)(t.code,{children:\"onSelectionChange\"}),\" / \",(0,e.jsx)(t.code,{children:\"onChange\"}),\".\"]}),`\n`,(0,e.jsxs)(t.p,{children:[\"Using \",(0,e.jsx)(t.code,{children:\"onSelectionChange\"}),\":\"]}),`\n`,(0,e.jsx)(a,{title:\"Multiple Selection Controlled with onSelectionChange\",files:l.multipleControlled}),`\n`,(0,e.jsxs)(t.p,{children:[\"Using \",(0,e.jsx)(t.code,{children:\"onChange\"}),\":\"]}),`\n`,(0,e.jsx)(a,{title:\"Multiple Selection Controlled with onChange\",files:l.multipleControlledOnChange}),`\n`,(0,e.jsx)(t.h3,{id:\"multiple-with-chips\",children:\"Multiple With Chips\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"You can render any component as the select value by using the \",(0,e.jsx)(t.code,{children:\"renderValue\"}),` property. In this example we are\nusing the `,(0,e.jsx)(t.a,{href:\"/docs/components/chip\",children:\"Chip\"}),\" component to render the selected items.\"]}),`\n`,(0,e.jsx)(a,{title:\"Multiple Selection with Chips\",files:l.multipleWithChips}),`\n`,(0,e.jsxs)(t.blockquote,{children:[`\n`,(0,e.jsxs)(t.p,{children:[(0,e.jsx)(t.strong,{children:\"Note\"}),\": Make sure to pass the \",(0,e.jsx)(t.code,{children:\"isMultiline\"}),\" property to the \",(0,e.jsx)(t.code,{children:\"Select\"}),\" component to allow the chips to wrap.\"]}),`\n`]}),`\n`,(0,e.jsxs)(t.p,{children:[\"The \",(0,e.jsx)(t.code,{children:\"renderValue\"}),` function receives the selected items as a parameter and must return a\n`,(0,e.jsx)(t.code,{children:\"ReactNode\"}),\". Check the \",(0,e.jsx)(t.a,{href:\"#render-value-function\",children:\"Render Value Function\"}),\" section for more details.\"]}),`\n`,(0,e.jsx)(t.h3,{id:\"customizing-the-select\",children:\"Customizing the select\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"You can customize any slot of the select by using the \",(0,e.jsx)(t.code,{children:\"classNames\"}),` property. Select\ncomponent also provides the `,(0,e.jsx)(t.a,{href:\"/docs/components/popover#api\",children:\"popoverProps\"}),\" and \",(0,e.jsx)(t.a,{href:\"/docs/components/listbox#api\",children:\"listboxProps\"}),` properties to customize\nthe popover and listbox components.`]}),`\n`,(0,e.jsx)(a,{title:\"Custom Styles\",files:l.customStyles}),`\n`,(0,e.jsx)(t.h2,{id:\"slots\",children:\"Slots\"}),`\n`,(0,e.jsxs)(t.ul,{children:[`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"base\"}),\": The main wrapper of the select. This wraps the rest of the slots.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"label\"}),\": The label of the select.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"mainWrapper\"}),\": Wraps the \",(0,e.jsx)(t.code,{children:\"helperWrapper\"}),\" and the \",(0,e.jsx)(t.code,{children:\"trigger\"}),\" slots.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"trigger\"}),\": The trigger of the select. This wraps the label the inner wrapper and the selector icon.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"innerWrapper\"}),\": The wrapper of the select content. This wraps the start/end content and the select value.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"selectorIcon\"}),\": The selector icon of the select. This is the icon that rotates when the select is open (\",(0,e.jsx)(t.code,{children:\"data-open\"}),\").\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"value\"}),\": The select value. This is also the slot that wraps the \",(0,e.jsx)(t.code,{children:\"renderValue\"}),\" function result.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"listboxWrapper\"}),\": The wrapper of the listbox. This wraps the listbox component, this slot is used on top of the scroll shadow component.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"listbox\"}),\": The listbox component. This is the component that wraps the select items.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"popoverContent\"}),\": The popover content slot. Use this to modify the popover content styles.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"helperWrapper\"}),\": The wrapper of the helper text. This wraps the helper text and the error message.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"description\"}),\": The description of the select.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"errorMessage\"}),\": The error message of the select.\"]}),`\n`]}),`\n`,(0,e.jsx)(t.h2,{id:\"data-attributes\",children:\"Data Attributes\"}),`\n`,(0,e.jsxs)(t.p,{children:[(0,e.jsx)(t.code,{children:\"Select\"}),\" has the following attributes on the \",(0,e.jsx)(t.code,{children:\"base\"}),\" element:\"]}),`\n`,(0,e.jsxs)(t.ul,{children:[`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"data-filled\"}),`:\nIndicates if the select has a value, is focused, has start/end content or is open.`]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"data-has-value\"}),`:\nIndicates if the select has selected item(s).`]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"data-has-label\"}),`:\nIndicates if the select has a label. Based on `,(0,e.jsx)(t.code,{children:\"label\"}),\" prop.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"data-has-helper\"}),`:\nIndicates if the select has helper text. Based on `,(0,e.jsx)(t.code,{children:\"errorMessage\"}),\" or \",(0,e.jsx)(t.code,{children:\"description\"}),\" prop.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"data-invalid\"}),`:\nIndicates if the select is invalid. Based on `,(0,e.jsx)(t.code,{children:\"isInvalid\"}),\" prop.\"]}),`\n`]}),`\n`,(0,e.jsxs)(t.p,{children:[(0,e.jsx)(t.code,{children:\"Select\"}),\" has the following attributes on the \",(0,e.jsx)(t.code,{children:\"trigger\"}),\" element:\"]}),`\n`,(0,e.jsxs)(t.ul,{children:[`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"data-open\"}),`:\nIndicates if the select is open.`]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"data-disabled\"}),`:\nWhen the select trigger is disabled. Based on select `,(0,e.jsx)(t.code,{children:\"isDisabled\"}),\" prop.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"data-focus\"}),`:\nWhen the select trigger is being focused. Based on `,(0,e.jsx)(t.a,{href:\"https://react-spectrum.adobe.com/react-aria/useFocusRing.html\",children:\"useFocusRing\"}),\".\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"data-focus-visible\"}),`:\nWhen the select trigger is being focused with the keyboard. Based on `,(0,e.jsx)(t.a,{href:\"https://react-spectrum.adobe.com/react-aria/useFocusRing.html\",children:\"useFocusRing\"}),\".\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"data-pressed\"}),`:\nWhen the select trigger is pressed. Based on `,(0,e.jsx)(t.a,{href:\"https://react-spectrum.adobe.com/react-aria/usePress.html\",children:\"usePress\"})]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"data-hover\"}),`:\nWhen the select trigger is being hovered. Based on `,(0,e.jsx)(t.a,{href:\"https://react-spectrum.adobe.com/react-aria/useHover.html\",children:\"useHover\"})]}),`\n`]}),`\n`,(0,e.jsxs)(t.p,{children:[(0,e.jsx)(t.code,{children:\"Select\"}),\" has the following attributes on the \",(0,e.jsx)(t.code,{children:\"selectorIcon\"}),\" element:\"]}),`\n`,(0,e.jsxs)(t.ul,{children:[`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"data-open\"}),`:\nIndicates if the select is open.`]}),`\n`]}),`\n`,(0,e.jsxs)(t.p,{children:[(0,e.jsx)(t.code,{children:\"SelectItem\"}),\" has the following attributes on the \",(0,e.jsx)(t.code,{children:\"base\"}),\" element:\"]}),`\n`,(0,e.jsxs)(t.ul,{children:[`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"data-disabled\"}),`:\nWhen the select item is disabled. Based on select `,(0,e.jsx)(t.code,{children:\"disabledKeys\"}),\" prop.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"data-selected\"}),`:\nWhen the select item is selected. Based on select `,(0,e.jsx)(t.code,{children:\"selectedKeys\"}),\" prop.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"data-hover\"}),`:\nWhen the select item is being hovered. Based on `,(0,e.jsx)(t.a,{href:\"https://react-spectrum.adobe.com/react-aria/useHover.html\",children:\"useHover\"})]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"data-pressed\"}),`:\nWhen the select item is pressed. Based on `,(0,e.jsx)(t.a,{href:\"https://react-spectrum.adobe.com/react-aria/usePress.html\",children:\"usePress\"})]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"data-focus\"}),`:\nWhen the select item is being focused. Based on `,(0,e.jsx)(t.a,{href:\"https://react-spectrum.adobe.com/react-aria/useFocusRing.html\",children:\"useFocusRing\"}),\".\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.strong,{children:\"data-focus-visible\"}),`:\nWhen the select item is being focused with the keyboard. Based on `,(0,e.jsx)(t.a,{href:\"https://react-spectrum.adobe.com/react-aria/useFocusRing.html\",children:\"useFocusRing\"}),\".\"]}),`\n`]}),`\n`,(0,e.jsx)(s,{y:4}),`\n`,(0,e.jsx)(t.h2,{id:\"accessibility\",children:\"Accessibility\"}),`\n`,(0,e.jsxs)(t.ul,{children:[`\n`,(0,e.jsxs)(t.li,{children:[\"Exposed to assistive technology as a button with a listbox popup using ARIA (combined with \",(0,e.jsx)(t.a,{href:\"/docs/components/listbox\",children:\"Listbox\"}),\").\"]}),`\n`,(0,e.jsx)(t.li,{children:\"Support for selecting a single option.\"}),`\n`,(0,e.jsx)(t.li,{children:\"Support for selecting multiple options.\"}),`\n`,(0,e.jsx)(t.li,{children:\"Support for disabled options.\"}),`\n`,(0,e.jsx)(t.li,{children:\"Support for sections.\"}),`\n`,(0,e.jsx)(t.li,{children:\"Labeling support for accessibility.\"}),`\n`,(0,e.jsx)(t.li,{children:\"Support for description and error message help text linked to the input via ARIA.\"}),`\n`,(0,e.jsx)(t.li,{children:\"Support for mouse, touch, and keyboard interactions.\"}),`\n`,(0,e.jsx)(t.li,{children:\"Tab stop focus management.\"}),`\n`,(0,e.jsx)(t.li,{children:\"Keyboard support for opening the listbox using the arrow keys, including automatically focusing the first or last item accordingly.\"}),`\n`,(0,e.jsx)(t.li,{children:\"Typeahead to allow selecting options by typing text, even without opening the listbox.\"}),`\n`,(0,e.jsxs)(t.li,{children:[\"Browser autofill integration via a hidden native \",(0,e.jsx)(t.code,{children:\"<select>\"}),\" element.\"]}),`\n`,(0,e.jsx)(t.li,{children:\"Support for mobile form navigation via software keyboard.\"}),`\n`,(0,e.jsx)(t.li,{children:\"Mobile screen reader listbox dismissal support.\"}),`\n`]}),`\n`,(0,e.jsx)(s,{y:4}),`\n`,(0,e.jsx)(t.h2,{id:\"api\",children:\"API\"}),`\n`,(0,e.jsx)(t.h3,{id:\"select-props\",children:\"Select Props\"}),`\n`,(0,e.jsxs)(t.table,{children:[(0,e.jsx)(t.thead,{children:(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.th,{children:\"Attribute\"}),(0,e.jsx)(t.th,{children:\"Type\"}),(0,e.jsx)(t.th,{children:\"Description\"}),(0,e.jsx)(t.th,{children:\"Default\"})]})}),(0,e.jsxs)(t.tbody,{children:[(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"children*\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"ReactNode[]\"})}),(0,e.jsxs)(t.td,{children:[\"The children to render. Usually a list of \",(0,e.jsx)(t.code,{children:\"SelectItem\"}),\" and \",(0,e.jsx)(t.code,{children:\"SelectSection\"}),\" elements.\"]}),(0,e.jsx)(t.td,{children:\"-\"})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"items\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\",children:(0,e.jsx)(t.code,{children:\"Iterable<T>\"})})}),(0,e.jsx)(t.td,{children:\"Item objects in the select. (dynamic)\"}),(0,e.jsx)(t.td,{children:\"-\"})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"selectionMode\"}),(0,e.jsxs)(t.td,{children:[(0,e.jsx)(t.code,{children:\"single\"}),\" | \",(0,e.jsx)(t.code,{children:\"multiple\"})]}),(0,e.jsx)(t.td,{children:\"The type of selection that is allowed in the collection.\"}),(0,e.jsx)(t.td,{children:\"-\"})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"selectedKeys\"}),(0,e.jsxs)(t.td,{children:[(0,e.jsx)(t.code,{children:\"all\"}),\" | \",(0,e.jsx)(t.code,{children:\"Iterable<React.Key>\"})]}),(0,e.jsx)(t.td,{children:\"The currently selected keys in the collection (controlled).\"}),(0,e.jsx)(t.td,{children:\"-\"})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"disabledKeys\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"Iterable<React.Key>\"})}),(0,e.jsx)(t.td,{children:\"The item keys that are disabled. These items cannot be selected, focused, or otherwise interacted with.\"}),(0,e.jsx)(t.td,{children:\"-\"})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"defaultSelectedKeys\"}),(0,e.jsxs)(t.td,{children:[(0,e.jsx)(t.code,{children:\"all\"}),\" | \",(0,e.jsx)(t.code,{children:\"Iterable<React.Key>\"})]}),(0,e.jsx)(t.td,{children:\"The initial selected keys in the collection (uncontrolled).\"}),(0,e.jsx)(t.td,{children:\"-\"})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"variant\"}),(0,e.jsxs)(t.td,{children:[(0,e.jsx)(t.code,{children:\"flat\"}),\" | \",(0,e.jsx)(t.code,{children:\"bordered\"}),\" | \",(0,e.jsx)(t.code,{children:\"faded\"}),\" | \",(0,e.jsx)(t.code,{children:\"underlined\"})]}),(0,e.jsx)(t.td,{children:\"The variant of the select.\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"flat\"})})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"color\"}),(0,e.jsxs)(t.td,{children:[(0,e.jsx)(t.code,{children:\"default\"}),\" | \",(0,e.jsx)(t.code,{children:\"primary\"}),\" | \",(0,e.jsx)(t.code,{children:\"secondary\"}),\" | \",(0,e.jsx)(t.code,{children:\"success\"}),\" | \",(0,e.jsx)(t.code,{children:\"warning\"}),\" | \",(0,e.jsx)(t.code,{children:\"danger\"})]}),(0,e.jsx)(t.td,{children:\"The color of the select.\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"default\"})})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"size\"}),(0,e.jsxs)(t.td,{children:[(0,e.jsx)(t.code,{children:\"sm\"}),\" | \",(0,e.jsx)(t.code,{children:\"md\"}),\" | \",(0,e.jsx)(t.code,{children:\"lg\"})]}),(0,e.jsx)(t.td,{children:\"The size of the select.\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"md\"})})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"radius\"}),(0,e.jsxs)(t.td,{children:[(0,e.jsx)(t.code,{children:\"none\"}),\" | \",(0,e.jsx)(t.code,{children:\"sm\"}),\" | \",(0,e.jsx)(t.code,{children:\"md\"}),\" | \",(0,e.jsx)(t.code,{children:\"lg\"}),\" | \",(0,e.jsx)(t.code,{children:\"full\"})]}),(0,e.jsx)(t.td,{children:\"The radius of the select.\"}),(0,e.jsx)(t.td,{children:\"-\"})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"placeholder\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"string\"})}),(0,e.jsx)(t.td,{children:\"The placeholder of the select.\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"Select an option\"})})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"labelPlacement\"}),(0,e.jsxs)(t.td,{children:[(0,e.jsx)(t.code,{children:\"inside\"}),\" | \",(0,e.jsx)(t.code,{children:\"outside\"}),\" | \",(0,e.jsx)(t.code,{children:\"outside-left\"})]}),(0,e.jsx)(t.td,{children:\"The position of the label.\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"inside\"})})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"label\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"ReactNode\"})}),(0,e.jsx)(t.td,{children:\"The content to display as the label.\"}),(0,e.jsx)(t.td,{children:\"-\"})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"description\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"ReactNode\"})}),(0,e.jsx)(t.td,{children:\"A description for the select. Provides a hint such as specific requirements for what to choose.\"}),(0,e.jsx)(t.td,{children:\"-\"})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"errorMessage\"}),(0,e.jsxs)(t.td,{children:[(0,e.jsx)(t.code,{children:\"ReactNode\"}),\" | \",(0,e.jsx)(t.code,{children:\"((v: ValidationResult) => ReactNode)\"})]}),(0,e.jsx)(t.td,{children:\"An error message for the select.\"}),(0,e.jsx)(t.td,{children:\"-\"})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"startContent\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"ReactNode\"})}),(0,e.jsx)(t.td,{children:\"Element to be rendered in the left side of the select.\"}),(0,e.jsx)(t.td,{children:\"-\"})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"endContent\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"ReactNode\"})}),(0,e.jsx)(t.td,{children:\"Element to be rendered in the right side of the select.\"}),(0,e.jsx)(t.td,{children:\"-\"})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"selectorIcon\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"ReactNode\"})}),(0,e.jsx)(t.td,{children:\"Element to be rendered as the selector icon.\"}),(0,e.jsx)(t.td,{children:\"-\"})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"scrollRef\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"React.RefObject<HTMLElement>\"})}),(0,e.jsx)(t.td,{children:\"A ref to the scrollable element.\"}),(0,e.jsx)(t.td,{children:\"-\"})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"spinnerRef\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"React.RefObject<HTMLElement>\"})}),(0,e.jsx)(t.td,{children:\"A ref to the spinner element.\"}),(0,e.jsx)(t.td,{children:\"-\"})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"fullWidth\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"boolean\"})}),(0,e.jsx)(t.td,{children:\"Whether the select should take up the width of its parent.\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"true\"})})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"isOpen\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"boolean\"})}),(0,e.jsx)(t.td,{children:\"Whether the select is open by default (controlled).\"}),(0,e.jsx)(t.td,{children:\"-\"})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"defaultOpen\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"boolean\"})}),(0,e.jsx)(t.td,{children:\"Whether the select is open by default (uncontrolled).\"}),(0,e.jsx)(t.td,{children:\"-\"})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"isRequired\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"boolean\"})}),(0,e.jsx)(t.td,{children:\"Whether user select is required on the select before form submission.\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"false\"})})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"isDisabled\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"boolean\"})}),(0,e.jsx)(t.td,{children:\"Whether the select is disabled.\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"false\"})})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"isMultiline\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"boolean\"})}),(0,e.jsx)(t.td,{children:\"Whether the select should allow multiple lines of text.\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"false\"})})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"isInvalid\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"boolean\"})}),(0,e.jsx)(t.td,{children:\"Whether the select is invalid.\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"false\"})})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"validationState\"}),(0,e.jsxs)(t.td,{children:[(0,e.jsx)(t.code,{children:\"valid\"}),\" | \",(0,e.jsx)(t.code,{children:\"invalid\"})]}),(0,e.jsxs)(t.td,{children:['Whether the select should display its \"valid\" or \"invalid\" visual styling. (',(0,e.jsx)(t.strong,{children:\"Deprecated\"}),\") use \",(0,e.jsx)(t.strong,{children:\"isInvalid\"}),\" instead.\"]}),(0,e.jsx)(t.td,{children:\"-\"})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"showScrollIndicators\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"boolean\"})}),(0,e.jsx)(t.td,{children:\"Whether the select should show scroll indicators when the listbox is scrollable.\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"true\"})})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"autoFocus\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"boolean\"})}),(0,e.jsx)(t.td,{children:\"Whether the select should be focused on the first mount.\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"false\"})})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"disallowEmptySelection\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"boolean\"})}),(0,e.jsx)(t.td,{children:\"Whether the collection allows empty selection.\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"false\"})})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"disableAnimation\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"boolean\"})}),(0,e.jsx)(t.td,{children:\"Whether the select should be animated.\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"true\"})})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"disableSelectorIconRotation\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"boolean\"})}),(0,e.jsx)(t.td,{children:\"Whether the select should disable the rotation of the selector icon.\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"false\"})})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"popoverProps\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.a,{href:\"/docs/components/popover#api\",children:\"PopoverProps\"})}),(0,e.jsx)(t.td,{children:\"Props to be passed to the popover component.\"}),(0,e.jsx)(t.td,{children:\"-\"})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"listboxProps\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.a,{href:\"/docs/components/listbox#api\",children:\"ListboxProps\"})}),(0,e.jsx)(t.td,{children:\"Props to be passed to the listbox component.\"}),(0,e.jsx)(t.td,{children:\"-\"})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"scrollShadowProps\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.a,{href:\"/docs/components/scroll-shadow#api\",children:\"ScrollShadowProps\"})}),(0,e.jsx)(t.td,{children:\"Props to be passed to the scroll shadow component.\"}),(0,e.jsx)(t.td,{children:\"-\"})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"classNames\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:'Record<\"base\"\\uFF5C \"label\"\\uFF5C \"trigger\"\\uFF5C \"mainWrapper\" \\uFF5C \"innerWrapper\"\\uFF5C \"selectorIcon\" \\uFF5C \"value\" \\uFF5C \"listboxWrapper\"\\uFF5C \"listbox\" \\uFF5C \"popoverContent\" \\uFF5C \"helperWrapper\" \\uFF5C \"description\" \\uFF5C \"errorMessage\", string>'})}),(0,e.jsx)(t.td,{children:\"Allows to set custom class names for the Select slots.\"}),(0,e.jsx)(t.td,{children:\"-\"})]})]})]}),`\n`,(0,e.jsx)(t.h3,{id:\"select-events\",children:\"Select Events\"}),`\n`,(0,e.jsxs)(t.table,{children:[(0,e.jsx)(t.thead,{children:(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.th,{children:\"Attribute\"}),(0,e.jsx)(t.th,{children:\"Type\"}),(0,e.jsx)(t.th,{children:\"Description\"})]})}),(0,e.jsxs)(t.tbody,{children:[(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"onClose\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"() => void\"})}),(0,e.jsx)(t.td,{children:\"Callback fired when the select popover is closed.\"})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"onOpenChange\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"(isOpen: boolean) => void\"})}),(0,e.jsx)(t.td,{children:\"Callback fired when the select popover is opened or closed.\"})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"onSelectionChange\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:'(keys: \"all\" | Set<React.Key> & {anchorKey?: string; currentKey?: string}) => void'})}),(0,e.jsx)(t.td,{children:\"Callback fired when the selected keys change.\"})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"onChange\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.code,{children:\"React.ChangeEvent<HTMLSelectElement>\"})}),(0,e.jsx)(t.td,{children:\"Native select change event, fired when the selected value changes.\"})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:\"renderValue\"}),(0,e.jsx)(t.td,{children:(0,e.jsx)(t.a,{href:\"#render-value-function\",children:\"RenderValueFunction\"})}),(0,e.jsx)(t.td,{children:\"Function to render the value of the select. It renders the selected item by default.\"})]})]})]}),`\n`,(0,e.jsx)(t.hr,{}),`\n`,(0,e.jsx)(t.h3,{id:\"selectitem-props\",children:\"SelectItem Props\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"Check the \",(0,e.jsx)(t.a,{href:\"/docs/components/listbox#listboxitem-props\",children:\"ListboxItem\"}),\" props.\"]}),`\n`,(0,e.jsx)(t.h3,{id:\"selectitem-events\",children:\"SelectItem Events\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"Check the \",(0,e.jsx)(t.a,{href:\"/docs/components/listbox#listboxitem-events\",children:\"ListboxItem\"}),\" events.\"]}),`\n`,(0,e.jsx)(t.h3,{id:\"selectsection-props\",children:\"SelectSection Props\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"Check the \",(0,e.jsx)(t.a,{href:\"/docs/components/listbox#listboxsection-props\",children:\"ListboxSection\"}),\" props.\"]}),`\n`,(0,e.jsx)(t.hr,{}),`\n`,(0,e.jsx)(t.h3,{id:\"types\",children:\"Types\"}),`\n`,(0,e.jsx)(t.h4,{id:\"render-value-function\",children:\"Render Value Function\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"The \",(0,e.jsx)(t.code,{children:\"T\"}),\" type is the type of the data passed to the select \",(0,e.jsx)(t.code,{children:\"items\"}),\".\"]}),`\n`,(0,e.jsx)(t.pre,{children:(0,e.jsx)(t.code,{className:\"language-tsx\",children:`export type SelectedItemProps<T> = {\n  /** A unique key for the item. */\n  key?: Key;\n  /** The props passed to the item. */\n  props?: Record<string, any>;\n  /** The item data. */\n  data?: T | null;\n  /** An accessibility label for this item. */\n  \"aria-label\"?: string;\n  /** The rendered contents of this item (e.g. JSX). */\n  rendered?: ReactNode;\n  /** A string value for this item, used for features like typeahead. */\n  textValue?: string;\n  /** The type of item this item represents. */\n  type?: string;\n};\n\ntype SelectedItems<T> = Array<SelectedItemProps<T>>;\n\nrenderValue: (items: SelectedItems<T>) => ReactNode;\n`})})]})}function $(n={}){let{wrapper:t}=n.components||{};return t?(0,e.jsx)(t,{...n,children:(0,e.jsx)(Q,{...n})}):Q(n)}function r(n,t){throw new Error(\"Expected \"+(t?\"component\":\"object\")+\" `\"+n+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return re(Yt);})();\n;return Component;"
  },
  "_id": "docs/components/select.mdx",
  "_raw": {
    "sourceFilePath": "docs/components/select.mdx",
    "sourceFileName": "select.mdx",
    "sourceFileDir": "docs/components",
    "contentType": "mdx",
    "flattenedPath": "docs/components/select"
  },
  "type": "Doc",
  "slug": "/docs/components/select",
  "slugAsParams": "components/select",
  "url": "/docs/components/select"
}