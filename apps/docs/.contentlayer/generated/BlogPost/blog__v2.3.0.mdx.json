{
  "title": "Introducing v2.3.0 🎉",
  "description": "NextUI v2.3.0 is here! includes six new components, NextUI CLI, bug fixes, React Aria, and a TailwindCSS upgrade, among other enhancements.",
  "date": "2024-04-16T00:00:00.000Z",
  "tags": [
    "nextui",
    "cli",
    "date picker",
    "time input",
    "date input",
    "calendar"
  ],
  "author": {
    "name": "Junior Garcia",
    "link": "https://x.com/jrgarciadev",
    "avatar": "/avatars/junior-garcia.jpeg",
    "username": "@jrgarciadev",
    "type": "AuthorProperties",
    "_raw": {}
  },
  "image": "/blog/v2.3.0.jpg",
  "body": {
    "raw": "\nimport {dateInputContent} from \"@/content/components/date-input\";\nimport {timeInputContent} from \"@/content/components/time-input\";\nimport {calendarContent} from \"@/content/components/calendar\";\nimport {rangeCalendarContent} from \"@/content/components/range-calendar\";\nimport {datePickerContent} from \"@/content/components/date-picker\";\nimport {dateRangePickerContent} from \"@/content/components/date-range-picker\";\n\n<img\n  src=\"/blog/v2.3.0_2x.jpg\"\n  width={700}\n  height={350}\n  alt=\"NextUI v2.3.0\"\n  className=\"w-full border border-transparent dark:border-default-200/50 object-fit rounded-xl shadow-lg\"\n/>\n\nWe are excited to announce the latest update to NextUI, version **2.3.0**! This release introduces 6 new components,\nour new CLI, and several enhancements and bug fixes.\n\n## What's New in v2.3.0?\n\n- [NextUI CLI](/docs/guide/cli) - A command-line interface for creating and managing NextUI projects.\n- [DateInput](/docs/components/date-input) - Allows users to enter and edit date and time values using a keyboard.\n- [TimeInput](/docs/components/time-input) - Allows users to enter and edit time values using a keyboard.\n- [Calendar](/docs/components/calendar) - Displays a calendar for selecting dates and times.\n- [RangeCalendar](/docs/components/range-calendar) - Displays a calendar for selecting date ranges.\n- [DatePicker](/docs/components/date-picker) - Allows users to select a date from a calendar.\n- [DateRangePicker](/docs/components/date-range-picker) - Allows users to select a date range from a calendar.\n- [Other Changes](#other-changes) - Includes styling improvements, accessibility and usability enhancements.\n\n<Spacer y={4} />\n\nRequirements:\n\n- [Tailwind CSS 3.4](https://tailwindcss.com/) or later\n\nUpgrade today by running one of the following commands:\n\n<Spacer y={4} />\n\n<PackageManagers\n  commands={{\n    cli: \"nextui upgrade\",\n    npm: \"npx nextui-cli@latest upgrade\",\n  }}\n/>\n\n<Spacer y={4} />\n\n## NextUI CLI\n\nWe are thrilled to introduce the [NextUI CLI](https://github.com/nextui-org/nextui-cli), a command-line interface, It offers a comprehensive suite\nof commands to initialize, manage, and improve your NextUI projects. It enables you to `add`, `remove`, or\n`upgrade` individual components, assess the health of your project, and more.\n\n### Installation\n\nTo install the CLI globally, execute one of the following commands in your terminal:\n\n<PackageManagers\n  commands={{\n    npm: \"npm install nextui-cli -g\",\n    yarn: \"yarn add nextui-cli -g\",\n    pnpm: \"pnpm add nextui-cli -g\",\n    bun: \"bun add nextui-cli -g\",\n  }}\n/>\n\nAlternatively, you can use the CLI without a global installation by employing `npx`:\n\n```bash\nnpx nextui-cli@latest\n```\n\n### Usage\n\nOnce the CLI is installed, run the following command to display available commands:\n\n```bash\nnextui\n```\n\nNextUI CLI can help you create new projects, add components, upgrade components, remove components, detect issues in\nyou setup, know your environment, and more.\n\n<Spacer y={4} />\n\nTo initialize a new project, you can simply run:\n\n```bash\nnextui init my-nextui-app\n```\n\n<Spacer y={4} />\n\nYou will be prompted to configure your project:\n\n```codeBlock bash\n? Select a template › - Use arrow-keys. Return to submit.\n❯   App\n    A Next.js 13 with app directory template pre-configured with NextUI (v2) and Tailwind CSS.\n    Pages\n    A Next.js 13 with pages directory template pre-configured with NextUI (v2) and Tailwind CSS.\n```\n\nSelect the template you want to use and the CLI will create a new project for you.\n\n> We're working on adding more templates to the CLI, so stay tuned for updates!\n\n<Spacer y={4} />\n\nIf you already have a NextUI project, you can add components to it using the `add` command:\n\n```bash\nnextui add date-input\n```\n\nIt will automatically detect the required dependencies, modify your `tailwind.config.(js|ts)` file,\ndetect whether using `pnpm` if so, add the required configuration to your `.npmrc` file and add the component to your project.\n\nIf instead of installing a single component you want to install multiple components, you can do so by separating them with a space:\n\n```bash\nnextui add date-input time-input calendar\n```\n\nYou can alternatively install the `main` package which includes all the components by passing the `--all` flag:\n\n```bash\nnextui add --all\n```\n\n<Spacer y={4} />\n\n> The CLI is currentl in `Alpha` stage, we're working on adding more features and improvements. If you find any issues or have any suggestions, please let us know by [opening an issue](https://github.com/nextui-org/nextui-cli/issues/new).\n\nTo learn more about the CLI and its commands, please refer to the [CLI documentation](/docs/guide/cli) and the [CLI API reference](/docs/api-references/cli-api).\n\n## New Components\n\nSince the beginning of NextUI, devs have been asking for date and time input components. After\nmonths of iteration and development, we are excited to introduce the following new components:\n\n### DateInput\n\nDateInput is a component that allows users to enter and edit date and time values using a keyboard.\nEach part of a date value is displayed in an individually editable segment.\n\n<CodeDemo title=\"Usage\" files={dateInputContent.usage} />\n\nGo to the [DateInput documentation](/docs/components/date-input) to learn more about the component.\n\n### TimeInput\n\nThe `TimeInput` component consists of a label, and a group of segments representing each unit of a time (e.g. hours, minutes, and seconds). Each segment is individually focusable and editable by the user, by typing or using the arrow keys to increment and decrement the value. This approach allows values to be formatted and parsed correctly regardless of the locale or time format, and offers an easy and error-free way to edit times using the keyboard.\n\n<CodeDemo title=\"Usage\" files={timeInputContent.usage} />\n\nGo to the [TimeInput documentation](/docs/components/time-input) to learn more about the component.\n\n### Calendar\n\nA Calendar consists of a grouping element containing one or more date grids (e.g. months), and a previous and next button for navigating between date ranges. Each calendar grid consists of cells containing button elements that can be pressed and navigated to using the arrow keys to select a date.\n\n<CodeDemo title=\"Usage\" files={calendarContent.usage} />\n\nThe calendar also supports selecting years and months for rapid selection.\n\n<CodeDemo title=\"With Month And Year Picker\" files={calendarContent.withMonthAndYearPicker} />\n\nGo to the [Calendar documentation](/docs/components/calendar) to learn more about the component.\n\n### RangeCalendar\n\nA Range calendar consists of a grouping element containing one or more date grids (e.g. months), and a previous and next button for navigating through time. Each calendar grid consists of cells containing button elements that can be pressed and navigated to using the arrow keys to select a date range. Once a start date is selected, the user can navigate to another date using the keyboard or by hovering over it, and clicking it or pressing the Enter key commits the selected date range.\n\n<CodeDemo title=\"Usage\" files={rangeCalendarContent.usage} />\n\nGo to the [RangeCalendar documentation](/docs/components/range-calendar) to learn more about the component.\n\n### DatePicker\n\nA Date Picker combines a DateInput and a Calendar popover to allow users to enter or select a date and time value.\n\n<CodeDemo title=\"Usage\" files={datePickerContent.usage} />\n\nGo to the [DatePicker documentation](/docs/components/date-picker) to learn more about the component.\n\n### DateRangePicker\n\nDate Range Picker combines two DateInputs and a RangeCalendar popover to allow users to enter or select a date and time range.\n\n<CodeDemo title=\"Usage\" files={dateRangePickerContent.usage} />\n\nGo to the [DateRangePicker documentation](/docs/components/date-range-picker) to learn more about the component.\n\n\n### Calendar Presets\n\n`Calendar` and `RangeCalendar` components support adding custom content at the top and bottom of the calendar, this is useful for adding presets or\ncustom actions to the calendar.\n\nHere's an example of how to add presets to the `Calendar` component:\n\n<CodeDemo title=\"Calendar Presets\" files={calendarContent.presets} />\n\n### Internationalization\n\nThese new components have built-in internationalization, time zones and granularity support, they supports selecting dates\nin many calendar systems used around the world, including `Gregorian`, `Hebrew`, `Indian`, `Islamic`, `Buddhist`, and more.\n\nDates are automatically displayed in the appropriate calendar system for the user's locale this is possible thanks to [@internationalized/date](https://react-spectrum.adobe.com/internationalized/date/) package, which\nincludes functions for parsing strings in multiple formats into `ZonedDateTime` objects.\n\nHere's and example using the `Indian` calendar system:\n\n<CodeDemo title=\"International Calendar\" files={datePickerContent.internationalCalendar} />\n\nAlternatively you can set the `locale` globally by using the `NextUIProvider` component:\n\n```jsx\n// Next.js App Router example\n\"use client\";\n\nimport {NextUIProvider} from \"@nextui-org/react\";\n\nexport interface ProvidersProps {\n  children: React.ReactNode;\n}\n\nexport function Providers({children}: ProvidersProps) {\n  const router = useRouter();\n\n  return <NextUIProvider locale=\"hi-IN-u-ca-indian\">{children}</NextUIProvider>;\n}\n```\n\nIf no `locale` is provided, it will extract the locale from the browser.\n\n### NextUI Provider\n\nThe `NextUIProvider` component was updated to include the `createCalendar` function, which allows you to create a calendar instance with the specified locale and time zone,\nand the `defaultDates` object which allows you to set global minimum and maximum dates for the components.\n\n```jsx\n// Next.js App Router example\n\"use client\";\n\nimport {NextUIProvider, SupportedCalendars} from \"@nextui-org/react\";\nimport {CalendarDate, GregorianCalendar} from \"@internationalized/date\";\n\nexport interface ProvidersProps {\n  children: React.ReactNode;\n}\n\nfunction createCalendar(identifier: SupportedCalendars) {\n  switch (identifier) {\n    case \"gregory\":\n      return new GregorianCalendar();\n    default:\n      throw new Error(`Unsupported calendar ${identifier}`);\n  }\n}\n\nexport function Providers({children}: ProvidersProps) {\n  const router = useRouter();\n\n  return (\n    <NextUIProvider\n      locale=\"hi-IN-u-ca-indian\"\n      defaultDates={{\n        minDate: new CalendarDate(1900, 1, 1),\n        maxDate: new CalendarDate(2099, 12, 31),\n      }}\n      createCalendar={createCalendar}\n    >\n      {children}\n    </NextUIProvider>\n  );\n}\n```\n\n<Spacer y={4} />\n\n\n## Breaking Changes\n\n### Removal of the `units` creation\n\nTo improve performance and reduce bundle size, we have removed the `units` creation from the\n`nextui` plugin. [TailwindCSS v3.4](https://tailwindcss.com/blog/tailwindcss-v3-4) added support for `min-h-*` and `min-w-*` classes, so it is no longer needed.\n\nHow to upgrade:\n\n1. Upgrade TailwindCSS to version 3.4 or later (if you haven't already). You can do this by running:\n\n```bash\nnpm install tailwindcss@latest\n```\n\n2. Remove the `spacingUnit` configuration from your `tailwind.config.(js|ts)` file (if you have it):\n\n```diff-js\n plugins: [\n    nextui({\n      layout: {\n-       spacingUnit: 4,\n      },\n    }),\n  ],\n```\n\n3. Find all `-unit` classes in your project and replace them with a `-` separator. For example, replace `p-unit-4` with `p-4`.\n\n```diff-jsx\nimport {Button} from \"@nextui-org/react\";\n\nexport const MyButton = () => {\n  return (\n-    <Button className=\"px-unit-2 py-unit-1 min-w-unit-48\">\n+    <Button className=\"px-2 py-1 min-w-48\">\n      My Button\n    </Button>\n  );\n};\n```\n\n### Separation for `errorMessage` and `isInvalid`\n\nWe are currently working on supporting multiple types of validation, including native HTML constraint validation, custom validation, and real-time validation.\nDue to this reason, the requirements for displaying error messages have become more varied, and it is necessary to handle validation conditions separately from the `errorMessage`.\n\nHow to upgrade:\n\n1. To display `errorMessage`, `isInvalid` must be set to `true`.\n\n```diff-jsx\n<Input\n  type=\"email\"\n  label=\"Email\"\n  variant=\"bordered\"\n  defaultValue=\"junior2nextui.org\"\n+ isInvalid={true}\n  errorMessage=\"Please enter a valid email\"\n  className=\"max-w-xs\"\n/>\n```\n\nThat's it! Your project should now be using the latest version of TailwindCSS and NextUI.\n\n<Spacer y={4} />\n\n\n## Other Changes\n\n**Bug Fixes**:\n\n- Fixed an HSL color rounding issue in the theme settings to ensure accurate color representation. [PR](https://github.com/nextui-org/nextui/pull/2702) - [@wingkwong](https://github.com/wingkwong)\n- Removed conflicting transition definitions affecting CSS classes. [PR](https://github.com/nextui-org/nextui/pull/2677) - [@u3u](https://github.com/u3u)\n- Patched the \"@nextui-org/autocomplete\" package to fix an issue where empty items with `allowCustomValue` would not render properly due to a null node problem. [PR](https://github.com/nextui-org/nextui/pull/2674) - [@wingkwong](https://github.com/wingkwong)\n- Implemented a fix in modal components to prevent carryover of IME (Input Method Editor) input when switching fields using the Tab key. [PR](https://github.com/nextui-org/nextui/pull/2709) - [@ryo-manba](https://github.com/ryo-manba)\n- Enhanced accessibility by handling Tab key press event in the `ModalContent` component. [PR](https://github.com/nextui-org/nextui/pull/2709) - [@ryo-manba](https://github.com/ryo-manba)\n- Fixed an issue where disabled select components could still be changed using blur and keyboard shortcuts. [PR](https://github.com/nextui-org/nextui/pull/2649) - [@wingkwong](https://github.com/wingkwong)\n- Patched issues in \"@nextui-org/use-aria-multiselect\" and \"@nextui-org/stories-utils\" packages to fix a warning about `SELECT defaultSelectedKeys`. [PR](https://github.com/nextui-org/nextui/pull/2648) - [@wingkwong](https://github.com/wingkwong)\n- Fixed an issue with incorrect `onChange` typing in Checkbox Group, ensuring it now correctly handles an array of strings as values. [PR](https://github.com/nextui-org/nextui/pull/2595) - [@wingkwong](https://github.com/wingkwong)\n- Fixed the `label` placement issue in `Select` component if a `description` prop is used [PR](https://github.com/nextui-org/nextui/pull/2553) - [@novsource](https://github.com/novsource)\n- Fixed the `originalProps` spread issue in the `Dropdown` component. [PR](https://github.com/nextui-org/nextui/pull/2450) - [@wingkwong](https://github.com/wingkwong)\n\n**Improvements**\n- Framer Motion was updated to the latest version, improving performance and reducing bundle size. [Docs](https://www.framer.com/motion/guide-reduce-bundle-size/) [PR](https://github.com/nextui-org/nextui/pull/2464) - [@mezotv](https://github.com/mezotv)\n- `LazyMotion` was added to all components that use Framer Motion, improving performance by only loading the required motion components.\n- We removed the custom `units` creation from the `nextui` plugin, it is no longer needed with TailwindCSS v3.4 and above. [PR](https://github.com/nextui-org/nextui/pull/2713) - [@jrgarciadev](https://github.com/jrgarciadev)\n- Updated `framer-motion` package across various components and utilities to version `11.0.22` for enhanced performance and consistency. [PR](https://github.com/nextui-org/nextui/pull/2596) - [@wingkwong](https://github.com/wingkwong)\n- Ensured compatibility with `react@18.2.0` and `react-dom@18.2.0` across the board. [PR](https://github.com/nextui-org/nextui/pull/2596) - [@wingkwong](https://github.com/wingkwong)\n- Introduced patches for NextUI components to improve animations, including support for keyframes with spring and inertia animations. [PR](https://github.com/nextui-org/nextui/pull/2596) - [@wingkwong](https://github.com/wingkwong)\n- Improved handling of numeric keys in the multi-select component to ensure consistent behavior. [PR](https://github.com/nextui-org/nextui/pull/2589) - [@wingkwong](https://github.com/wingkwong)\n- Updated the version of react-aria to include the latest changes as detailed in the [2024-02-13 release](https://react-spectrum.adobe.com/releases/2024-02-13.html). [PR](https://github.com/nextui-org/nextui/pull/2561) - [@ryo-manba](https://github.com/ryo-manba)\n- Added support for custom class names in the `AvatarGroup` component, enhancing flexibility in styling. [PR](https://github.com/nextui-org/nextui/pull/2669) - [@wingkwong](https://github.com/wingkwong)\n- Introduced a `count` slot to the `AvatarGroup` for more customized rendering. [PR](https://github.com/nextui-org/nextui/pull/2669) - [@wingkwong](https://github.com/wingkwong)\n- Improved the `AvatarGroup` component's count rendering logic for better performance and flexibility. [PR](https://github.com/nextui-org/nextui/pull/2669) - [@wingkwong](https://github.com/wingkwong)\n- Add RTL support to the kbd component. [PR](https://github.com/nextui-org/nextui/pull/2482) - [@mrbadri](https://github.com/mrbadri)\n- Add RTL support to the Select component. [PR](https://github.com/nextui-org/nextui/pull/2485) - [@mrbadri](https://github.com/mrbadri)\n- Add RTL support to the avatar group componen. [PR](https://github.com/nextui-org/nextui/pull/2498) - [@mrbadri](https://github.com/mrbadri)\n- Add RTL support to the Table component. [PR](https://github.com/nextui-org/nextui/pull/2472) - [@mrbadri](https://github.com/mrbadri)\n\n**Documentation**:\n- Updated documentation to reflect the new features and changes in the `AvatarGroup` component.\n- Added support for the \"bun\" package manager across documentation and components. [PR](https://github.com/nextui-org/nextui/pull/2625) - [@sudongyuer](https://github.com/sudongyuer)\n- [Kapa.ai](https://www.kapa.ai/) widget was added to the documentation to provide AI support for users. [PR](https://github.com/nextui-org/nextui/pull/2428) - [@wingkwong](https://github.com/sudongyuer)\n- Layout docs updated to remove the `units` configuration from the `tailwind.config.(js|ts)` file.\n\n\nSpecial thanks to NextUI Team members [@kuri-sun](https://github.com/kuri-sun), [@ryo-manba](https://github.com/ryo-manba),\n[@sudongyuer](https://github.com/sudongyuer), [@winchesHe](https://github.com/winchesHe), [@wingkwong](https://github.com/wingkwong),\n[@tianenpang](https://github.com/tianenpang), [@smultar](https://github.com/smultar) and contributors for their contributions to this release.\n\nFor a full list of changes, please refer to the [release notes](https://github.com/nextui-org/nextui/releases/tag/%40nextui-org%2Freact%402.3.0).\n\n<Spacer y={6} />\n\nWe hope you enjoy these new components and the new features. We're excited to see what you build with them!\n\nThanks for reading and happy coding! 🚀\n\n---\n\n## Community\n\nWe're excited to see the community adopt NextUI, raise issues, and provide feedback.\nWhether it's a feature request, bug report, or a project to showcase, please get involved!\n\n<Community />\n\n## Contributing\n\nPR's on NextUI are always welcome, please see our [contribution guidelines](https://github.com/nextui-org/nextui/blob/main/CONTRIBUTING.md) to learn how you can contribute to this project.\n",
    "code": "var Component=(()=>{var Tt=Object.create;var d=Object.defineProperty;var Rt=Object.getOwnPropertyDescriptor;var kt=Object.getOwnPropertyNames;var Pt=Object.getPrototypeOf,It=Object.prototype.hasOwnProperty;var Nt=(a,t)=>()=>(t||a((t={exports:{}}).exports,t),t.exports),Vt=(a,t)=>{for(var o in t)d(a,o,{get:t[o],enumerable:!0})},m=(a,t,o,i)=>{if(t&&typeof t==\"object\"||typeof t==\"function\")for(let r of kt(t))!It.call(a,r)&&r!==o&&d(a,r,{get:()=>t[r],enumerable:!(i=Rt(t,r))||i.enumerable});return a};var Lt=(a,t,o)=>(o=a!=null?Tt(Pt(a)):{},m(t||!a||!a.__esModule?d(o,\"default\",{value:a,enumerable:!0}):o,a)),Zt=a=>m(d({},\"__esModule\",{value:!0}),a);var x=Nt((gl,f)=>{f.exports=_jsx_runtime});var xl={};Vt(xl,{default:()=>Ct,frontmatter:()=>fl});var e=Lt(x());var jt=`import {DateInput} from \"@nextui-org/react\";\nimport {CalendarDate} from \"@internationalized/date\";\n\nexport default function App() {\n  return (\n    <div className=\"flex w-full flex-wrap md:flex-nowrap gap-4\">\n      <DateInput label={\"Birth date\"} placeholderValue={new CalendarDate(1995, 11, 6)} className=\"max-w-sm\" />\n    </div>\n  );\n}`,Mt={\"/App.jsx\":jt},h={...Mt};var Bt=`import {DateInput} from \"@nextui-org/react\";\nimport {CalendarDate, parseDate} from \"@internationalized/date\";\n\nexport default function App() {\n  return (\n    <div className=\"flex w-full flex-wrap md:flex-nowrap gap-4\">\n        <DateInput \n          label={\"Birth date\"} \n          isDisabled\n          defaultValue={parseDate(\"2024-04-04\")} \n          placeholderValue={new CalendarDate(1995, 11, 6)} \n        />\n    </div>\n  );\n}`,St={\"/App.jsx\":Bt},g={...St};var zt=`import {DateInput} from \"@nextui-org/react\";\nimport {CalendarDate, parseDate} from \"@internationalized/date\";\n\nexport default function App() {\n  return (\n    <div className=\"flex w-full flex-wrap md:flex-nowrap gap-4\">\n        <DateInput \n          label={\"Birth date\"} \n          isReadOnly\n          defaultValue={parseDate(\"2024-04-04\")} \n          placeholderValue={new CalendarDate(1995, 11, 6)} \n        />\n    </div>\n  );\n}`,Wt={\"/App.jsx\":zt},v={...Wt};var Ft=`import {DateInput} from \"@nextui-org/react\";\nimport {CalendarDate, parseDate} from \"@internationalized/date\";\n\nexport default function App() {\n  return (\n    <div className=\"flex w-full flex-wrap md:flex-nowrap gap-4\">\n        <DateInput \n          label={\"Birth date\"} \n          isRequired\n          defaultValue={parseDate(\"2024-04-04\")} \n          placeholderValue={new CalendarDate(1995, 11, 6)} \n        />\n    </div>\n  );\n}`,_t={\"/App.jsx\":Ft},b={..._t};var Ut=`import {DateInput} from \"@nextui-org/react\";\nimport {CalendarDate} from \"@internationalized/date\";\n\nexport default function App() {\n  const variants = [\"flat\", \"bordered\", \"underlined\", \"faded\"];\n\n  return (\n    <div className=\"w-full flex flex-col gap-4\">\n      {variants.map((variant) => (\n        <div key={variant} className=\"flex w-full flex-wrap md:flex-nowrap mb-6 md:mb-0 gap-4\">\n          <DateInput variant={variant} label={\"Birth date\"} placeholderValue={new CalendarDate(1995, 11, 6)}  />\n        </div>\n      ))}  \n    </div>  \n  );\n}`,Gt={\"/App.jsx\":Ut},w={...Gt};var Ot=`import {DateInput} from \"@nextui-org/react\";\nimport {CalendarDate} from \"@internationalized/date\";\n\nexport default function App() {\n  const placements = [\n    \"inside\",\n    \"outside\",\n    \"outside-left\",\n  ];\n\n  return (\n    <div className=\"w-full flex flex-col max-w-sm gap-4\">\n      {placements.map((placement) => (\n        <DateInput \n          label=\"Birth date\" \n          placeholderValue={new CalendarDate(1995, 11, 6)} \n          description={placement}\n          labelPlacement={placement}\n        />\n      ))}\n    </div>  \n  );\n}`,Et={\"/App.jsx\":Ot},D={...Et};var Yt=`import {DateInput} from \"@nextui-org/react\";\nimport {CalendarDate} from \"@internationalized/date\";\n\nexport default function App() {\n  return (\n    <div className=\"flex w-full flex-wrap md:flex-nowrap gap-4\">\n      <DateInput \n        label={\"Birth date\"} \n        placeholderValue={new CalendarDate(1995, 11, 6)} \n        description={\"This is my birth date.\"}\n      />\n    </div>\n  );\n}`,qt={\"/App.jsx\":Yt},y={...qt};var Ht=`export const CalendarIcon = (props) => (\n  <svg\n    aria-hidden=\"true\"\n    fill=\"none\"\n    focusable=\"false\"\n    height=\"1em\"\n    role=\"presentation\"\n    viewBox=\"0 0 24 24\"\n    width=\"1em\"\n    {...props}\n  >\n    <path\n      d=\"M7.75 2.5a.75.75 0 0 0-1.5 0v1.58c-1.44.115-2.384.397-3.078 1.092c-.695.694-.977 1.639-1.093 3.078h19.842c-.116-1.44-.398-2.384-1.093-3.078c-.694-.695-1.639-.977-3.078-1.093V2.5a.75.75 0 0 0-1.5 0v1.513C15.585 4 14.839 4 14 4h-4c-.839 0-1.585 0-2.25.013z\"\n      fill=\"currentColor\"\n    />\n    <path\n      clipRule=\"evenodd\"\n      d=\"M2 12c0-.839 0-1.585.013-2.25h19.974C22 10.415 22 11.161 22 12v2c0 3.771 0 5.657-1.172 6.828C19.657 22 17.771 22 14 22h-4c-3.771 0-5.657 0-6.828-1.172C2 19.657 2 17.771 2 14zm15 2a1 1 0 1 0 0-2a1 1 0 0 0 0 2m0 4a1 1 0 1 0 0-2a1 1 0 0 0 0 2m-4-5a1 1 0 1 1-2 0a1 1 0 0 1 2 0m0 4a1 1 0 1 1-2 0a1 1 0 0 1 2 0m-6-3a1 1 0 1 0 0-2a1 1 0 0 0 0 2m0 4a1 1 0 1 0 0-2a1 1 0 0 0 0 2\"\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n    />\n  </svg>\n);`,Kt=`import {DateInput} from \"@nextui-org/react\";\nimport {CalendarDate, parseDate} from \"@internationalized/date\";\nimport {CalendarIcon} from './CalendarIcon';\n\nexport default function App() {\n  return (\n    <div className=\"flex w-full flex-col gap-4\">\n      <div className=\"flex w-full flex-wrap md:flex-nowrap mb-6 md:mb-0 gap-4\">\n        <DateInput\n          label=\"Date Input\"\n          defaultValue={parseDate(\"2024-04-04\")} \n          placeholderValue={new CalendarDate(1995, 11, 6)} \n          labelPlacement=\"outside\"\n          startContent={\n           <CalendarIcon className=\"text-2xl text-default-400 pointer-events-none flex-shrink-0\" />\n          }\n        />\n        <DateInput\n          label=\"Date Input\"\n          defaultValue={parseDate(\"2024-04-04\")} \n          placeholderValue={new CalendarDate(1995, 11, 6)} \n          labelPlacement=\"outside\"\n          endContent={\n           <CalendarIcon className=\"text-2xl text-default-400 pointer-events-none flex-shrink-0\" />\n          }\n        />\n      </div>\n    </div>  \n  );\n}`,Xt={\"/App.jsx\":Kt,\"/CalendarIcon.jsx\":Ht},A={...Xt};var Jt=`import {DateInput} from \"@nextui-org/react\";\nimport {CalendarDate, parseDate} from \"@internationalized/date\";\n\nexport default function App() {\n  return (\n    <div className=\"flex w-full flex-wrap md:flex-nowrap gap-4\">\n      <DateInput \n        label={\"Birth date\"} \n        defaultValue={parseDate(\"2024-04-04\")} \n        placeholderValue={new CalendarDate(1995, 11, 6)} \n        description={\"This is my birth date.\"}\n        isInvalid\n        errorMessage=\"Please enter a valid date.\"\n        className=\"max-w-xs\"\n      />\n    </div>\n  );\n}`,$t={\"/App.jsx\":Jt},C={...$t};var Qt=`import {DateInput} from \"@nextui-org/react\";\nimport {CalendarDate, parseDate} from \"@internationalized/date\";\n\nexport default function App() {\n  return (\n    <div className=\"flex w-full flex-wrap md:flex-nowrap gap-4\">\n      <DateInput \n        label={\"Birth date\"} \n        defaultValue={parseDate(\"2024-04-04\")} \n        placeholderValue={new CalendarDate(1995, 11, 6)} \n        description={\"This is my birth date.\"}\n        isInvalid\n        errorMessage={(value) => {\n          if (value.isInvalid) {\n            return \"Please enter a valid date.\";\n          }\n        }}\n        className=\"max-w-xs\"\n      />\n    </div>\n  );\n}`,ea={\"/App.jsx\":Qt},T={...ea};var ta=`import {DateInput} from \"@nextui-org/react\";\nimport {parseDate, getLocalTimeZone} from \"@internationalized/date\";\nimport {useDateFormatter} from \"@react-aria/i18n\";\n\nexport default function App() {\n  const [value, setValue] = React.useState(parseDate(\"2024-04-04\"));\n\n  let formatter = useDateFormatter({dateStyle: \"full\"});\n\n  return (\n    <div className=\"w-full flex flex-row gap-2\">\n      <div className=\"w-full flex flex-col gap-y-2\">\n        <DateInput label=\"Date (controlled)\" value={value} onChange={setValue} />\n        <p className=\"text-default-500 text-sm\">\n          Selected date: {value ? formatter.format(value.toDate(getLocalTimeZone())) : \"--\"}\n        </p>\n      </div>\n    </div>\n  );\n}`,aa=`import {DateInput} from \"@nextui-org/react\";\nimport {DateValue, parseDate, getLocalTimeZone} from \"@internationalized/date\";\nimport {useDateFormatter} from \"@react-aria/i18n\";\n\nexport default function App() {\n  const [value, setValue] = React.useState<DateValue>(parseDate(\"2024-04-04\"));\n\n  let formatter = useDateFormatter({dateStyle: \"full\"});\n\n  return (\n    <div className=\"w-full flex flex-row gap-2\">\n      <div className=\"w-full flex flex-col gap-y-2\">\n        <DateInput label=\"Date (controlled)\" value={value} onChange={setValue} />\n        <p className=\"text-default-500 text-sm\">\n          Selected date: {value ? formatter.format(value.toDate(getLocalTimeZone())) : \"--\"}\n        </p>\n      </div>\n    </div>\n  );\n}`,oa={\"/App.jsx\":ta,\"/App.tsx\":aa},R={...oa};var na=`import {DateInput} from \"@nextui-org/react\";\nimport {parseZonedDateTime, parseAbsoluteToLocal} from \"@internationalized/date\";\n\nexport default function App() {\n  return (\n     <div className=\"w-full max-w-xl flex flex-col items-end gap-4\">\n      <DateInput\n        label={\"Event date\"}\n        defaultValue={parseZonedDateTime(\"2022-11-07T00:45[America/Los_Angeles]\")}\n        labelPlacement=\"outside\"\n      />\n      <DateInput\n        label={\"Event date\"}\n        defaultValue={parseAbsoluteToLocal(\"2021-11-07T07:45:00Z\")}\n        labelPlacement=\"outside\"\n      />\n    </div>\n  );\n}`,ra={\"/App.jsx\":na},k={...ra};var la=`import {DateInput} from \"@nextui-org/react\";\nimport {now, parseAbsoluteToLocal} from \"@internationalized/date\";\nimport {useDateFormatter} from \"@react-aria/i18n\";\n\nexport default function App() {\n  let [date, setDate] = React.useState(parseAbsoluteToLocal(\"2021-04-07T18:45:22Z\"));\n\n  return (\n    <div className=\"w-full max-w-xl flex flex-col items-start gap-4\">\n      <DateInput\n        granularity=\"second\"\n        label=\"Date and time\"\n        value={date}\n        onChange={setDate}\n      />\n      <DateInput granularity=\"day\" label=\"Date\" value={date} onChange={setDate} />\n      <DateInput granularity=\"second\" label=\"Event date\" />\n      <DateInput\n        granularity=\"second\"\n        label=\"Event date\"\n        placeholderValue={now(\"America/New_York\")}\n      />\n    </div>\n  );\n}`,ia=`import {DateInput} from \"@nextui-org/react\";\nimport {DateValue, now, parseAbsoluteToLocal} from \"@internationalized/date\";\nimport {useDateFormatter} from \"@react-aria/i18n\";\n\nexport default function App() {\n  let [date, setDate] = React.useState<DateValue>(parseAbsoluteToLocal(\"2021-04-07T18:45:22Z\"));\n\n  return (\n    <div className=\"w-full max-w-xl flex flex-col items-start gap-4\">\n      <DateInput\n        granularity=\"second\"\n        label=\"Date and time\"\n        value={date}\n        onChange={setDate}\n      />\n      <DateInput granularity=\"day\" label=\"Date\" value={date} onChange={setDate} />\n      <DateInput granularity=\"second\" label=\"Event date\" />\n      <DateInput\n        granularity=\"second\"\n        label=\"Event date\"\n        placeholderValue={now(\"America/New_York\")}\n      />\n    </div>\n  );\n}`,da={\"/App.jsx\":la,\"/App.tsx\":ia},P={...da};var sa=`import {DateInput} from \"@nextui-org/react\";\nimport {getLocalTimeZone, parseDate, today} from \"@internationalized/date\";\n\nexport default function App() {\n  return (\n    <div className=\"w-full max-w-xl flex flex-row gap-4\">\n      <div className=\"w-full flex flex-col gap-1\">\n        <h3>Min date</h3>\n        <DateInput\n          label=\"Date and time\"\n          minValue={today(getLocalTimeZone())}\n          defaultValue={today(getLocalTimeZone()).subtract({ days: 1 })}\n        />\n      </div>\n      <div className=\"w-full flex flex-col gap-2\">\n        <h3>Max date</h3>\n        <DateInput\n          label=\"Date and time\"\n          maxValue={today(getLocalTimeZone())}\n          defaultValue={today(getLocalTimeZone()).add({ days: 1 })}\n        />\n      </div>\n    </div>\n  );\n}`,ca={\"/App.jsx\":sa},I={...ca};var pa=`import {DateInput} from \"@nextui-org/react\";\nimport {now, parseAbsoluteToLocal} from \"@internationalized/date\";\nimport {I18nProvider} from \"@react-aria/i18n\";\n\nexport default function App() {\n  const [date, setDate] = React.useState(parseAbsoluteToLocal(\"2021-04-07T18:45:22Z\"));\n\n  return (\n    <div className=\"flex flex-col gap-4\">\n      <I18nProvider locale=\"hi-IN-u-ca-indian\">\n        <DateInput label=\"Appointment date\" value={date} onChange={setDate} />\n      </I18nProvider>\n    </div>\n  );\n}`,ua=`import {DateInput} from \"@nextui-org/react\";\nimport {DateValue, now, parseAbsoluteToLocal} from \"@internationalized/date\";\nimport {I18nProvider} from \"@react-aria/i18n\";\n\nexport default function App() {\n  const [date, setDate] = React.useState<DateValue>(parseAbsoluteToLocal(\"2021-04-07T18:45:22Z\"));\n\n  return (\n    <div className=\"flex flex-col gap-4\">\n      <I18nProvider locale=\"hi-IN-u-ca-indian\">\n        <DateInput label=\"Appointment date\" value={date} onChange={setDate} />\n      </I18nProvider>\n    </div>\n  );\n}`,ma={\"/App.jsx\":pa,\"/App.tsx\":ua},N={...ma};var fa=`import {DateInput} from \"@nextui-org/react\";\nimport {parseZonedDateTime} from \"@internationalized/date\";\n\nexport default function App() {\n  return (\n    <div className=\"w-full max-w-xl flex flex-row gap-4\">\n      <DateInput\n        label=\"Appointment time\"\n        hideTimeZone\n        defaultValue={parseZonedDateTime(\"2022-11-07T00:45[America/Los_Angeles]\")}\n      />\n    </div>\n  );\n}`,xa={\"/App.jsx\":fa},V={...xa};var ha=`import {DateInput} from \"@nextui-org/react\";\nimport {parseZonedDateTime} from \"@internationalized/date\";\n\nexport default function App() {\n  return (\n    <div className=\"w-full max-w-xl flex flex-row gap-4\">\n      <DateInput\n        label=\"Appointment time\"\n        hourCycle={24}\n        defaultValue={parseZonedDateTime(\"2022-11-07T00:45[America/Los_Angeles]\")}\n        granularity={\"minute\"}\n      />\n    </div>\n  );\n}`,ga={\"/App.jsx\":ha},L={...ga};var Z={usage:h,disabled:g,readOnly:v,required:b,variants:w,labelPlacements:D,description:y,startEndContent:A,errorMessage:C,errorMessageFunction:T,controlled:R,timeZones:k,granularity:P,minAndMaxDate:I,internationalCalendar:N,hideTimeZone:V,hourlyCycle:L};var va=`import {TimeInput} from \"@nextui-org/react\";\nimport {Time} from \"@internationalized/date\";\n\nexport default function App() {\n  return (\n    <div className=\"flex flex-wrap gap-4\">\n      <TimeInput label=\"Event Time\" />\n      <TimeInput label=\"Event Time\" defaultValue={new Time(11, 45)} />\n    </div>\n  );\n}`,ba={\"/App.jsx\":va},j={...ba};var wa=`import {TimeInput} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <TimeInput \n      isRequired \n      label=\"Event Time\" \n    />\n  );\n}`,Da={\"/App.jsx\":wa},M={...Da};var ya=`import {TimeInput} from \"@nextui-org/react\";\nimport {Time} from \"@internationalized/date\";\n\nexport default function App() {\n  return (\n    <TimeInput \n      isDisabled \n      label=\"Event Time\" \n      defaultValue={new Time(11, 45)} \n    />\n  );\n}`,Aa={\"/App.jsx\":ya},B={...Aa};var Ca=`import {TimeInput} from \"@nextui-org/react\";\nimport {Time} from \"@internationalized/date\";\n\nexport default function App() {\n  return (\n    <TimeInput \n      isReadOnly \n      label=\"Event Time\" \n      defaultValue={new Time(11, 45)} \n    />\n  );\n}`,Ta={\"/App.jsx\":Ca},S={...Ta};var Ra=`import {TimeInput} from \"@nextui-org/react\";\nimport {Time} from \"@internationalized/date\";\n\nexport default function App() {\n  return (\n    <TimeInput label={null} defaultValue={new Time(11, 45)} />\n  );\n}`,ka={\"/App.jsx\":Ra},z={...ka};var Pa=`import {TimeInput} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <TimeInput \n      label=\"Event Time\"\n      description=\"Please enter your meeting time\" \n    />\n  );\n}`,Ia={\"/App.jsx\":Pa},W={...Ia};var Na=`import {TimeInput} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <TimeInput \n      label=\"Event Time\"\n      isInvalid\n      errorMessage=\"Please enter a valid time\"\n    />\n  );\n}`,Va={\"/App.jsx\":Na},F={...Va};var La=`import {TimeInput} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <TimeInput \n      label=\"Event Time\"\n      isInvalid\n      errorMessage={(value) => {\n        if (value.isInvalid) {\n          return \"Please enter a valid time\";\n        }\n      }}\n    />\n  );\n}`,Za={\"/App.jsx\":La},_={...Za};var ja=`import {TimeInput} from \"@nextui-org/react\";\nimport {Time} from \"@internationalized/date\";\n\nexport default function App() {\n  return (\n    <div className=\"w-full max-w-xl flex flex-col items-end gap-4\">\n      <TimeInput \n        label=\"Event Time\" \n        labelPlacement=\"inside\" \n        defaultValue={new Time(11, 45)} \n        description=\"inside\" \n      />\n      <TimeInput \n        label=\"Event Time\" \n        labelPlacement=\"outside\" \n        defaultValue={new Time(11, 45)} \n        description=\"outside\" \n      />\n      <TimeInput \n        label=\"Event Time\" \n        labelPlacement=\"outside-left\" \n        defaultValue={new Time(11, 45)} \n        description=\"outside-left\" \n      />\n    </div>\n  );\n}`,Ma={\"/App.jsx\":ja},U={...Ma};var Ba=`export const ClockCircleLinearIcon = (props) => (\n  <svg\n    aria-hidden=\"true\"\n    fill=\"none\"\n    focusable=\"false\"\n    height=\"1em\"\n    role=\"presentation\"\n    viewBox=\"0 0 24 24\"\n    width=\"1em\"\n    {...props}\n  >\n    <g fill=\"none\" stroke=\"currentColor\" strokeWidth=\"1.5\">\n      <circle cx=\"12\" cy=\"12\" r=\"10\" />\n      <path d=\"M12 8v4l2.5 2.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    </g>\n  </svg>\n);`,Sa=`import {TimeInput} from \"@nextui-org/react\";\nimport {ClockCircleLinearIcon} from './ClockCircleLinearIcon';\nimport {Time} from \"@internationalized/date\";\n\nexport default function App() {\n  return (\n    <TimeInput \n      label=\"Event Time\" \n      labelPlacement=\"outside\" \n      defaultValue={new Time(11, 45)} \n      startContent={(\n        <ClockCircleLinearIcon className=\"text-xl text-default-400 pointer-events-none flex-shrink-0\" />\n      )}\n    />\n  );\n}`,za={\"/App.jsx\":Sa,\"/ClockCircleLinearIcon.jsx\":Ba},G={...za};var Wa=`export const ClockCircleLinearIcon = (props) => (\n  <svg\n    aria-hidden=\"true\"\n    fill=\"none\"\n    focusable=\"false\"\n    height=\"1em\"\n    role=\"presentation\"\n    viewBox=\"0 0 24 24\"\n    width=\"1em\"\n    {...props}\n  >\n    <g fill=\"none\" stroke=\"currentColor\" strokeWidth=\"1.5\">\n      <circle cx=\"12\" cy=\"12\" r=\"10\" />\n      <path d=\"M12 8v4l2.5 2.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    </g>\n  </svg>\n);`,Fa=`import {TimeInput} from \"@nextui-org/react\";\nimport {ClockCircleLinearIcon} from './ClockCircleLinearIcon';\nimport {Time} from \"@internationalized/date\";\n\nexport default function App() {\n  return (\n    <TimeInput \n      label=\"Event Time\" \n      labelPlacement=\"outside\" \n      defaultValue={new Time(11, 45)} \n      endContent={(\n        <ClockCircleLinearIcon className=\"text-xl text-default-400 pointer-events-none flex-shrink-0\" />\n      )}\n    />\n  );\n}`,_a={\"/App.jsx\":Fa,\"/ClockCircleLinearIcon.jsx\":Wa},O={..._a};var Ua=`import {TimeInput} from \"@nextui-org/react\";\nimport {parseAbsoluteToLocal, Time, ZonedDateTime} from \"@internationalized/date\";\nimport {useDateFormatter} from \"@react-aria/i18n\";\n\nexport default function App() {\n  let [value, setValue] = React.useState(parseAbsoluteToLocal(\"2024-04-08T18:45:22Z\"));\n\n  let formatter = useDateFormatter({dateStyle: \"short\", timeStyle: \"long\"});\n\n  return (\n    <div className=\"w-full flex flex-row gap-2\">\n      <div className=\"w-full flex flex-col gap-y-2\">\n        <TimeInput label=\"Time (controlled)\" value={value} onChange={setValue} />\n        <p className=\"text-default-500 text-sm\">\n          {value instanceof ZonedDateTime\n            ? (value.toDate && formatter.format(value.toDate())) ||\n              (value && value.toString()) ||\n              \"--\"\n            : \"\"}\n        </p>\n      </div>\n\n      <TimeInput defaultValue={new Time(11, 45)} label=\"Time (uncontrolled)\" />\n    </div>\n  );\n}`,Ga=`import {TimeInput} from \"@nextui-org/react\";\nimport type {TimeValue} from \"@react-types/datepicker\";\nimport {parseAbsoluteToLocal, Time, ZonedDateTime} from \"@internationalized/date\";\nimport {useDateFormatter} from \"@react-aria/i18n\";\n\nexport default function App() {\n  let [value, setValue] = React.useState<TimeInputValue>(parseAbsoluteToLocal(\"2024-04-08T18:45:22Z\"));\n\n  let formatter = useDateFormatter({dateStyle: \"short\", timeStyle: \"long\"});\n\n  return (\n    <div className=\"w-full flex flex-row gap-2\">\n      <div className=\"w-full flex flex-col gap-y-2\">\n        <TimeInput label=\"Time (controlled)\" value={value} onChange={setValue} />\n        <p className=\"text-default-500 text-sm\">\n          {value instanceof ZonedDateTime\n            ? (value.toDate && formatter.format(value.toDate())) ||\n              (value && value.toString()) ||\n              \"--\"\n            : \"\"}\n        </p>\n      </div>\n\n      <TimeInput defaultValue={new Time(11, 45)} label=\"Time (uncontrolled)\" />\n    </div>\n  );\n}`,Oa={\"/App.jsx\":Ua,\"/App.tsx\":Ga},E={...Oa};var Ea=`import {TimeInput} from \"@nextui-org/react\";\nimport {Time, parseZonedDateTime, parseAbsoluteToLocal} from \"@internationalized/date\";\n\nexport default function App() {\n  return (\n    <div className=\"w-full max-w-xl flex flex-col items-end gap-4\">\n    <TimeInput\n      defaultValue={parseZonedDateTime(\"2022-11-07T00:45[America/Los_Angeles]\")}\n      labelPlacement=\"outside\"\n    />\n    <TimeInput\n      defaultValue={parseAbsoluteToLocal(\"2021-11-07T07:45:00Z\")}\n      labelPlacement=\"outside\"\n    />\n  </div>\n  );\n}`,Ya={\"/App.jsx\":Ea},Y={...Ya};var qa=`import {TimeInput} from \"@nextui-org/react\";\nimport {Time, parseAbsoluteToLocal} from \"@internationalized/date\";\n\nexport default function App() {\n  let [date, setDate] = React.useState(parseAbsoluteToLocal(\"2021-04-07T18:45:22Z\"));\n\n  return (\n    <div className=\"w-full max-w-xl flex flex-col items-start gap-4\">\n      <TimeInput granularity=\"hour\" label=\"Hour\" value={date} onChange={setDate} />\n      <TimeInput granularity=\"minute\" label=\"Minute\" value={date} onChange={setDate} />\n      <TimeInput granularity=\"second\" label=\"Second\" value={date} onChange={setDate} />\n    </div>\n  );\n}`,Ha=`import {TimeInput} from \"@nextui-org/react\";\nimport type {TimeValue} from \"@react-types/datepicker\";\nimport {Time, parseAbsoluteToLocal} from \"@internationalized/date\";\n\nexport default function App() {\n  let [date, setDate] = React.useState<TimeInputValue>(parseAbsoluteToLocal(\"2021-04-07T18:45:22Z\"));\n\n  return (\n    <div className=\"w-full max-w-xl flex flex-col items-start gap-4\">\n      <TimeInput granularity=\"hour\" label=\"Hour\" value={date} onChange={setDate} />\n      <TimeInput granularity=\"minute\" label=\"Minute\" value={date} onChange={setDate} />\n      <TimeInput granularity=\"second\" label=\"Second\" value={date} onChange={setDate} />\n    </div>\n  );\n}`,Ka={\"/App.jsx\":qa,\"/App.tsx\":Ha},q={...Ka};var Xa=`import {TimeInput} from \"@nextui-org/react\";\nimport {Time} from \"@internationalized/date\";\n\nexport default function App() {\n  return (\n    <TimeInput \n      defaultValue={new Time(8)}\n      minValue={new Time(9)}\n    />\n  );\n}`,Ja={\"/App.jsx\":Xa},H={...Ja};var $a=`import {TimeInput} from \"@nextui-org/react\";\nimport {Time} from \"@internationalized/date\";\n\nexport default function App() {\n  return (\n    <TimeInput \n      defaultValue={new Time(18)}\n      maxValue={new Time(17)}\n    />\n  );\n}`,Qa={\"/App.jsx\":$a},K={...Qa};var eo=`import {TimeInput} from \"@nextui-org/react\";\nimport {Time} from \"@internationalized/date\";\n\nexport default function App() {\n  return (\n    <TimeInput \n      label=\"Meeting time\"\n      placeholderValue={new Time(9)}\n    />\n  );\n}`,to={\"/App.jsx\":eo},X={...to};var ao=`import {TimeInput} from \"@nextui-org/react\";\nimport {parseZonedDateTime} from \"@internationalized/date\";\n\nexport default function App() {\n  return (\n    <TimeInput \n      label=\"Meeting time\"\n      hideTimeZone \n      defaultValue={parseZonedDateTime(\"2022-11-07T10:45[America/Los_Angeles]\")} \n    />\n  );\n}`,oo={\"/App.jsx\":ao},J={...oo};var no=`import {TimeInput} from \"@nextui-org/react\";\nimport {Time, parseZonedDateTime} from \"@internationalized/date\";\n\nexport default function App() {\n  return (\n    <TimeInput \n      label=\"Meeting time\"\n      hourCycle={24}\n      defaultValue={parseZonedDateTime(\"2022-11-07T00:45[America/Los_Angeles]\")}\n      granularity=\"minute\" \n    />\n  );\n}`,ro={\"/App.jsx\":no},$={...ro};var Q={usage:j,required:M,disabled:B,readonly:S,withoutLabel:z,withDescription:W,errorMessage:F,errorMessageFunction:_,labelPlacement:U,startContent:G,endContent:O,controlled:E,timezones:Y,granularity:q,minTimeValue:H,maxTimeValue:K,placeholderValue:X,hideTimeZone:J,hourCycle:$};var lo=`import {Calendar} from \"@nextui-org/react\";\nimport {parseDate} from '@internationalized/date';\n\nexport default function App() {\n  return (\n    <div className=\"flex gap-x-4\">\n      <Calendar aria-label=\"Date (No Selection)\" />\n      <Calendar aria-label=\"Date (Uncontrolled)\" defaultValue={parseDate(\"2020-02-03\")} />\n    </div>\n  );\n}`,io={\"/App.jsx\":lo},ee={...io};var so=`import {Calendar} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <Calendar aria-label=\"Date (Disabled)\" isDisabled />\n  );\n}`,co={\"/App.jsx\":so},te={...co};var po=`import {Calendar} from \"@nextui-org/react\";\nimport {today, getLocalTimeZone} from \"@internationalized/date\";\n\nexport default function App() {\n  return (\n    <Calendar \n      aria-label=\"Date (Read Only)\" \n      value={today(getLocalTimeZone())} \n      isReadOnly \n    />\n  );\n}`,uo={\"/App.jsx\":po},ae={...uo};var mo=`import {Calendar} from \"@nextui-org/react\";\nimport {parseDate} from \"@internationalized/date\";\n\nexport default function App() {\n  let [value, setValue] = React.useState(parseDate(\"2024-03-07\"));\n\n  return (\n    <Calendar \n      aria-label=\"Date (Controlled)\" \n      value={value} \n      onChange={setValue} \n    />\n  );\n}`,fo=`import {Calendar} from \"@nextui-org/react\";\nimport type {DateValue} from \"@react-types/calendar\";\nimport {parseDate} from \"@internationalized/date\";\n\nexport default function App() {\n  let [value, setValue] = React.useState<DateValue>(parseDate(\"2024-03-07\"));\n\n  return (\n    <Calendar \n      aria-label=\"Date (Controlled)\" \n      value={value} \n      onChange={setValue} \n    />\n  );\n}`,xo={\"/App.jsx\":mo,\"/App.tsx\":fo},oe={...xo};var ho=`import {Calendar} from \"@nextui-org/react\";\nimport {today, getLocalTimeZone} from \"@internationalized/date\";\n\nexport default function App() {\n  return (\n    <Calendar\n      aria-label=\"Date (Min Date Value)\"\n      defaultValue={today(getLocalTimeZone())}\n      minValue={today(getLocalTimeZone())}\n    />\n  );\n}`,go={\"/App.jsx\":ho},ne={...go};var vo=`import {Calendar} from \"@nextui-org/react\";\nimport {today, getLocalTimeZone} from \"@internationalized/date\";\n\nexport default function App() {\n  return (\n    <Calendar\n      aria-label=\"Date (Max Date Value)\"\n      defaultValue={today(getLocalTimeZone())}\n      maxValue={today(getLocalTimeZone())}\n    />\n  );\n}`,bo={\"/App.jsx\":vo},re={...bo};var wo=`import {Calendar} from \"@nextui-org/react\";\nimport {today, getLocalTimeZone, isWeekend} from \"@internationalized/date\";\nimport {useLocale} from \"@react-aria/i18n\";\n\n\nexport default function App() {\n  let now = today(getLocalTimeZone());\n\n  let disabledRanges = [\n    [now, now.add({days: 5})],\n    [now.add({days: 14}), now.add({days: 16})],\n    [now.add({days: 23}), now.add({days: 24})],\n  ];\n\n  let {locale} = useLocale();\n\n  let isDateUnavailable = (date) =>\n    isWeekend(date, locale) ||\n    disabledRanges.some(\n      (interval) => date.compare(interval[0]) >= 0 && date.compare(interval[1]) <= 0,\n    );\n\n  return (\n    <Calendar\n      aria-label=\"Date (Unavailable)\"\n      isDateUnavailable={isDateUnavailable} \n    />\n  );\n}`,Do={\"/App.jsx\":wo},le={...Do};var yo=`import {Calendar} from \"@nextui-org/react\";\nimport {today, getLocalTimeZone} from \"@internationalized/date\";\n\nexport default function App() {\n  let defaultDate = today(getLocalTimeZone());\n  let [focusedDate, setFocusedDate] = React.useState(defaultDate);\n\n  return (\n    <Calendar\n      aria-label=\"Date (Controlled Focused Value)\"\n      focusedValue={focusedDate}\n      value={defaultDate}\n      onFocusChange={setFocusedDate}\n    />\n  );\n}`,Ao=`import {Calendar} from \"@nextui-org/react\";\nimport type {DateValue} from \"@react-types/calendar\";\nimport {today, getLocalTimeZone} from \"@internationalized/date\";\n\nexport default function App() {\n  let defaultDate = today(getLocalTimeZone());\n  let [focusedDate, setFocusedDate] = React.useState<DateValue>(defaultDate);\n\n  return (\n    <Calendar\n      aria-label=\"Date (Controlled Focused Value)\"\n      focusedValue={focusedDate}\n      value={defaultDate}\n      onFocusChange={setFocusedDate}\n    />\n  );\n}`,Co={\"/App.jsx\":yo,\"/App.tsx\":Ao},ie={...Co};var To=`import {Calendar} from \"@nextui-org/react\";\nimport {today, getLocalTimeZone, isWeekend} from \"@internationalized/date\";\nimport {useLocale} from \"@react-aria/i18n\";\n\n\nexport default function App() {\n  let [date, setDate] = React.useState(today(getLocalTimeZone()));\n  let {locale} = useLocale();\n  let isInvalid = isWeekend(date, locale);\n\n  return (\n    <Calendar\n      aria-label=\"Date (Invalid on weekends)\"\n      errorMessage={isInvalid ? \"We are closed on weekends\" : undefined}\n      isInvalid={isInvalid}\n      value={date}\n      onChange={setDate}\n    />\n  );\n}`,Ro=`import {Calendar} from \"@nextui-org/react\";\nimport type {DateValue} from \"@react-types/calendar\";\nimport {today, getLocalTimeZone, isWeekend} from \"@internationalized/date\";\nimport {useLocale} from \"@react-aria/i18n\";\n\n\nexport default function App() {\n  let [date, setDate] = React.useState<DateValue>(today(getLocalTimeZone()));\n  let {locale} = useLocale();\n  let isInvalid = isWeekend(date, locale);\n\n  return (\n    <Calendar\n      aria-label=\"Date (Invalid on weekends)\"\n      errorMessage={isInvalid ? \"We are closed on weekends\" : undefined}\n      isInvalid={isInvalid}\n      value={date}\n      onChange={setDate}\n    />\n  );\n}`,ko={\"/App.jsx\":To,\"/App.tsx\":Ro},de={...ko};var Po=`import {Calendar} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <Calendar \n      aria-label=\"Date (Show Month and Year Picker)\" \n      showMonthAndYearPickers \n    />\n  );\n}`,Io={\"/App.jsx\":Po},se={...Io};var No=`import {Calendar} from \"@nextui-org/react\";\nimport {I18nProvider} from \"@react-aria/i18n\";\n\nexport default function App() {\n  return (\n    <I18nProvider locale=\"zh-CN-u-ca-chinese\">\n      <Calendar aria-label=\"Date (International Calendar)\" />\n    </I18nProvider>\n  );\n}`,Vo={\"/App.jsx\":No},ce={...Vo};var Lo=`import {Calendar} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <Calendar \n      aria-label=\"Date (Visible Month)\" \n      visibleMonths={3} \n    />\n  );\n}`,Zo={\"/App.jsx\":Lo},pe={...Zo};var jo=`import {Calendar} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <Calendar \n      aria-label=\"Date (Page Behaviour)\" \n      pageBehavior=\"single\" \n    />\n  );\n}`,Mo={\"/App.jsx\":jo},ue={...Mo};var Bo=`import {Calendar, Radio, RadioGroup, Button, ButtonGroup, cn} from \"@nextui-org/react\";\nimport {today, getLocalTimeZone, startOfWeek, startOfMonth} from \"@internationalized/date\";\nimport {useLocale} from \"@react-aria/i18n\";\n\nexport default function App() {\n  let defaultDate = today(getLocalTimeZone());\n  let [value, setValue] = React.useState(defaultDate);\n  let {locale} = useLocale();\n\n  let now = today(getLocalTimeZone());\n  let nextWeek = startOfWeek(now.add({weeks: 1}), locale);\n  let nextMonth = startOfMonth(now.add({months: 1}));\n\n  const CustomRadio = (props) => {\n    const {children, ...otherProps} = props;\n\n    return (\n      <Radio\n        {...otherProps}\n        classNames={{\n          base: cn(\n            \"flex-none m-0 h-8 bg-content1 hover:bg-content2 items-center justify-between\",\n            \"cursor-pointer rounded-full border-2 border-default-200/60\",\n            \"data-[selected=true]:border-primary\",\n          ),\n          label: \"text-tiny text-default-500\",\n          labelWrapper: \"px-1 m-0\",\n          wrapper: \"hidden\",\n        }}\n      >\n        {children}\n      </Radio>\n    );\n  };\n\n  return (\n    <div className=\"flex flex-col gap-4\">\n      <Calendar\n        aria-label=\"Date (Presets)\"\n        bottomContent={\n          <RadioGroup\n            aria-label=\"Date precision\"\n            classNames={{\n              base: \"w-full pb-2\",\n              wrapper: \"-my-2.5 py-2.5 px-3 gap-1 flex-nowrap max-w-[280px] overflow-x-scroll\",\n            }}\n            defaultValue=\"exact_dates\"\n            orientation=\"horizontal\"\n          >\n            <CustomRadio value=\"exact_dates\">Exact dates</CustomRadio>\n            <CustomRadio value=\"1_day\">1 day</CustomRadio>\n            <CustomRadio value=\"2_days\">2 days</CustomRadio>\n            <CustomRadio value=\"3_days\">3 days</CustomRadio>\n            <CustomRadio value=\"7_days\">7 days</CustomRadio>\n            <CustomRadio value=\"14_days\">14 days</CustomRadio>\n          </RadioGroup>\n        }\n        classNames={{\n          content: \"w-full\",\n        }}\n        focusedValue={value}\n        nextButtonProps={{\n          variant: \"bordered\",\n        }}\n        prevButtonProps={{\n          variant: \"bordered\",\n        }}\n        topContent={\n          <ButtonGroup\n            fullWidth\n            className=\"px-3 pb-2 pt-3 bg-content1 [&>button]:text-default-500 [&>button]:border-default-200/60\"\n            radius=\"full\"\n            size=\"sm\"\n            variant=\"bordered\"\n          >\n            <Button onPress={() => setValue(now)}>Today</Button>\n            <Button onPress={() => setValue(nextWeek)}>Next week</Button>\n            <Button onPress={() => setValue(nextMonth)}>Next month</Button>\n          </ButtonGroup>\n        }\n        value={value}\n        onChange={setValue}\n        onFocusChange={setValue}\n      />\n    </div>\n  );\n}`,So=`import {Calendar, Radio, RadioGroup, Button, ButtonGroup, cn} from \"@nextui-org/react\";\nimport type {DateValue} from \"@react-types/calendar\";\nimport {today, getLocalTimeZone, startOfWeek, startOfMonth} from \"@internationalized/date\";\nimport {useLocale} from \"@react-aria/i18n\";\n\nexport default function App() {\n  let defaultDate = today(getLocalTimeZone());\n  let [value, setValue] = React.useState<DateValue>(defaultDate);\n  let {locale} = useLocale();\n\n  let now = today(getLocalTimeZone());\n  let nextWeek = startOfWeek(now.add({weeks: 1}), locale);\n  let nextMonth = startOfMonth(now.add({months: 1}));\n\n  const CustomRadio = (props) => {\n    const {children, ...otherProps} = props;\n\n    return (\n      <Radio\n        {...otherProps}\n        classNames={{\n          base: cn(\n            \"flex-none m-0 h-8 bg-content1 hover:bg-content2 items-center justify-between\",\n            \"cursor-pointer rounded-full border-2 border-default-200/60\",\n            \"data-[selected=true]:border-primary\",\n          ),\n          label: \"text-tiny text-default-500\",\n          labelWrapper: \"px-1 m-0\",\n          wrapper: \"hidden\",\n        }}\n      >\n        {children}\n      </Radio>\n    );\n  };\n\n  return (\n    <div className=\"flex flex-col gap-4\">\n      <Calendar\n        aria-label=\"Date (Presets)\"\n        bottomContent={\n          <RadioGroup\n            aria-label=\"Date precision\"\n            classNames={{\n              base: \"w-full pb-2\",\n              wrapper: \"-my-2.5 py-2.5 px-3 gap-1 flex-nowrap max-w-[280px] overflow-scroll\",\n            }}\n            defaultValue=\"exact_dates\"\n            orientation=\"horizontal\"\n          >\n            <CustomRadio value=\"exact_dates\">Exact dates</CustomRadio>\n            <CustomRadio value=\"1_day\">1 day</CustomRadio>\n            <CustomRadio value=\"2_days\">2 days</CustomRadio>\n            <CustomRadio value=\"3_days\">3 days</CustomRadio>\n            <CustomRadio value=\"7_days\">7 days</CustomRadio>\n            <CustomRadio value=\"14_days\">14 days</CustomRadio>\n          </RadioGroup>\n        }\n        classNames={{\n          content: \"w-full\",\n        }}\n        focusedValue={value}\n        nextButtonProps={{\n          variant: \"bordered\",\n        }}\n        prevButtonProps={{\n          variant: \"bordered\",\n        }}\n        topContent={\n          <ButtonGroup\n            fullWidth\n            className=\"px-3 pb-2 pt-3 bg-content1 [&>button]:text-default-500 [&>button]:border-default-200/60\"\n            radius=\"full\"\n            size=\"sm\"\n            variant=\"bordered\"\n          >\n            <Button onPress={() => setValue(now)}>Today</Button>\n            <Button onPress={() => setValue(nextWeek)}>Next week</Button>\n            <Button onPress={() => setValue(nextMonth)}>Next month</Button>\n          </ButtonGroup>\n        }\n        value={value}\n        onChange={setValue}\n        onFocusChange={setValue}\n      />\n    </div>\n  );\n}`,zo={\"/App.jsx\":Bo,\"/App.tsx\":So},me={...zo};var s={usage:ee,disabled:te,readonly:ae,controlled:oe,minDateValue:ne,maxDateValue:re,unavailableDates:le,controlledFocusedValue:ie,invalidDate:de,withMonthAndYearPicker:se,internationalCalendars:ce,visibleMonths:pe,pageBehaviour:ue,presets:me};var Wo=`import {RangeCalendar} from \"@nextui-org/react\";\nimport {today, getLocalTimeZone} from '@internationalized/date';\n\nexport default function App() {\n  return (\n    <div className=\"flex gap-x-4\">\n      <RangeCalendar aria-label=\"Date (No Selection)\" />\n      <RangeCalendar\n        aria-label=\"Date (Uncontrolled)\"\n        defaultValue={{\n          start: today(getLocalTimeZone()),\n          end: today(getLocalTimeZone()).add({weeks: 1}),\n        }}\n      />\n    </div>\n  );\n}`,Fo={\"/App.jsx\":Wo},fe={...Fo};var _o=`import {RangeCalendar} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <RangeCalendar aria-label=\"Date (Disabled)\" isDisabled />\n  );\n}`,Uo={\"/App.jsx\":_o},xe={...Uo};var Go=`import {RangeCalendar} from \"@nextui-org/react\";\nimport {today, getLocalTimeZone} from \"@internationalized/date\";\n\nexport default function App() {\n  return (\n    <RangeCalendar \n      aria-label=\"Date (Read Only)\" \n      value={{\n        start: today(getLocalTimeZone()),\n        end: today(getLocalTimeZone()).add({weeks: 1}),\n      }} \n      isReadOnly \n    />\n  );\n}`,Oo={\"/App.jsx\":Go},he={...Oo};var Eo=`import {RangeCalendar} from \"@nextui-org/react\";\nimport {today, getLocalTimeZone} from \"@internationalized/date\";\n\nexport default function App() {\n  let [value, setValue] = React.useState({\n    start: today(getLocalTimeZone()),\n    end: today(getLocalTimeZone()).add({weeks: 1}),\n  });\n\n  return (\n    <RangeCalendar \n      aria-label=\"Date (Controlled)\" \n      value={value} \n      onChange={setValue} \n    />\n  );\n}`,Yo=`import {RangeCalendar} from \"@nextui-org/react\";\nimport type {DateValue} from \"@react-types/calendar\";\nimport type {RangeValue} from \"@react-types/shared\";\nimport {today, getLocalTimeZone} from \"@internationalized/date\";\n\nexport default function App() {\n  let [value, setValue] = React.useState<RangeValue<DateValue>>({\n    start: today(getLocalTimeZone()),\n    end: today(getLocalTimeZone()).add({weeks: 1}),\n  });\n\n  return (\n    <RangeCalendar \n      aria-label=\"Date (Controlled)\" \n      value={value} \n      onChange={setValue} \n    />\n  );\n}`,qo={\"/App.jsx\":Eo,\"/App.tsx\":Yo},ge={...qo};var Ho=`import {RangeCalendar} from \"@nextui-org/react\";\nimport {today, getLocalTimeZone} from \"@internationalized/date\";\n\nexport default function App() {\n  return (\n    <RangeCalendar\n      aria-label=\"Date (Min Date Value)\"\n      minValue={today(getLocalTimeZone())}\n    />\n  );\n}`,Ko={\"/App.jsx\":Ho},ve={...Ko};var Xo=`import {RangeCalendar} from \"@nextui-org/react\";\nimport {today, getLocalTimeZone} from \"@internationalized/date\";\n\nexport default function App() {\n  return (\n    <RangeCalendar\n      aria-label=\"Date (Max Date Value)\"\n      maxValue={today(getLocalTimeZone())}\n    />\n  );\n}`,Jo={\"/App.jsx\":Xo},be={...Jo};var $o=`import {RangeCalendar} from \"@nextui-org/react\";\nimport {today, getLocalTimeZone, isWeekend} from \"@internationalized/date\";\nimport {useLocale} from \"@react-aria/i18n\";\n\n\nexport default function App() {\n  let now = today(getLocalTimeZone());\n\n  let disabledRanges = [\n    [now, now.add({days: 5})],\n    [now.add({days: 14}), now.add({days: 16})],\n    [now.add({days: 23}), now.add({days: 24})],\n  ];\n\n  let {locale} = useLocale();\n\n  let isDateUnavailable = (date) =>\n    isWeekend(date, locale) ||\n    disabledRanges.some(\n      (interval) => date.compare(interval[0]) >= 0 && date.compare(interval[1]) <= 0,\n    );\n\n  return (\n    <RangeCalendar\n      aria-label=\"Date (Unavailable)\"\n      isDateUnavailable={isDateUnavailable} \n    />\n  );\n}`,Qo={\"/App.jsx\":$o},we={...Qo};var en=`import {RangeCalendar} from \"@nextui-org/react\";\nimport {today, getLocalTimeZone} from \"@internationalized/date\";\n\nexport default function App() {\n  let defaultDate = today(getLocalTimeZone());\n  let [focusedDate, setFocusedDate] = React.useState(defaultDate);\n\n  return (\n    <RangeCalendar\n      aria-label=\"Date (Controlled Focused Value)\"\n      focusedValue={focusedDate}\n      onFocusChange={setFocusedDate}\n    />\n  );\n}`,tn={\"/App.jsx\":en},De={...tn};var an=`import {RangeCalendar} from \"@nextui-org/react\";\nimport {today, getLocalTimeZone, isWeekend} from \"@internationalized/date\";\nimport {useLocale} from \"@react-aria/i18n\";\n\n\nexport default function App() {\n  let [date, setDate] = React.useState({\n    start: today(getLocalTimeZone()),\n    end: today(getLocalTimeZone()).add({weeks: 1}),\n  });\n  let {locale} = useLocale();\n  let isInvalid = isWeekend(date.start, locale) || isWeekend(date.end, locale);\n\n  return (\n    <RangeCalendar\n      aria-label=\"Date (Invalid on weekends)\"\n      errorMessage={isInvalid ? \"We are closed on weekends\" : undefined}\n      isInvalid={isInvalid}\n      value={date}\n      onChange={setDate}\n    />\n  );\n}`,on=`import {RangeCalendar} from \"@nextui-org/react\";\nimport type {DateValue} from \"@react-types/calendar\";\nimport type {RangeValue} from \"@react-types/shared\";\nimport {today, getLocalTimeZone, isWeekend} from \"@internationalized/date\";\nimport {useLocale} from \"@react-aria/i18n\";\n\n\nexport default function App() {\n  let [date, setDate] = React.useState<RangeValue<DateValue>>({\n    start: today(getLocalTimeZone()),\n    end: today(getLocalTimeZone()).add({weeks: 1}),\n  });\n  let {locale} = useLocale();\n  let isInvalid = isWeekend(date.start, locale) || isWeekend(date.end, locale);\n\n  return (\n    <RangeCalendar\n      aria-label=\"Date (Invalid on weekends)\"\n      errorMessage={isInvalid ? \"We are closed on weekends\" : undefined}\n      isInvalid={isInvalid}\n      value={date}\n      onChange={setDate}\n    />\n  );\n}`,nn={\"/App.jsx\":an,\"/App.tsx\":on},ye={...nn};var rn=`import {RangeCalendar} from \"@nextui-org/react\";\nimport {isWeekend} from \"@internationalized/date\";\nimport {useLocale} from \"@react-aria/i18n\";\n\nexport default function App() {\n  let {locale} = useLocale();\n\n  return (\n    <RangeCalendar\n      allowsNonContiguousRanges\n      aria-label=\"Time off request\"\n      isDateUnavailable={(date) => isWeekend(date, locale)}\n    />\n  );\n}`,ln={\"/App.jsx\":rn},Ae={...ln};var dn=`import {RangeCalendar} from \"@nextui-org/react\";\nimport {I18nProvider} from \"@react-aria/i18n\";\n\nexport default function App() {\n  return (\n    <I18nProvider locale=\"zh-CN-u-ca-chinese\">\n      <RangeCalendar aria-label=\"Date (International RangeCalendar)\" />\n    </I18nProvider>\n  );\n}`,sn={\"/App.jsx\":dn},Ce={...sn};var cn=`import {RangeCalendar} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <RangeCalendar \n      aria-label=\"Date (Visible Month)\" \n      visibleMonths={3} \n    />\n  );\n}`,pn={\"/App.jsx\":cn},Te={...pn};var un=`import {RangeCalendar} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <RangeCalendar \n      aria-label=\"Date (Page Behaviour)\" \n      pageBehavior=\"single\" \n    />\n  );\n}`,mn={\"/App.jsx\":un},Re={...mn};var fn=`import {RangeCalendar, Radio, RadioGroup, Button, ButtonGroup, cn} from \"@nextui-org/react\";\nimport {today, getLocalTimeZone, startOfWeek, startOfMonth} from \"@internationalized/date\";\nimport {useLocale} from \"@react-aria/i18n\";\n\nexport default function App() {\n  let [value, setValue] = React.useState({\n    start: today(getLocalTimeZone()),\n    end: today(getLocalTimeZone()).add({weeks: 1, days: 3}),\n  });\n  let [focusedValue, setFocusedValue] = React.useState(today(getLocalTimeZone()));\n\n  let {locale} = useLocale();\n\n  let now = today(getLocalTimeZone());\n  let nextMonth = now.add({months: 1});\n\n  let nextWeek = {\n    start: startOfWeek(now.add({weeks: 1}), locale),\n    end: endOfWeek(now.add({weeks: 1}), locale),\n  };\n  let thisMonth = {start: startOfMonth(now), end: endOfMonth(now)};\n  let nextMonthValue = {start: startOfMonth(nextMonth), end: endOfMonth(nextMonth)};\n\n\n  const CustomRadio = (props) => {\n    const {children, ...otherProps} = props;\n\n    return (\n      <Radio\n        {...otherProps}\n        classNames={{\n          base: cn(\n            \"flex-none m-0 h-8 bg-content1 hover:bg-content2 items-center justify-between\",\n            \"cursor-pointer rounded-full border-2 border-default-200/60\",\n            \"data-[selected=true]:border-primary\",\n          ),\n          label: \"text-tiny text-default-500\",\n          labelWrapper: \"px-1 m-0\",\n          wrapper: \"hidden\",\n        }}\n      >\n        {children}\n      </Radio>\n    );\n  };\n\n  return (\n    <div className=\"flex flex-col gap-4\">\n      <RangeCalendar\n        bottomContent={\n          <RadioGroup\n            aria-label=\"Date precision\"\n            classNames={{\n              base: \"w-full pb-2\",\n              wrapper: \"-my-2.5 py-2.5 px-3 gap-1 flex-nowrap max-w-[280px] overflow-x-scroll\",\n            }}\n            defaultValue=\"exact_dates\"\n            orientation=\"horizontal\"\n          >\n            <CustomRadio value=\"exact_dates\">Exact dates</CustomRadio>\n            <CustomRadio value=\"1_day\">1 day</CustomRadio>\n            <CustomRadio value=\"2_days\">2 days</CustomRadio>\n            <CustomRadio value=\"3_days\">3 days</CustomRadio>\n            <CustomRadio value=\"7_days\">7 days</CustomRadio>\n            <CustomRadio value=\"14_days\">14 days</CustomRadio>\n          </RadioGroup>\n        }\n        classNames={{\n          content: \"w-full\",\n        }}\n        focusedValue={focusedValue}\n        nextButtonProps={{\n          variant: \"bordered\",\n        }}\n        prevButtonProps={{\n          variant: \"bordered\",\n        }}\n        topContent={\n          <ButtonGroup\n            fullWidth\n            className=\"px-3 max-w-full pb-2 pt-3 bg-content1 [&>button]:text-default-500 [&>button]:border-default-200/60\"\n            radius=\"full\"\n            size=\"sm\"\n            variant=\"bordered\"\n          >\n            <Button\n              onPress={() => {\n                setValue(nextWeek);\n                setFocusedValue(nextWeek.end);\n              }}\n            >\n              Next week\n            </Button>\n            <Button\n              onPress={() => {\n                setValue(thisMonth);\n                setFocusedValue(thisMonth.start);\n              }}\n            >\n              This month\n            </Button>\n            <Button\n              onPress={() => {\n                setValue(nextMonthValue), setFocusedValue(nextMonthValue.start);\n              }}\n            >\n              Next month\n            </Button>\n          </ButtonGroup>\n        }\n        value={value}\n        onChange={setValue}\n        onFocusChange={setFocusedValue}\n      />\n    </div>\n  );\n}`,xn=`import {RangeCalendar, Radio, RadioGroup, Button, ButtonGroup, cn} from \"@nextui-org/react\";\nimport type {DateValue} from \"@react-types/calendar\";\nimport type {RangeValue} from \"@react-types/shared\";\nimport {today, getLocalTimeZone, startOfWeek, startOfMonth} from \"@internationalized/date\";\nimport {useLocale} from \"@react-aria/i18n\";\n\nexport default function App() {\n  let [value, setValue] = React.useState<RangeValue<DateValue>>({\n    start: today(getLocalTimeZone()),\n    end: today(getLocalTimeZone()).add({weeks: 1, days: 3}),\n  });\n  \n  let [focusedValue, setFocusedValue] = React.useState<DateValue>(today(getLocalTimeZone()));\n\n  let {locale} = useLocale();\n\n  let now = today(getLocalTimeZone());\n  let nextMonth = now.add({months: 1});\n\n  let nextWeek = {\n    start: startOfWeek(now.add({weeks: 1}), locale),\n    end: endOfWeek(now.add({weeks: 1}), locale),\n  };\n  let thisMonth = {start: startOfMonth(now), end: endOfMonth(now)};\n  let nextMonthValue = {start: startOfMonth(nextMonth), end: endOfMonth(nextMonth)};\n\n\n  const CustomRadio = (props) => {\n    const {children, ...otherProps} = props;\n\n    return (\n      <Radio\n        {...otherProps}\n        classNames={{\n          base: cn(\n            \"flex-none m-0 h-8 bg-content1 hover:bg-content2 items-center justify-between\",\n            \"cursor-pointer rounded-full border-2 border-default-200/60\",\n            \"data-[selected=true]:border-primary\",\n          ),\n          label: \"text-tiny text-default-500\",\n          labelWrapper: \"px-1 m-0\",\n          wrapper: \"hidden\",\n        }}\n      >\n        {children}\n      </Radio>\n    );\n  };\n\n  return (\n    <div className=\"flex flex-col gap-4\">\n      <RangeCalendar\n        bottomContent={\n          <RadioGroup\n            aria-label=\"Date precision\"\n            classNames={{\n              base: \"w-full pb-2\",\n              wrapper: \"-my-2.5 py-2.5 px-3 gap-1 flex-nowrap max-w-[280px] overflow-x-scroll\",\n            }}\n            defaultValue=\"exact_dates\"\n            orientation=\"horizontal\"\n          >\n            <CustomRadio value=\"exact_dates\">Exact dates</CustomRadio>\n            <CustomRadio value=\"1_day\">1 day</CustomRadio>\n            <CustomRadio value=\"2_days\">2 days</CustomRadio>\n            <CustomRadio value=\"3_days\">3 days</CustomRadio>\n            <CustomRadio value=\"7_days\">7 days</CustomRadio>\n            <CustomRadio value=\"14_days\">14 days</CustomRadio>\n          </RadioGroup>\n        }\n        focusedValue={focusedValue}\n        nextButtonProps={{\n          variant: \"bordered\",\n        }}\n        prevButtonProps={{\n          variant: \"bordered\",\n        }}\n        topContent={\n          <ButtonGroup\n            fullWidth\n            className=\"px-3 max-w-full pb-2 pt-3 bg-content1 [&>button]:text-default-500 [&>button]:border-default-200/60\"\n            radius=\"full\"\n            size=\"sm\"\n            variant=\"bordered\"\n          >\n            <Button\n              onPress={() => {\n                setValue(nextWeek);\n                setFocusedValue(nextWeek.end);\n              }}\n            >\n              Next week\n            </Button>\n            <Button\n              onPress={() => {\n                setValue(thisMonth);\n                setFocusedValue(thisMonth.start);\n              }}\n            >\n              This month\n            </Button>\n            <Button\n              onPress={() => {\n                setValue(nextMonthValue), setFocusedValue(nextMonthValue.start);\n              }}\n            >\n              Next month\n            </Button>\n          </ButtonGroup>\n        }\n        value={value}\n        onChange={setValue}\n        onFocusChange={setFocusedValue}\n      />\n    </div>\n  );\n}`,hn={\"/App.jsx\":fn},gn={\"/App.tsx\":xn},ke={...hn,...gn};var vn=`import {RangeCalendar} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <RangeCalendar \n      aria-label=\"Date (Show Month and Year Picker)\" \n      showMonthAndYearPickers \n    />\n  );\n}`,bn={\"/App.jsx\":vn},Pe={...bn};var Ie={usage:fe,disabled:xe,readonly:he,controlled:ge,minDateValue:ve,maxDateValue:be,unavailableDates:we,controlledFocusedValue:De,invalidDate:ye,nonContiguousRanges:Ae,internationalCalendars:Ce,visibleMonths:Te,pageBehaviour:Re,presets:ke,withMonthAndYearPicker:Pe};var wn=`import {DatePicker} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <DatePicker label=\"Birth date\" className=\"max-w-[284px]\" />\n  );\n}`,Dn={\"/App.jsx\":wn},Ne={...Dn};var yn=`import {DatePicker} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <div className=\"flex w-full flex-wrap md:flex-nowrap gap-4\">\n        <DatePicker \n          label=\"Birth date\"\n          className=\"max-w-[284px]\"\n          isDisabled\n        />\n    </div>\n  );\n}`,An={\"/App.jsx\":yn},Ve={...An};var Cn=`import {DatePicker} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <div className=\"flex w-full flex-wrap md:flex-nowrap gap-4\">\n        <DatePicker \n          label=\"Birth date\"\n          className=\"max-w-[284px]\"\n          isReadOnly\n        />\n    </div>\n  );\n}`,Tn={\"/App.jsx\":Cn},Le={...Tn};var Rn=`import {DatePicker} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <div className=\"flex w-full flex-wrap md:flex-nowrap gap-4\">\n        <DatePicker \n          label=\"Birth date\"\n          className=\"max-w-[284px]\"\n          isRequired\n        />\n    </div>\n  );\n}`,kn={\"/App.jsx\":Rn},Ze={...kn};var Pn=`import {DatePicker} from \"@nextui-org/react\";\n\nexport default function App() {\n  const variants = [\"flat\", \"bordered\", \"underlined\", \"faded\"];\n\n  return (\n    <div className=\"w-full flex flex-col gap-4\">\n      {variants.map((variant) => (\n        <div key={variant} className=\"flex w-full flex-wrap md:flex-nowrap mb-6 md:mb-0 gap-4\">\n          <DatePicker label={\"Birth date\"} variant={variant} />\n        </div>\n      ))}  \n    </div>  \n  );\n}`,In={\"/App.jsx\":Pn},je={...In};var Nn=`import {DatePicker} from \"@nextui-org/react\";\n\nexport default function App() {\n  const placements = [\n    \"inside\",\n    \"outside\",\n    \"outside-left\",\n  ];\n\n  return (\n    <div className=\"flex flex-col gap-4\">\n      <div className=\"flex flex-col gap-2\">\n        <div className=\"flex w-full flex-wrap items-end md:flex-nowrap mb-6 md:mb-0 gap-4\">\n          {placements.map((placement) => (\n            <DatePicker \n              label={\"Birth date\"} \n              className=\"max-w-[284px]\"\n              description={placement}\n              labelPlacement={placement}\n            />\n          ))}\n        </div>\n      </div>  \n    </div>  \n  );\n}`,Vn={\"/App.jsx\":Nn},Me={...Vn};var Ln=`import {DatePicker} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <div className=\"flex w-full flex-wrap md:flex-nowrap gap-4\">\n      <DatePicker \n        label=\"Birth date\"\n        className=\"max-w-[284px]\"\n        description={\"This is my birth date.\"}\n      />\n    </div>\n  );\n}`,Zn={\"/App.jsx\":Ln},Be={...Zn};var jn=`import {DatePicker} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <div className=\"flex w-full flex-wrap md:flex-nowrap gap-4\">\n      <DatePicker \n        label=\"Birth date\"\n        className=\"max-w-[284px]\"\n        isInvalid\n        errorMessage=\"Please enter a valid date.\"\n      />\n    </div>\n  );\n}`,Mn={\"/App.jsx\":jn},Se={...Mn};var Bn=`import {DatePicker} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <div className=\"flex w-full flex-wrap md:flex-nowrap gap-4\">\n      <DatePicker \n        label=\"Birth date\"\n        className=\"max-w-[284px]\"\n        isInvalid\n        errorMessage={(value) => {\n          if (value.isInvalid) {\n            return \"Please enter a valid date.\";\n          }\n        }}\n      />\n    </div>\n  );\n}`,Sn={\"/App.jsx\":Bn},ze={...Sn};var zn=`import {DatePicker} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <div className=\"w-full max-w-xl flex flex-row gap-4\">\n      <DatePicker\n        label=\"Birth Date\"\n        variant=\"bordered\"\n        showMonthAndYearPickers\n      />\n    </div>\n  );\n}`,Wn={\"/App.jsx\":zn},We={...Wn};var Fn=`import {DatePicker} from \"@nextui-org/react\";\nimport {now, getLocalTimeZone} from \"@internationalized/date\";\n\nexport default function App() {\n  return (\n    <div className=\"w-full max-w-xl flex flex-row gap-4\">\n      <DatePicker\n        label=\"Event Date\"\n        variant=\"bordered\"\n        hideTimeZone\n        showMonthAndYearPickers\n        defaultValue={now(getLocalTimeZone())}\n      />\n    </div>\n  );\n}`,_n={\"/App.jsx\":Fn},Fe={..._n};var Un=`export const SelectorIcon = () => (\n  <svg height=\"1em\" viewBox=\"0 0 24 24\" width=\"1em\">\n    <g\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"2\"\n    >\n      <path d=\"M8 2v4m8-4v4\" />\n      <rect height=\"18\" rx=\"2\" width=\"18\" x=\"3\" y=\"4\" />\n      <path d=\"M3 10h18M8 14h.01M12 14h.01M16 14h.01M8 18h.01M12 18h.01M16 18h.01\" />\n    </g>\n  </svg>\n);`,Gn=`import {DatePicker} from \"@nextui-org/react\";\nimport {SelectorIcon} from './SelectorIcon';\n\nexport default function App() {\n  return (\n    <div className=\"flex w-full flex-wrap md:flex-nowrap gap-4\">\n      <DatePicker \n        label=\"Birth date\"\n        selectorIcon={<SelectorIcon />}\n      />\n    </div> \n  );\n}`,On={\"/App.jsx\":Gn,\"/SelectorIcon.jsx\":Un},_e={...On};var En=`import {DatePicker} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <div className=\"flex w-full flex-wrap md:flex-nowrap gap-4\">\n      <DatePicker \n        label=\"Placement start\"\n        selectorButtonPlacement=\"start\"\n      />\n      <DatePicker \n        label=\"Placement end (default)\"\n        selectorButtonPlacement=\"end\"\n      />\n    </div> \n  );\n}`,Yn={\"/App.jsx\":En},Ue={...Yn};var qn=`import {DatePicker} from \"@nextui-org/react\";\nimport {parseDate, getLocalTimeZone} from \"@internationalized/date\";\nimport {useDateFormatter} from \"@react-aria/i18n\";\n\nexport default function App() {\n  const [value, setValue] = React.useState(parseDate(\"2024-04-04\"));\n\n  let formatter = useDateFormatter({dateStyle: \"full\"});\n\n  return (\n    <div className=\"flex flex-row gap-2\">\n      <div className=\"w-full flex flex-col gap-y-2\">\n        <DatePicker className=\"max-w-[284px]\" label=\"Date (controlled)\" value={value} onChange={setValue} />\n        <p className=\"text-default-500 text-sm\">\n          Selected date: {value ? formatter.format(value.toDate(getLocalTimeZone())) : \"--\"}\n        </p>\n      </div>\n      <DatePicker className=\"max-w-[284px]\" defaultValue={parseDate(\"2024-04-04\")} label=\"Date (uncontrolled)\" />\n    </div>\n  );\n}`,Hn=`import {DatePicker} from \"@nextui-org/react\";\nimport {DateValue, parseDate, getLocalTimeZone} from \"@internationalized/date\";\nimport {useDateFormatter} from \"@react-aria/i18n\";\n\nexport default function App() {\n  const [value, setValue] = React.useState<DateValue>(parseDate(\"2024-04-04\"));\n\n  let formatter = useDateFormatter({dateStyle: \"full\"});\n\n  return (\n    <div className=\"flex flex-row gap-2\">\n      <div className=\"w-full flex flex-col gap-y-2\">\n        <DatePicker className=\"max-w-[284px]\" label=\"Date (controlled)\" value={value} onChange={setValue} />\n        <p className=\"text-default-500 text-sm\">\n          Selected date: {value ? formatter.format(value.toDate(getLocalTimeZone())) : \"--\"}\n        </p>\n      </div>\n      <DatePicker className=\"max-w-[284px]\" defaultValue={parseDate(\"2024-04-04\")} label=\"Date (uncontrolled)\" />\n    </div>\n  );\n}`,Kn={\"/App.jsx\":qn,\"/App.tsx\":Hn},Ge={...Kn};var Xn=`import {DatePicker} from \"@nextui-org/react\";\nimport {parseZonedDateTime, parseAbsoluteToLocal} from \"@internationalized/date\";\n\nexport default function App() {\n  return (\n     <div className=\"w-full max-w-xl flex flex-col items-start gap-4\">\n      <DatePicker\n        label=\"Zoned Date Time\"\n        className=\"max-w-xs\"\n        defaultValue={parseZonedDateTime(\"2022-11-07T00:45[America/Los_Angeles]\")}\n        labelPlacement=\"outside\"\n      />\n      <DatePicker\n        label=\"Zoned Date Time\"\n        className=\"max-w-xs\"\n        defaultValue={parseAbsoluteToLocal(\"2021-11-07T07:45:00Z\")}\n        labelPlacement=\"outside\"\n      />\n  </div>\n  );\n}`,Jn={\"/App.jsx\":Xn},Oe={...Jn};var $n=`import {DatePicker} from \"@nextui-org/react\";\nimport {now, parseAbsoluteToLocal} from \"@internationalized/date\";\n\nexport default function App() {\n  let [date, setDate] = React.useState(parseAbsoluteToLocal(\"2021-04-07T18:45:22Z\"));\n\n  return (\n    <div className=\"w-full max-w-xl flex flex-col items-start gap-4\">\n      <DatePicker\n        className=\"max-w-md\"\n        granularity=\"second\"\n        label=\"Date and time\"\n        value={date}\n        onChange={setDate}\n      />\n      <DatePicker\n        className=\"max-w-md\"\n        granularity=\"day\"\n        label=\"Date\"\n        value={date}\n        onChange={setDate}\n      />\n      <DatePicker className=\"max-w-md\" granularity=\"second\" label=\"Event date\" />\n      <DatePicker\n        className=\"max-w-md\"\n        granularity=\"second\"\n        label=\"Event date\"\n        placeholderValue={now(\"America/New_York\")}\n      />\n    </div>\n  );\n}`,Qn=`import {DatePicker} from \"@nextui-org/react\";\nimport {DateValue, now, parseAbsoluteToLocal} from \"@internationalized/date\";\n\nexport default function App() {\n  let [date, setDate] = React.useState<DateValue>(parseAbsoluteToLocal(\"2021-04-07T18:45:22Z\"));\n\n  return (\n    <div className=\"w-full max-w-xl flex flex-col items-start gap-4\">\n      <DatePicker\n        className=\"max-w-md\"\n        granularity=\"second\"\n        label=\"Date and time\"\n        value={date}\n        onChange={setDate}\n      />\n      <DatePicker\n        className=\"max-w-md\"\n        granularity=\"day\"\n        label=\"Date\"\n        value={date}\n        onChange={setDate}\n      />\n      <DatePicker className=\"max-w-md\" granularity=\"second\" label=\"Event date\" />\n      <DatePicker\n        className=\"max-w-md\"\n        granularity=\"second\"\n        label=\"Event date\"\n        placeholderValue={now(\"America/New_York\")}\n      />\n    </div>\n  );\n}`,er={\"/App.jsx\":$n,\"/App.tsx\":Qn},Ee={...er};var tr=`import {DatePicker} from \"@nextui-org/react\";\nimport {getLocalTimeZone, today} from \"@internationalized/date\";\n\nexport default function App() {\n  return (\n    <div className=\"w-full max-w-xl flex flex-row gap-4\">\n      <div className=\"w-full flex flex-col gap-1\">\n        <h3>Min date</h3>\n        <DatePicker\n          label=\"Date and time\"\n          minValue={today(getLocalTimeZone())}\n          defaultValue={today(getLocalTimeZone()).subtract({ days: 1 })}\n        />\n      </div>\n      <div className=\"w-full flex flex-col gap-1\">\n        <h3>Max date</h3>\n        <DatePicker\n          label=\"Date and time\"\n          maxValue={today(getLocalTimeZone())}\n          defaultValue={today(getLocalTimeZone()).add({ days: 1 })}\n        />\n      </div>\n    </div>\n  );\n}`,ar={\"/App.jsx\":tr},Ye={...ar};var or=`import {DatePicker} from \"@nextui-org/react\";\nimport {now, parseAbsoluteToLocal} from \"@internationalized/date\";\nimport {I18nProvider} from \"@react-aria/i18n\";\n\nexport default function App() {\n  let [date, setDate] = React.useState(parseAbsoluteToLocal(\"2021-04-07T18:45:22Z\"));\n\n  return (\n    <div className=\"flex flex-col gap-4\">\n      <I18nProvider locale=\"hi-IN-u-ca-indian\">\n        <DatePicker\n          showMonthAndYearPickers\n          variant=\"bordered\"\n          className=\"max-w-md\"\n          label=\"Appointment date\"\n          value={date}\n          onChange={setDate}\n        />\n      </I18nProvider>\n    </div>\n  );\n}`,nr=`import {DatePicker} from \"@nextui-org/react\";\nimport {DateValue, now, parseAbsoluteToLocal} from \"@internationalized/date\";\nimport {I18nProvider} from \"@react-aria/i18n\";\n\nexport default function App() {\n  let [date, setDate] = React.useState<DateValue>(parseAbsoluteToLocal(\"2021-04-07T18:45:22Z\"));\n\n  return (\n    <div className=\"flex flex-col gap-4\">\n      <I18nProvider locale=\"hi-IN-u-ca-indian\">\n        <DatePicker\n          showMonthAndYearPickers\n          variant=\"bordered\"\n          className=\"max-w-md\"\n          label=\"Appointment date\"\n          value={date}\n          onChange={setDate}\n        />\n      </I18nProvider>\n    </div>\n  );\n}`,rr={\"/App.jsx\":or,\"/App.tsx\":nr},qe={...rr};var lr=`import {DatePicker} from \"@nextui-org/react\";\nimport {today, isWeekend, getLocalTimeZone} from \"@internationalized/date\";\nimport {useLocale} from \"@react-aria/i18n\";\n\nexport default function App() {\n  let now = today(getLocalTimeZone());\n\n  let disabledRanges = [\n    [now, now.add({days: 5})],\n    [now.add({days: 14}), now.add({days: 16})],\n    [now.add({days: 23}), now.add({days: 24})],\n  ];\n\n  let {locale} = useLocale();\n\n  let isDateUnavailable = (date) =>\n    isWeekend(date, locale) ||\n    disabledRanges.some(\n      (interval) => date.compare(interval[0]) >= 0 && date.compare(interval[1]) <= 0,\n    );\n\n  return (\n    <DatePicker\n      label=\"Appointment date\"\n      aria-label=\"Appointment date\"\n      isDateUnavailable={isDateUnavailable}\n      minValue={today(getLocalTimeZone())}\n    />\n  );\n}`,ir={\"/App.jsx\":lr},He={...ir};var dr=`import {DatePicker} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <div className=\"flex w-full flex-wrap md:flex-nowrap gap-4\">\n      <DatePicker \n        label=\"Birth date\"\n        visibleMonths={2}\n      />\n    </div> \n  );\n}`,sr={\"/App.jsx\":dr},Ke={...sr};var cr=`import {DatePicker} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <div className=\"flex w-full flex-wrap md:flex-nowrap gap-4\">\n      <DatePicker \n        label=\"Birth date\"\n        visibleMonths={2}\n        pageBehavior=\"single\"\n      />\n    </div> \n  );\n}`,pr={\"/App.jsx\":cr},Xe={...pr};var ur=`import {DatePicker, RadioGroup, Radio, ButtonGroup, Button, cn} from \"@nextui-org/react\";\nimport {startOfWeek, startOfMonth, getLocalTimeZone, today} from \"@internationalized/date\";\nimport {useLocale, useDateFormatter} from \"@react-aria/i18n\";\n\nexport default function App() {\n  let defaultDate = today(getLocalTimeZone());\n\n  const [value, setValue] = React.useState(defaultDate);\n\n  let {locale} = useLocale();\n  let formatter = useDateFormatter({dateStyle: \"full\"});\n\n  let now = today(getLocalTimeZone());\n  let nextWeek = startOfWeek(now.add({weeks: 1}), locale);\n  let nextMonth = startOfMonth(now.add({months: 1}));\n\n  const CustomRadio = (props) => {\n    const {children, ...otherProps} = props;\n\n    return (\n      <Radio\n        {...otherProps}\n        classNames={{\n          base: cn(\n            \"flex-none m-0 h-8 bg-content1 hover:bg-content2 items-center justify-between\",\n            \"cursor-pointer rounded-full border-2 border-default-200/60\",\n            \"data-[selected=true]:border-primary\",\n          ),\n          label: \"text-tiny text-default-500\",\n          labelWrapper: \"px-1 m-0\",\n          wrapper: \"hidden\",\n        }}\n      >\n        {children}\n      </Radio>\n    );\n  };\n\n  return (\n    <div className=\"flex flex-col gap-4 w-full max-w-sm\">\n      <DatePicker\n        CalendarBottomContent={\n          <RadioGroup\n            aria-label=\"Date precision\"\n            classNames={{\n              base: \"w-full pb-2\",\n              wrapper: \"-my-2.5 py-2.5 px-3 gap-1 flex-nowrap max-w-[380px] overflow-x-scroll\",\n            }}\n            defaultValue=\"exact_dates\"\n            orientation=\"horizontal\"\n          >\n            <CustomRadio value=\"exact_dates\">Exact dates</CustomRadio>\n            <CustomRadio value=\"1_day\">1 day</CustomRadio>\n            <CustomRadio value=\"2_days\">2 days</CustomRadio>\n            <CustomRadio value=\"3_days\">3 days</CustomRadio>\n            <CustomRadio value=\"7_days\">7 days</CustomRadio>\n            <CustomRadio value=\"14_days\">14 days</CustomRadio>\n          </RadioGroup>\n        }\n        CalendarTopContent={\n          <ButtonGroup\n            fullWidth\n            className=\"px-3 pb-2 pt-3 bg-content1 [&>button]:text-default-500 [&>button]:border-default-200/60\"\n            radius=\"full\"\n            size=\"sm\"\n            variant=\"bordered\"\n          >\n            <Button onPress={() => setValue(now)}>Today</Button>\n            <Button onPress={() => setValue(nextWeek)}>Next week</Button>\n            <Button onPress={() => setValue(nextMonth)}>Next month</Button>\n          </ButtonGroup>\n        }\n        calendarProps={{\n          focusedValue: value,\n          onFocusChange: setValue,\n          nextButtonProps: {\n            variant: \"bordered\",\n          },\n          prevButtonProps: {\n            variant: \"bordered\",\n          },\n        }}\n        value={value}\n        onChange={setValue}\n        label=\"Event date\"\n      />\n      <p className=\"text-default-500 text-sm\">\n        Selected date: {value ? formatter.format(value.toDate(getLocalTimeZone())) : \"--\"}\n      </p>\n    </div>\n  );\n}`,mr=`import {DatePicker, RadioGroup, Radio, ButtonGroup, Button, cn} from \"@nextui-org/react\";\nimport {DateValue, startOfWeek, startOfMonth, getLocalTimeZone, today} from \"@internationalized/date\";\nimport {useLocale, useDateFormatter} from \"@react-aria/i18n\";\n\nexport default function App() {\n  let defaultDate = today(getLocalTimeZone());\n\n  const [value, setValue] = React.useState<DateValue>(defaultDate);\n\n  let {locale} = useLocale();\n  let formatter = useDateFormatter({dateStyle: \"full\"});\n\n  let now = today(getLocalTimeZone());\n  let nextWeek = startOfWeek(now.add({weeks: 1}), locale);\n  let nextMonth = startOfMonth(now.add({months: 1}));\n\n  const CustomRadio = (props) => {\n    const {children, ...otherProps} = props;\n\n    return (\n      <Radio\n        {...otherProps}\n        classNames={{\n          base: cn(\n            \"flex-none m-0 h-8 bg-content1 hover:bg-content2 items-center justify-between\",\n            \"cursor-pointer rounded-full border-2 border-default-200/60\",\n            \"data-[selected=true]:border-primary\",\n          ),\n          label: \"text-tiny text-default-500\",\n          labelWrapper: \"px-1 m-0\",\n          wrapper: \"hidden\",\n        }}\n      >\n        {children}\n      </Radio>\n    );\n  };\n\n  return (\n    <div className=\"flex flex-col gap-4 w-full max-w-sm\">\n      <DatePicker\n        CalendarBottomContent={\n          <RadioGroup\n            aria-label=\"Date precision\"\n            classNames={{\n              base: \"w-full pb-2\",\n              wrapper: \"-my-2.5 py-2.5 px-3 gap-1 flex-nowrap max-w-[380px] overflow-x-scroll\",\n            }}\n            defaultValue=\"exact_dates\"\n            orientation=\"horizontal\"\n          >\n            <CustomRadio value=\"exact_dates\">Exact dates</CustomRadio>\n            <CustomRadio value=\"1_day\">1 day</CustomRadio>\n            <CustomRadio value=\"2_days\">2 days</CustomRadio>\n            <CustomRadio value=\"3_days\">3 days</CustomRadio>\n            <CustomRadio value=\"7_days\">7 days</CustomRadio>\n            <CustomRadio value=\"14_days\">14 days</CustomRadio>\n          </RadioGroup>\n        }\n        CalendarTopContent={\n          <ButtonGroup\n            fullWidth\n            className=\"px-3 pb-2 pt-3 bg-content1 [&>button]:text-default-500 [&>button]:border-default-200/60\"\n            radius=\"full\"\n            size=\"sm\"\n            variant=\"bordered\"\n          >\n            <Button onPress={() => setValue(now)}>Today</Button>\n            <Button onPress={() => setValue(nextWeek)}>Next week</Button>\n            <Button onPress={() => setValue(nextMonth)}>Next month</Button>\n          </ButtonGroup>\n        }\n        calendarProps={{\n          focusedValue: value,\n          onFocusChange: setValue,\n          nextButtonProps: {\n            variant: \"bordered\",\n          },\n          prevButtonProps: {\n            variant: \"bordered\",\n          },\n        }}\n        value={value}\n        onChange={setValue}\n        label=\"Event date\"\n      />\n      <p className=\"text-default-500 text-sm\">\n        Selected date: {value ? formatter.format(value.toDate(getLocalTimeZone())) : \"--\"}\n      </p>\n    </div>\n  );\n}`,fr={\"/App.jsx\":ur,\"/App.tsx\":mr},Je={...fr};var p={usage:Ne,disabled:Ve,readOnly:Le,required:Ze,variants:je,labelPlacements:Me,description:Be,errorMessage:Se,errorMessageFunction:ze,withMonthAndYearPickers:We,withTimeField:Fe,selectorIcon:_e,selectorButtonPlacement:Ue,controlled:Ge,timeZones:Oe,granularity:Ee,minAndMaxDate:Ye,internationalCalendar:qe,unavailableDates:He,visibleMonth:Ke,pageBehavior:Xe,preset:Je};var xr=`import {DateRangePicker} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <DateRangePicker \n      label=\"Stay duration\" \n      className=\"max-w-xs\" \n    />\n  );\n}`,hr={\"/App.jsx\":xr},$e={...hr};var gr=`import {DateRangePicker} from \"@nextui-org/react\";\nimport {parseDate} from \"@internationalized/date\";\n\nexport default function App() {\n  return (\n    <DateRangePicker \n      label=\"Stay duration\" \n      isDisabled\n      defaultValue={{\n        start: parseDate(\"2024-04-01\"),\n        end: parseDate(\"2024-04-08\"),\n      }}\n      className=\"max-w-xs\"\n    />\n  );\n}`,vr={\"/App.jsx\":gr},Qe={...vr};var br=`import {DateRangePicker} from \"@nextui-org/react\";\nimport {parseDate} from \"@internationalized/date\";\n\nexport default function App() {\n  return (\n    <DateRangePicker \n      label=\"Stay duration\" \n      isReadOnly\n      defaultValue={{\n        start: parseDate(\"2024-04-01\"),\n        end: parseDate(\"2024-04-08\"),\n      }}\n      className=\"max-w-xs\"\n    />\n  );\n}`,wr={\"/App.jsx\":br},et={...wr};var Dr=`import {DateRangePicker} from \"@nextui-org/react\";\nimport {parseDate} from \"@internationalized/date\";\n\nexport default function App() {\n  return (\n    <DateRangePicker \n      label=\"Stay duration\" \n      isRequired\n      defaultValue={{\n        start: parseDate(\"2024-04-01\"),\n        end: parseDate(\"2024-04-08\"),\n      }}\n      className=\"max-w-xs\"\n    />\n  );\n}`,yr={\"/App.jsx\":Dr},tt={...yr};var Ar=`import {DateRangePicker} from \"@nextui-org/react\";\n\nexport default function App() {\n  const variants = [\"flat\", \"bordered\", \"underlined\", \"faded\"];\n\n  return (\n    <div className=\"w-full flex flex-col gap-4\">\n      {variants.map((variant) => (\n        <div key={variant} className=\"flex w-full flex-wrap md:flex-nowrap mb-6 md:mb-0 gap-4\">\n          <DateRangePicker \n            variant={variant} \n            label=\"Stay duration\" \n            className=\"max-w-xs\" \n          />\n        </div>\n      ))}\n    </div>  \n  );\n}`,Cr={\"/App.jsx\":Ar},at={...Cr};var Tr=`import {DateRangePicker} from \"@nextui-org/react\";\n\nexport default function App() {\n  const placements = [\n    \"inside\",\n    \"outside\",\n    \"outside-left\",\n  ];\n\n  return (\n    <div className=\"flex flex-col gap-4\">\n      <div className=\"flex flex-col gap-2\">\n        {placements.map((placement) => (\n          <DateRangePicker\n            key={placement}\n            label=\"Stay duration\"\n            labelPlacement={placement}\n            description={placement}\n          />\n        ))}\n      </div>  \n    </div>  \n  );\n}`,Rr={\"/App.jsx\":Tr},ot={...Rr};var kr=`import {DateRangePicker} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <DateRangePicker\n      label=\"Stay duration\"\n      description=\"Please enter your stay duration\"\n      className=\"max-w-xs\"\n    />\n  );\n}`,Pr={\"/App.jsx\":kr},nt={...Pr};var Ir=`import {DateRangePicker} from \"@nextui-org/react\";\nimport {parseDate} from \"@internationalized/date\";\n\nexport default function App() {\n  return (\n    <DateRangePicker \n      isInvalid\n      label=\"Stay duration\" \n      variant=\"bordered\"\n      errorMessage=\"Please enter your stay duration\"\n      defaultValue={{\n        start: parseDate(\"2024-04-01\"),\n        end: parseDate(\"2024-04-08\"),\n      }}\n      className=\"max-w-xs\"\n    />\n  );\n}`,Nr={\"/App.jsx\":Ir},rt={...Nr};var Vr=`import {DateRangePicker} from \"@nextui-org/react\";\nimport {parseDate} from \"@internationalized/date\";\n\nexport default function App() {\n  return (\n    <DateRangePicker \n      isInvalid\n      label=\"Stay duration\" \n      variant=\"bordered\"\n      errorMessage={(value) => {\n        if (value.isInvalid) {\n          return \"Please enter your stay duration\";\n        }\n      }}\n      defaultValue={{\n        start: parseDate(\"2024-04-01\"),\n        end: parseDate(\"2024-04-08\"),\n      }}\n      className=\"max-w-xs\"\n    />\n  );\n}`,Lr={\"/App.jsx\":Vr},lt={...Lr};var Zr=`import {DateRangePicker} from \"@nextui-org/react\";\nimport {parseZonedDateTime} from \"@internationalized/date\";\n\nexport default function App() {\n  return (\n    <div className=\"w-full max-w-xl flex flex-row gap-4\">\n      <DateRangePicker\n        label=\"Event duration\"\n        hideTimeZone\n        visibleMonths={2}\n        defaultValue={{\n          start: parseZonedDateTime(\"2024-04-01T00:45[America/Los_Angeles]\"),\n          end: parseZonedDateTime(\"2024-04-08T11:15[America/Los_Angeles]\"),\n        }}\n      />\n    </div>\n  );\n}`,jr={\"/App.jsx\":Zr},it={...jr};var Mr=`export const SelectorIcon = (props) => (\n  <svg height=\"1em\" viewBox=\"0 0 24 24\" width=\"1em\" {...props}>\n    <g\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"2\"\n    >\n      <path d=\"M8 2v4m8-4v4\" />\n      <rect height=\"18\" rx=\"2\" width=\"18\" x=\"3\" y=\"4\" />\n      <path d=\"M3 10h18M8 14h.01M12 14h.01M16 14h.01M8 18h.01M12 18h.01M16 18h.01\" />\n    </g>\n  </svg>\n);`,Br=`import {DateRangePicker} from \"@nextui-org/react\";\nimport {SelectorIcon} from './SelectorIcon';\nexport default function App() {\n  return (\n    <div className=\"flex w-full flex-wrap md:flex-nowrap gap-4\">\n      <DateRangePicker \n        label=\"Stay duration\"\n        selectorIcon={<SelectorIcon className=\"text-xl\" />}\n      />\n    </div> \n  );\n}`,Sr={\"/App.jsx\":Br,\"/SelectorIcon.jsx\":Mr},dt={...Sr};var zr=`import {DateRangePicker} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <div className=\"flex w-full flex-wrap md:flex-nowrap gap-4\">\n      <DateRangePicker \n        label=\"Placement start\"\n        selectorButtonPlacement=\"start\"\n      />\n      <DateRangePicker \n        label=\"Placement end (default)\"\n        selectorButtonPlacement=\"end\"\n      />\n    </div> \n  );\n}`,Wr={\"/App.jsx\":zr},st={...Wr};var Fr=`import {DateRangePicker} from \"@nextui-org/react\";\nimport {parseDate, getLocalTimeZone} from \"@internationalized/date\";\nimport {useDateFormatter} from \"@react-aria/i18n\";\n\nexport default function App() {\n  const [value, setValue] = React.useState({\n    start: parseDate(\"2024-04-01\"),\n    end: parseDate(\"2024-04-08\"),\n  });\n\n  let formatter = useDateFormatter({dateStyle: \"long\"});\n\n  return (\n    <div className=\"flex flex-row gap-2\">\n      <div className=\"w-full flex flex-col gap-y-2\">\n        <DateRangePicker\n          label=\"Date range (controlled)\"\n          value={value}\n          onChange={setValue}\n        />\n        <p className=\"text-default-500 text-sm\">\n          Selected date:{\" \"}\n          {value\n            ? formatter.formatRange(\n                value.start.toDate(getLocalTimeZone()),\n                value.end.toDate(getLocalTimeZone()),\n              )\n            : \"--\"}\n        </p>\n      </div>\n      <DateRangePicker\n        defaultValue={{\n          start: parseDate(\"2024-04-01\"),\n          end: parseDate(\"2024-04-08\"),\n        }}\n        label=\"Date range (uncontrolled)\"\n      />\n    </div>\n  );\n}`,_r=`import {DateRangePicker} from \"@nextui-org/react\";\nimport {parseDate, getLocalTimeZone} from \"@internationalized/date\";\nimport {useDateFormatter} from \"@react-aria/i18n\";\nimport {RangeValue} from \"@react-types/shared\";\nimport {DateValue} from \"@react-types/datepicker\";\n\nexport default function App() {\n  const [value, setValue] = React.useState<RangeValue<DateValue>>({\n    start: parseDate(\"2024-04-01\"),\n    end: parseDate(\"2024-04-08\"),\n  });\n\n  let formatter = useDateFormatter({dateStyle: \"long\"});\n\n  return (\n    <div className=\"flex flex-row gap-2\">\n      <div className=\"w-full flex flex-col gap-y-2\">\n        <DateRangePicker\n          label=\"Date range (controlled)\"\n          value={value}\n          onChange={setValue}\n        />\n        <p className=\"text-default-500 text-sm\">\n          Selected date:{\" \"}\n          {value\n            ? formatter.formatRange(\n                value.start.toDate(getLocalTimeZone()),\n                value.end.toDate(getLocalTimeZone()),\n              )\n            : \"--\"}\n        </p>\n      </div>\n      <DateRangePicker\n        defaultValue={{\n          start: parseDate(\"2024-04-01\"),\n          end: parseDate(\"2024-04-08\"),\n        }}\n        label=\"Date range (uncontrolled)\"\n      />\n    </div>\n  );\n}`,Ur={\"/App.jsx\":Fr},Gr={\"/App.tsx\":_r},ct={...Ur,...Gr};var Or=`import {DateRangePicker} from \"@nextui-org/react\";\nimport {parseZonedDateTime, parseAbsoluteToLocal} from \"@internationalized/date\";\n\nexport default function App() {\n  return (\n    <div className=\"w-full max-w-xl flex flex-col items-start gap-4\">\n      <DateRangePicker\n        defaultValue={{\n          start: parseZonedDateTime(\"2024-04-01T00:45[America/Los_Angeles]\"),\n          end: parseZonedDateTime(\"2024-04-14T11:15[America/Los_Angeles]\"),\n        }}\n        label=\"Stay duration\"\n        labelPlacement=\"outside\"\n      />\n      <DateRangePicker\n        defaultValue={{\n          start: parseAbsoluteToLocal(\"2024-04-01T07:45:00Z\"),\n          end: parseAbsoluteToLocal(\"2024-04-14T19:15:00Z\"),\n        }}\n        label=\"Stay duration\"\n        labelPlacement=\"outside\"\n      />\n    </div>\n  );\n}`,Er={\"/App.jsx\":Or},pt={...Er};var Yr=`import {DateRangePicker} from \"@nextui-org/react\";\nimport {parseAbsoluteToLocal} from \"@internationalized/date\";\n\nexport default function App() {\n  let [date, setDate] = React.useState({\n    start: parseAbsoluteToLocal(\"2024-04-01T18:45:22Z\"),\n    end: parseAbsoluteToLocal(\"2024-04-08T19:15:22Z\"),\n  });\n\n  return (\n    <div className=\"w-full max-w-xl flex flex-col items-start gap-4\">\n      <DateRangePicker\n        fullWidth\n        granularity=\"second\"\n        label=\"Date and time range\"\n        value={date}\n        onChange={setDate}\n      />\n      <DateRangePicker\n        fullWidth\n        granularity=\"day\"\n        label=\"Date range\"\n        value={date}\n        onChange={setDate}\n      />\n    </div>\n  );\n}`,qr=`import {DateRangePicker} from \"@nextui-org/react\";\nimport {DateValue, parseAbsoluteToLocal} from \"@internationalized/date\";\nimport {RangeValue} from \"@react-types/shared\";\n\nexport default function App() {\n  let [date, setDate] = React.useState<RangeValue<DateValue>>({\n    start: parseAbsoluteToLocal(\"2024-04-01T18:45:22Z\"),\n    end: parseAbsoluteToLocal(\"2024-04-08T19:15:22Z\"),\n  });\n\n  return (\n    <div className=\"w-full max-w-xl flex flex-col items-start gap-4\">\n      <DateRangePicker\n        fullWidth\n        granularity=\"second\"\n        label=\"Date and time range\"\n        value={date}\n        onChange={setDate}\n      />\n      <DateRangePicker\n        fullWidth\n        granularity=\"day\"\n        label=\"Date range\"\n        value={date}\n        onChange={setDate}\n      />\n    </div>\n  );\n}`,Hr={\"/App.jsx\":Yr,\"/App.tsx\":qr},ut={...Hr};var Kr=`import {DateRangePicker} from \"@nextui-org/react\";\nimport {getLocalTimeZone, parseDate, today} from \"@internationalized/date\";\n\nexport default function App() {\n  return (\n    <div className=\"w-full max-w-xl flex flex-row gap-4\">\n      <div className=\"w-full flex flex-col gap-1\">\n        <h3>Min date</h3>\n        <DateRangePicker\n          label=\"Date and time\"\n          minValue={today(getLocalTimeZone())}\n          defaultValue={{\n            start: today(getLocalTimeZone()).subtract({days: 1}),\n            end: parseDate(\"2024-04-08\"),\n          }}\n        />\n      </div>\n      <div className=\"w-full flex flex-col gap-1\">\n        <h3>Max date</h3>\n        <DateRangePicker\n          label=\"Date and time\"\n          maxValue={today(getLocalTimeZone())}\n          defaultValue={{\n            start: today(getLocalTimeZone()).subtract({days: 1}),\n            end: parseDate(\"2024-04-08\"),\n          }}\n        />\n      </div>\n    </div>\n  );\n}`,Xr={\"/App.jsx\":Kr},mt={...Xr};var Jr=`import {DateRangePicker} from \"@nextui-org/react\";\nimport {parseAbsoluteToLocal} from \"@internationalized/date\";\nimport {I18nProvider} from \"@react-aria/i18n\";\n\nexport default function App() {\n  let [date, setDate] = React.useState({\n    start: parseAbsoluteToLocal(\"2021-04-01T18:45:22Z\"),\n    end: parseAbsoluteToLocal(\"2021-04-14T19:15:22Z\"),\n  });\n\n  return (\n    <div className=\"flex flex-col gap-4\">\n      <I18nProvider locale=\"hi-IN-u-ca-indian\">\n        <DateRangePicker label=\"Stay duration\" value={date} onChange={setDate} />\n      </I18nProvider>\n    </div>\n  );\n}`,$r=`import {DateRangePicker} from \"@nextui-org/react\";\nimport {DateValue, parseAbsoluteToLocal} from \"@internationalized/date\";\nimport {RangeValue} from \"@react-types/shared\";\nimport {I18nProvider} from \"@react-aria/i18n\";\n\nexport default function App() {\n  let [date, setDate] = React.useState<RangeValue<DateValue>>({\n    start: parseAbsoluteToLocal(\"2021-04-01T18:45:22Z\"),\n    end: parseAbsoluteToLocal(\"2021-04-14T19:15:22Z\"),\n  });\n\n  return (\n    <div className=\"flex flex-col gap-4\">\n      <I18nProvider locale=\"hi-IN-u-ca-indian\">\n        <DateRangePicker label=\"Stay duration\" value={date} onChange={setDate} />\n      </I18nProvider>\n    </div>\n  );\n}`,Qr={\"/App.jsx\":Jr,\"/App.tsx\":$r},ft={...Qr};var el=`import {DateRangePicker} from \"@nextui-org/react\";\nimport {today, getLocalTimeZone} from \"@internationalized/date\";\n\nexport default function App() {\n  let now = today(getLocalTimeZone());\n\n  let disabledRanges = [\n    [now, now.add({days: 5})],\n    [now.add({days: 14}), now.add({days: 16})],\n    [now.add({days: 23}), now.add({days: 24})],\n  ];\n\n  return (\n    <DateRangePicker\n      label=\"Stay duration\"\n      isDateUnavailable={(date) =>\n        disabledRanges.some(\n          (interval) => date.compare(interval[0]) >= 0 && date.compare(interval[1]) <= 0,\n        )\n      }\n      minValue={today(getLocalTimeZone())}\n      validate={(value) =>\n        disabledRanges.some(\n          (interval) =>\n            value && value.end.compare(interval[0]) >= 0 && value.start.compare(interval[1]) <= 0,\n        )\n          ? \"Selected date range may not include unavailable dates.\"\n          : null\n      }\n      validationBehavior=\"native\"\n    />\n  );\n}`,tl={\"/App.jsx\":el},xt={...tl};var al=`import {DateRangePicker} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <div className=\"flex w-full flex-wrap md:flex-nowrap gap-4\">\n      <DateRangePicker \n        label=\"Stay duration\"\n        visibleMonths={2}\n      />\n    </div> \n  );\n}`,ol={\"/App.jsx\":al},ht={...ol};var nl=`import {DateRangePicker} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <div className=\"flex w-full flex-wrap md:flex-nowrap gap-4\">\n      <DateRangePicker \n        label=\"Birth date\"\n        visibleMonths={2}\n        pageBehavior=\"single\"\n      />\n    </div> \n  );\n}`,rl={\"/App.jsx\":nl},gt={...rl};var ll=`import {DateRangePicker} from \"@nextui-org/react\";\nimport {isWeekend, today, getLocalTimeZone} from \"@internationalized/date\";\nimport {useLocale} from \"@react-aria/i18n\";\n\nexport default function App() {\n  let {locale} = useLocale();\n\n  return (\n    <DateRangePicker\n      allowsNonContiguousRanges\n      isDateUnavailable={(date) => isWeekend(date, locale)}\n      label=\"Time off request\"\n      minValue={today(getLocalTimeZone())}\n      visibleMonths={2}\n    />\n  );\n}`,il={\"/App.jsx\":ll},vt={...il};var dl=`import {DateRangePicker, Radio, RadioGroup, Button, ButtonGroup, cn} from \"@nextui-org/react\";\nimport {today, startOfWeek, startOfMonth, endOfWeek, endOfMonth, getLocalTimeZone} from \"@internationalized/date\";\nimport {useLocale, useDateFormatter} from \"@react-aria/i18n\";\n\nexport default function App() {\n  let defaultDate = {\n    start: today(getLocalTimeZone()),\n    end: today(getLocalTimeZone()).add({days: 7}),\n  };\n  let [value, setValue] = React.useState(defaultDate);\n\n  let {locale} = useLocale();\n  let formatter = useDateFormatter({dateStyle: \"full\"});\n  let now = today(getLocalTimeZone());\n  let nextWeek = {\n    start: startOfWeek(now.add({weeks: 1}), locale),\n    end: endOfWeek(now.add({weeks: 1}), locale),\n  };\n  let nextMonth = {\n    start: startOfMonth(now.add({months: 1})),\n    end: endOfMonth(now.add({months: 1})),\n  };\n\n  const CustomRadio = (props) => {\n    const {children, ...otherProps} = props;\n\n    return (\n      <Radio\n        {...otherProps}\n        classNames={{\n          base: cn(\n            \"flex-none m-0 h-8 bg-content1 hover:bg-content2 items-center justify-between\",\n            \"cursor-pointer rounded-full border-2 border-default-200/60\",\n            \"data-[selected=true]:border-primary\",\n          ),\n          label: \"text-tiny text-default-500\",\n          labelWrapper: \"px-1 m-0\",\n          wrapper: \"hidden\",\n        }}\n      >\n        {children}\n      </Radio>\n    );\n  };\n\n  return (\n    <div className=\"flex flex-col gap-4 w-full max-w-sm\">\n      <DateRangePicker\n        CalendarBottomContent={\n          <RadioGroup\n            aria-label=\"Date precision\"\n            classNames={{\n              base: \"w-full pb-2\",\n              wrapper:\n                \"-my-2.5 py-2.5 px-3 gap-1 flex-nowrap max-w-[w-[calc(var(--visible-months)_*_var(--calendar-width))]] overflow-scroll\",\n            }}\n            defaultValue=\"exact_dates\"\n            orientation=\"horizontal\"\n          >\n            <CustomRadio value=\"exact_dates\">Exact dates</CustomRadio>\n            <CustomRadio value=\"1_day\">1 day</CustomRadio>\n            <CustomRadio value=\"2_days\">2 days</CustomRadio>\n            <CustomRadio value=\"3_days\">3 days</CustomRadio>\n            <CustomRadio value=\"7_days\">7 days</CustomRadio>\n            <CustomRadio value=\"14_days\">14 days</CustomRadio>\n          </RadioGroup>\n        }\n        CalendarTopContent={\n          <ButtonGroup\n            fullWidth\n            className=\"px-3 pb-2 pt-3 bg-content1 [&>button]:text-default-500 [&>button]:border-default-200/60\"\n            radius=\"full\"\n            size=\"sm\"\n            variant=\"bordered\"\n          >\n            <Button\n              onPress={() =>\n                setValue({\n                  start: now,\n                  end: now.add({days: 7}),\n                })\n              }\n            >\n              This week\n            </Button>\n            <Button onPress={() => setValue(nextWeek)}>Next week</Button>\n            <Button onPress={() => setValue(nextMonth)}>Next month</Button>\n          </ButtonGroup>\n        }\n        calendarProps={{\n          focusedValue: value?.start,\n          onFocusChange: (val) => setValue({...value, start: val}),\n          nextButtonProps: {\n            variant: \"bordered\",\n          },\n          prevButtonProps: {\n            variant: \"bordered\",\n          },\n        }}\n        value={value}\n        onChange={setValue}\n        label=\"Event date\"\n      />\n      <p className=\"text-default-500 text-sm\">\n        Selected date:{\" \"}\n        {value\n          ? formatter.formatRange(\n              value.start.toDate(getLocalTimeZone()),\n              value.end.toDate(getLocalTimeZone()),\n            )\n          : \"--\"}\n      </p>\n    </div>\n  );\n}`,sl={\"/App.jsx\":dl},bt={...sl};var cl=`import {DateRangePicker} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <div className=\"w-full max-w-xl flex flex-row gap-4\">\n      <DateRangePicker\n        label=\"Birth Date\"\n        variant=\"bordered\"\n        showMonthAndYearPickers\n      />\n    </div>\n  );\n}`,pl={\"/App.jsx\":cl},wt={...pl};var ul=`import {DateRangePicker} from \"@nextui-org/react\";\n\nexport default function App() {\n  return (\n    <DateRangePicker\n        calendarProps={{\n          classNames: {\n            base: \"bg-background\",\n            headerWrapper: \"pt-4 bg-background\",\n            prevButton: \"border-1 border-default-200 rounded-small\",\n            nextButton: \"border-1 border-default-200 rounded-small\",\n            gridHeader: \"bg-background shadow-none border-b-1 border-default-100\",\n            cellButton: [\n              \"data-[today=true]:bg-default-100 data-[selected=true]:bg-transparent rounded-small\",\n              // start (pseudo)\n              \"data-[range-start=true]:before:rounded-l-small\",\n              \"data-[selection-start=true]:before:rounded-l-small\",\n              // end (pseudo)\n              \"data-[range-end=true]:before:rounded-r-small\",\n              \"data-[selection-end=true]:before:rounded-r-small\",\n              // start (selected)\n              \"data-[selected=true]:data-[selection-start=true]:data-[range-selection=true]:rounded-small\",\n              // end (selected)\n              \"data-[selected=true]:data-[selection-end=true]:data-[range-selection=true]:rounded-small\",\n            ],\n          },\n      }}\n      className=\"max-w-xs\"\n      label=\"Stay duration\"\n      variant=\"bordered\"\n    />\n  );\n}`,ml={\"/App.jsx\":ul},Dt={...ml};var yt={usage:$e,disabled:Qe,readOnly:et,required:tt,variants:at,labelPlacements:ot,description:nt,errorMessage:rt,errorMessageFunction:lt,withTimeField:it,selectorIcon:dt,selectorButtonPlacement:st,controlled:ct,timeZones:pt,granularity:ut,minAndMaxDate:mt,internationalCalendar:ft,unavailableDates:xt,visibleMonth:ht,pageBehavior:gt,nonContigous:vt,presets:bt,withMonthAndYearPickers:wt,customStyles:Dt};var fl={title:\"Introducing v2.3.0 \\u{1F389}\",description:\"NextUI v2.3.0 is here! includes six new components, NextUI CLI, bug fixes, React Aria, and a TailwindCSS upgrade, among other enhancements.\",date:\"2024-04-16\",image:\"/blog/v2.3.0.jpg\",tags:[\"nextui\",\"cli\",\"date picker\",\"time input\",\"date input\",\"calendar\"],author:{name:\"Junior Garcia\",username:\"@jrgarciadev\",link:\"https://x.com/jrgarciadev\",avatar:\"/avatars/junior-garcia.jpeg\"}};function At(a){let t={a:\"a\",blockquote:\"blockquote\",code:\"code\",h2:\"h2\",h3:\"h3\",hr:\"hr\",li:\"li\",ol:\"ol\",p:\"p\",pre:\"pre\",strong:\"strong\",ul:\"ul\",...a.components},{CodeDemo:o,Codeblock:i,Community:r,PackageManagers:c,Snippet:u,Spacer:n}=t;return o||l(\"CodeDemo\",!0),i||l(\"Codeblock\",!0),r||l(\"Community\",!0),c||l(\"PackageManagers\",!0),u||l(\"Snippet\",!0),n||l(\"Spacer\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(\"img\",{src:\"/blog/v2.3.0_2x.jpg\",width:700,height:350,alt:\"NextUI v2.3.0\",className:\"w-full border border-transparent dark:border-default-200/50 object-fit rounded-xl shadow-lg\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"We are excited to announce the latest update to NextUI, version \",(0,e.jsx)(t.strong,{children:\"2.3.0\"}),`! This release introduces 6 new components,\nour new CLI, and several enhancements and bug fixes.`]}),`\n`,(0,e.jsx)(t.h2,{id:\"whats-new-in-v230\",children:\"What's New in v2.3.0?\"}),`\n`,(0,e.jsxs)(t.ul,{children:[`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.a,{href:\"/docs/guide/cli\",children:\"NextUI CLI\"}),\" - A command-line interface for creating and managing NextUI projects.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.a,{href:\"/docs/components/date-input\",children:\"DateInput\"}),\" - Allows users to enter and edit date and time values using a keyboard.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.a,{href:\"/docs/components/time-input\",children:\"TimeInput\"}),\" - Allows users to enter and edit time values using a keyboard.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.a,{href:\"/docs/components/calendar\",children:\"Calendar\"}),\" - Displays a calendar for selecting dates and times.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.a,{href:\"/docs/components/range-calendar\",children:\"RangeCalendar\"}),\" - Displays a calendar for selecting date ranges.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.a,{href:\"/docs/components/date-picker\",children:\"DatePicker\"}),\" - Allows users to select a date from a calendar.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.a,{href:\"/docs/components/date-range-picker\",children:\"DateRangePicker\"}),\" - Allows users to select a date range from a calendar.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.a,{href:\"#other-changes\",children:\"Other Changes\"}),\" - Includes styling improvements, accessibility and usability enhancements.\"]}),`\n`]}),`\n`,(0,e.jsx)(n,{y:4}),`\n`,(0,e.jsx)(t.p,{children:\"Requirements:\"}),`\n`,(0,e.jsxs)(t.ul,{children:[`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.a,{href:\"https://tailwindcss.com/\",children:\"Tailwind CSS 3.4\"}),\" or later\"]}),`\n`]}),`\n`,(0,e.jsx)(t.p,{children:\"Upgrade today by running one of the following commands:\"}),`\n`,(0,e.jsx)(n,{y:4}),`\n`,(0,e.jsx)(c,{commands:{cli:\"nextui upgrade\",npm:\"npx nextui-cli@latest upgrade\"}}),`\n`,(0,e.jsx)(n,{y:4}),`\n`,(0,e.jsx)(t.h2,{id:\"nextui-cli\",children:\"NextUI CLI\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"We are thrilled to introduce the \",(0,e.jsx)(t.a,{href:\"https://github.com/nextui-org/nextui-cli\",children:\"NextUI CLI\"}),`, a command-line interface, It offers a comprehensive suite\nof commands to initialize, manage, and improve your NextUI projects. It enables you to `,(0,e.jsx)(t.code,{children:\"add\"}),\", \",(0,e.jsx)(t.code,{children:\"remove\"}),`, or\n`,(0,e.jsx)(t.code,{children:\"upgrade\"}),\" individual components, assess the health of your project, and more.\"]}),`\n`,(0,e.jsx)(t.h3,{id:\"installation\",children:\"Installation\"}),`\n`,(0,e.jsx)(t.p,{children:\"To install the CLI globally, execute one of the following commands in your terminal:\"}),`\n`,(0,e.jsx)(c,{commands:{npm:\"npm install nextui-cli -g\",yarn:\"yarn add nextui-cli -g\",pnpm:\"pnpm add nextui-cli -g\",bun:\"bun add nextui-cli -g\"}}),`\n`,(0,e.jsxs)(t.p,{children:[\"Alternatively, you can use the CLI without a global installation by employing \",(0,e.jsx)(t.code,{children:\"npx\"}),\":\"]}),`\n`,(0,e.jsx)(t.pre,{children:(0,e.jsx)(t.code,{className:\"language-bash\",children:`npx nextui-cli@latest\n`})}),`\n`,(0,e.jsx)(t.h3,{id:\"usage\",children:\"Usage\"}),`\n`,(0,e.jsx)(t.p,{children:\"Once the CLI is installed, run the following command to display available commands:\"}),`\n`,(0,e.jsx)(t.pre,{children:(0,e.jsx)(t.code,{className:\"language-bash\",children:`nextui\n`})}),`\n`,(0,e.jsx)(t.p,{children:`NextUI CLI can help you create new projects, add components, upgrade components, remove components, detect issues in\nyou setup, know your environment, and more.`}),`\n`,(0,e.jsx)(n,{y:4}),`\n`,(0,e.jsx)(t.p,{children:\"To initialize a new project, you can simply run:\"}),`\n`,(0,e.jsx)(t.pre,{children:(0,e.jsx)(t.code,{className:\"language-bash\",children:`nextui init my-nextui-app\n`})}),`\n`,(0,e.jsx)(n,{y:4}),`\n`,(0,e.jsx)(t.p,{children:\"You will be prompted to configure your project:\"}),`\n`,(0,e.jsx)(u,{disableTooltip:\"true\",fullWidth:\"true\",hideSymbol:\"true\",classNames:{base:\"bg-code-background text-code-foreground\",pre:\"font-light text-base\",copyButton:\"text-lg text-zinc-500 mr-2\"},children:(0,e.jsx)(i,{removeIndent:\"true\",language:\"bash\",codeString:`? Select a template \\u203A - Use arrow-keys. Return to submit.\n\\u276F   App\n    A Next.js 13 with app directory template pre-configured with NextUI (v2) and Tailwind CSS.\n    Pages\n    A Next.js 13 with pages directory template pre-configured with NextUI (v2) and Tailwind CSS.`})}),`\n`,(0,e.jsx)(t.p,{children:\"Select the template you want to use and the CLI will create a new project for you.\"}),`\n`,(0,e.jsxs)(t.blockquote,{children:[`\n`,(0,e.jsx)(t.p,{children:\"We're working on adding more templates to the CLI, so stay tuned for updates!\"}),`\n`]}),`\n`,(0,e.jsx)(n,{y:4}),`\n`,(0,e.jsxs)(t.p,{children:[\"If you already have a NextUI project, you can add components to it using the \",(0,e.jsx)(t.code,{children:\"add\"}),\" command:\"]}),`\n`,(0,e.jsx)(t.pre,{children:(0,e.jsx)(t.code,{className:\"language-bash\",children:`nextui add date-input\n`})}),`\n`,(0,e.jsxs)(t.p,{children:[\"It will automatically detect the required dependencies, modify your \",(0,e.jsx)(t.code,{children:\"tailwind.config.(js|ts)\"}),` file,\ndetect whether using `,(0,e.jsx)(t.code,{children:\"pnpm\"}),\" if so, add the required configuration to your \",(0,e.jsx)(t.code,{children:\".npmrc\"}),\" file and add the component to your project.\"]}),`\n`,(0,e.jsx)(t.p,{children:\"If instead of installing a single component you want to install multiple components, you can do so by separating them with a space:\"}),`\n`,(0,e.jsx)(t.pre,{children:(0,e.jsx)(t.code,{className:\"language-bash\",children:`nextui add date-input time-input calendar\n`})}),`\n`,(0,e.jsxs)(t.p,{children:[\"You can alternatively install the \",(0,e.jsx)(t.code,{children:\"main\"}),\" package which includes all the components by passing the \",(0,e.jsx)(t.code,{children:\"--all\"}),\" flag:\"]}),`\n`,(0,e.jsx)(t.pre,{children:(0,e.jsx)(t.code,{className:\"language-bash\",children:`nextui add --all\n`})}),`\n`,(0,e.jsx)(n,{y:4}),`\n`,(0,e.jsxs)(t.blockquote,{children:[`\n`,(0,e.jsxs)(t.p,{children:[\"The CLI is currentl in \",(0,e.jsx)(t.code,{children:\"Alpha\"}),\" stage, we're working on adding more features and improvements. If you find any issues or have any suggestions, please let us know by \",(0,e.jsx)(t.a,{href:\"https://github.com/nextui-org/nextui-cli/issues/new\",children:\"opening an issue\"}),\".\"]}),`\n`]}),`\n`,(0,e.jsxs)(t.p,{children:[\"To learn more about the CLI and its commands, please refer to the \",(0,e.jsx)(t.a,{href:\"/docs/guide/cli\",children:\"CLI documentation\"}),\" and the \",(0,e.jsx)(t.a,{href:\"/docs/api-references/cli-api\",children:\"CLI API reference\"}),\".\"]}),`\n`,(0,e.jsx)(t.h2,{id:\"new-components\",children:\"New Components\"}),`\n`,(0,e.jsx)(t.p,{children:`Since the beginning of NextUI, devs have been asking for date and time input components. After\nmonths of iteration and development, we are excited to introduce the following new components:`}),`\n`,(0,e.jsx)(t.h3,{id:\"dateinput\",children:\"DateInput\"}),`\n`,(0,e.jsx)(t.p,{children:`DateInput is a component that allows users to enter and edit date and time values using a keyboard.\nEach part of a date value is displayed in an individually editable segment.`}),`\n`,(0,e.jsx)(o,{title:\"Usage\",files:Z.usage}),`\n`,(0,e.jsxs)(t.p,{children:[\"Go to the \",(0,e.jsx)(t.a,{href:\"/docs/components/date-input\",children:\"DateInput documentation\"}),\" to learn more about the component.\"]}),`\n`,(0,e.jsx)(t.h3,{id:\"timeinput\",children:\"TimeInput\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"The \",(0,e.jsx)(t.code,{children:\"TimeInput\"}),\" component consists of a label, and a group of segments representing each unit of a time (e.g. hours, minutes, and seconds). Each segment is individually focusable and editable by the user, by typing or using the arrow keys to increment and decrement the value. This approach allows values to be formatted and parsed correctly regardless of the locale or time format, and offers an easy and error-free way to edit times using the keyboard.\"]}),`\n`,(0,e.jsx)(o,{title:\"Usage\",files:Q.usage}),`\n`,(0,e.jsxs)(t.p,{children:[\"Go to the \",(0,e.jsx)(t.a,{href:\"/docs/components/time-input\",children:\"TimeInput documentation\"}),\" to learn more about the component.\"]}),`\n`,(0,e.jsx)(t.h3,{id:\"calendar\",children:\"Calendar\"}),`\n`,(0,e.jsx)(t.p,{children:\"A Calendar consists of a grouping element containing one or more date grids (e.g. months), and a previous and next button for navigating between date ranges. Each calendar grid consists of cells containing button elements that can be pressed and navigated to using the arrow keys to select a date.\"}),`\n`,(0,e.jsx)(o,{title:\"Usage\",files:s.usage}),`\n`,(0,e.jsx)(t.p,{children:\"The calendar also supports selecting years and months for rapid selection.\"}),`\n`,(0,e.jsx)(o,{title:\"With Month And Year Picker\",files:s.withMonthAndYearPicker}),`\n`,(0,e.jsxs)(t.p,{children:[\"Go to the \",(0,e.jsx)(t.a,{href:\"/docs/components/calendar\",children:\"Calendar documentation\"}),\" to learn more about the component.\"]}),`\n`,(0,e.jsx)(t.h3,{id:\"rangecalendar\",children:\"RangeCalendar\"}),`\n`,(0,e.jsx)(t.p,{children:\"A Range calendar consists of a grouping element containing one or more date grids (e.g. months), and a previous and next button for navigating through time. Each calendar grid consists of cells containing button elements that can be pressed and navigated to using the arrow keys to select a date range. Once a start date is selected, the user can navigate to another date using the keyboard or by hovering over it, and clicking it or pressing the Enter key commits the selected date range.\"}),`\n`,(0,e.jsx)(o,{title:\"Usage\",files:Ie.usage}),`\n`,(0,e.jsxs)(t.p,{children:[\"Go to the \",(0,e.jsx)(t.a,{href:\"/docs/components/range-calendar\",children:\"RangeCalendar documentation\"}),\" to learn more about the component.\"]}),`\n`,(0,e.jsx)(t.h3,{id:\"datepicker\",children:\"DatePicker\"}),`\n`,(0,e.jsx)(t.p,{children:\"A Date Picker combines a DateInput and a Calendar popover to allow users to enter or select a date and time value.\"}),`\n`,(0,e.jsx)(o,{title:\"Usage\",files:p.usage}),`\n`,(0,e.jsxs)(t.p,{children:[\"Go to the \",(0,e.jsx)(t.a,{href:\"/docs/components/date-picker\",children:\"DatePicker documentation\"}),\" to learn more about the component.\"]}),`\n`,(0,e.jsx)(t.h3,{id:\"daterangepicker\",children:\"DateRangePicker\"}),`\n`,(0,e.jsx)(t.p,{children:\"Date Range Picker combines two DateInputs and a RangeCalendar popover to allow users to enter or select a date and time range.\"}),`\n`,(0,e.jsx)(o,{title:\"Usage\",files:yt.usage}),`\n`,(0,e.jsxs)(t.p,{children:[\"Go to the \",(0,e.jsx)(t.a,{href:\"/docs/components/date-range-picker\",children:\"DateRangePicker documentation\"}),\" to learn more about the component.\"]}),`\n`,(0,e.jsx)(t.h3,{id:\"calendar-presets\",children:\"Calendar Presets\"}),`\n`,(0,e.jsxs)(t.p,{children:[(0,e.jsx)(t.code,{children:\"Calendar\"}),\" and \",(0,e.jsx)(t.code,{children:\"RangeCalendar\"}),` components support adding custom content at the top and bottom of the calendar, this is useful for adding presets or\ncustom actions to the calendar.`]}),`\n`,(0,e.jsxs)(t.p,{children:[\"Here's an example of how to add presets to the \",(0,e.jsx)(t.code,{children:\"Calendar\"}),\" component:\"]}),`\n`,(0,e.jsx)(o,{title:\"Calendar Presets\",files:s.presets}),`\n`,(0,e.jsx)(t.h3,{id:\"internationalization\",children:\"Internationalization\"}),`\n`,(0,e.jsxs)(t.p,{children:[`These new components have built-in internationalization, time zones and granularity support, they supports selecting dates\nin many calendar systems used around the world, including `,(0,e.jsx)(t.code,{children:\"Gregorian\"}),\", \",(0,e.jsx)(t.code,{children:\"Hebrew\"}),\", \",(0,e.jsx)(t.code,{children:\"Indian\"}),\", \",(0,e.jsx)(t.code,{children:\"Islamic\"}),\", \",(0,e.jsx)(t.code,{children:\"Buddhist\"}),\", and more.\"]}),`\n`,(0,e.jsxs)(t.p,{children:[\"Dates are automatically displayed in the appropriate calendar system for the user's locale this is possible thanks to \",(0,e.jsx)(t.a,{href:\"https://react-spectrum.adobe.com/internationalized/date/\",children:\"@internationalized/date\"}),` package, which\nincludes functions for parsing strings in multiple formats into `,(0,e.jsx)(t.code,{children:\"ZonedDateTime\"}),\" objects.\"]}),`\n`,(0,e.jsxs)(t.p,{children:[\"Here's and example using the \",(0,e.jsx)(t.code,{children:\"Indian\"}),\" calendar system:\"]}),`\n`,(0,e.jsx)(o,{title:\"International Calendar\",files:p.internationalCalendar}),`\n`,(0,e.jsxs)(t.p,{children:[\"Alternatively you can set the \",(0,e.jsx)(t.code,{children:\"locale\"}),\" globally by using the \",(0,e.jsx)(t.code,{children:\"NextUIProvider\"}),\" component:\"]}),`\n`,(0,e.jsx)(t.pre,{children:(0,e.jsx)(t.code,{className:\"language-jsx\",children:`// Next.js App Router example\n\"use client\";\n\nimport {NextUIProvider} from \"@nextui-org/react\";\n\nexport interface ProvidersProps {\n  children: React.ReactNode;\n}\n\nexport function Providers({children}: ProvidersProps) {\n  const router = useRouter();\n\n  return <NextUIProvider locale=\"hi-IN-u-ca-indian\">{children}</NextUIProvider>;\n}\n`})}),`\n`,(0,e.jsxs)(t.p,{children:[\"If no \",(0,e.jsx)(t.code,{children:\"locale\"}),\" is provided, it will extract the locale from the browser.\"]}),`\n`,(0,e.jsx)(t.h3,{id:\"nextui-provider\",children:\"NextUI Provider\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"The \",(0,e.jsx)(t.code,{children:\"NextUIProvider\"}),\" component was updated to include the \",(0,e.jsx)(t.code,{children:\"createCalendar\"}),` function, which allows you to create a calendar instance with the specified locale and time zone,\nand the `,(0,e.jsx)(t.code,{children:\"defaultDates\"}),\" object which allows you to set global minimum and maximum dates for the components.\"]}),`\n`,(0,e.jsx)(t.pre,{children:(0,e.jsx)(t.code,{className:\"language-jsx\",children:`// Next.js App Router example\n\"use client\";\n\nimport {NextUIProvider, SupportedCalendars} from \"@nextui-org/react\";\nimport {CalendarDate, GregorianCalendar} from \"@internationalized/date\";\n\nexport interface ProvidersProps {\n  children: React.ReactNode;\n}\n\nfunction createCalendar(identifier: SupportedCalendars) {\n  switch (identifier) {\n    case \"gregory\":\n      return new GregorianCalendar();\n    default:\n      throw new Error(\\`Unsupported calendar \\${identifier}\\`);\n  }\n}\n\nexport function Providers({children}: ProvidersProps) {\n  const router = useRouter();\n\n  return (\n    <NextUIProvider\n      locale=\"hi-IN-u-ca-indian\"\n      defaultDates={{\n        minDate: new CalendarDate(1900, 1, 1),\n        maxDate: new CalendarDate(2099, 12, 31),\n      }}\n      createCalendar={createCalendar}\n    >\n      {children}\n    </NextUIProvider>\n  );\n}\n`})}),`\n`,(0,e.jsx)(n,{y:4}),`\n`,(0,e.jsx)(t.h2,{id:\"breaking-changes\",children:\"Breaking Changes\"}),`\n`,(0,e.jsxs)(t.h3,{id:\"removal-of-the-units-creation\",children:[\"Removal of the \",(0,e.jsx)(t.code,{children:\"units\"}),\" creation\"]}),`\n`,(0,e.jsxs)(t.p,{children:[\"To improve performance and reduce bundle size, we have removed the \",(0,e.jsx)(t.code,{children:\"units\"}),` creation from the\n`,(0,e.jsx)(t.code,{children:\"nextui\"}),\" plugin. \",(0,e.jsx)(t.a,{href:\"https://tailwindcss.com/blog/tailwindcss-v3-4\",children:\"TailwindCSS v3.4\"}),\" added support for \",(0,e.jsx)(t.code,{children:\"min-h-*\"}),\" and \",(0,e.jsx)(t.code,{children:\"min-w-*\"}),\" classes, so it is no longer needed.\"]}),`\n`,(0,e.jsx)(t.p,{children:\"How to upgrade:\"}),`\n`,(0,e.jsxs)(t.ol,{children:[`\n`,(0,e.jsx)(t.li,{children:\"Upgrade TailwindCSS to version 3.4 or later (if you haven't already). You can do this by running:\"}),`\n`]}),`\n`,(0,e.jsx)(t.pre,{children:(0,e.jsx)(t.code,{className:\"language-bash\",children:`npm install tailwindcss@latest\n`})}),`\n`,(0,e.jsxs)(t.ol,{start:\"2\",children:[`\n`,(0,e.jsxs)(t.li,{children:[\"Remove the \",(0,e.jsx)(t.code,{children:\"spacingUnit\"}),\" configuration from your \",(0,e.jsx)(t.code,{children:\"tailwind.config.(js|ts)\"}),\" file (if you have it):\"]}),`\n`]}),`\n`,(0,e.jsx)(t.pre,{children:(0,e.jsx)(t.code,{className:\"language-diff-js\",children:` plugins: [\n    nextui({\n      layout: {\n-       spacingUnit: 4,\n      },\n    }),\n  ],\n`})}),`\n`,(0,e.jsxs)(t.ol,{start:\"3\",children:[`\n`,(0,e.jsxs)(t.li,{children:[\"Find all \",(0,e.jsx)(t.code,{children:\"-unit\"}),\" classes in your project and replace them with a \",(0,e.jsx)(t.code,{children:\"-\"}),\" separator. For example, replace \",(0,e.jsx)(t.code,{children:\"p-unit-4\"}),\" with \",(0,e.jsx)(t.code,{children:\"p-4\"}),\".\"]}),`\n`]}),`\n`,(0,e.jsx)(t.pre,{children:(0,e.jsx)(t.code,{className:\"language-diff-jsx\",children:`import {Button} from \"@nextui-org/react\";\n\nexport const MyButton = () => {\n  return (\n-    <Button className=\"px-unit-2 py-unit-1 min-w-unit-48\">\n+    <Button className=\"px-2 py-1 min-w-48\">\n      My Button\n    </Button>\n  );\n};\n`})}),`\n`,(0,e.jsxs)(t.h3,{id:\"separation-for-errormessage-and-isinvalid\",children:[\"Separation for \",(0,e.jsx)(t.code,{children:\"errorMessage\"}),\" and \",(0,e.jsx)(t.code,{children:\"isInvalid\"})]}),`\n`,(0,e.jsxs)(t.p,{children:[`We are currently working on supporting multiple types of validation, including native HTML constraint validation, custom validation, and real-time validation.\nDue to this reason, the requirements for displaying error messages have become more varied, and it is necessary to handle validation conditions separately from the `,(0,e.jsx)(t.code,{children:\"errorMessage\"}),\".\"]}),`\n`,(0,e.jsx)(t.p,{children:\"How to upgrade:\"}),`\n`,(0,e.jsxs)(t.ol,{children:[`\n`,(0,e.jsxs)(t.li,{children:[\"To display \",(0,e.jsx)(t.code,{children:\"errorMessage\"}),\", \",(0,e.jsx)(t.code,{children:\"isInvalid\"}),\" must be set to \",(0,e.jsx)(t.code,{children:\"true\"}),\".\"]}),`\n`]}),`\n`,(0,e.jsx)(t.pre,{children:(0,e.jsx)(t.code,{className:\"language-diff-jsx\",children:`<Input\n  type=\"email\"\n  label=\"Email\"\n  variant=\"bordered\"\n  defaultValue=\"junior2nextui.org\"\n+ isInvalid={true}\n  errorMessage=\"Please enter a valid email\"\n  className=\"max-w-xs\"\n/>\n`})}),`\n`,(0,e.jsx)(t.p,{children:\"That's it! Your project should now be using the latest version of TailwindCSS and NextUI.\"}),`\n`,(0,e.jsx)(n,{y:4}),`\n`,(0,e.jsx)(t.h2,{id:\"other-changes\",children:\"Other Changes\"}),`\n`,(0,e.jsxs)(t.p,{children:[(0,e.jsx)(t.strong,{children:\"Bug Fixes\"}),\":\"]}),`\n`,(0,e.jsxs)(t.ul,{children:[`\n`,(0,e.jsxs)(t.li,{children:[\"Fixed an HSL color rounding issue in the theme settings to ensure accurate color representation. \",(0,e.jsx)(t.a,{href:\"https://github.com/nextui-org/nextui/pull/2702\",children:\"PR\"}),\" - \",(0,e.jsx)(t.a,{href:\"https://github.com/wingkwong\",children:\"@wingkwong\"})]}),`\n`,(0,e.jsxs)(t.li,{children:[\"Removed conflicting transition definitions affecting CSS classes. \",(0,e.jsx)(t.a,{href:\"https://github.com/nextui-org/nextui/pull/2677\",children:\"PR\"}),\" - \",(0,e.jsx)(t.a,{href:\"https://github.com/u3u\",children:\"@u3u\"})]}),`\n`,(0,e.jsxs)(t.li,{children:['Patched the \"@nextui-org/autocomplete\" package to fix an issue where empty items with ',(0,e.jsx)(t.code,{children:\"allowCustomValue\"}),\" would not render properly due to a null node problem. \",(0,e.jsx)(t.a,{href:\"https://github.com/nextui-org/nextui/pull/2674\",children:\"PR\"}),\" - \",(0,e.jsx)(t.a,{href:\"https://github.com/wingkwong\",children:\"@wingkwong\"})]}),`\n`,(0,e.jsxs)(t.li,{children:[\"Implemented a fix in modal components to prevent carryover of IME (Input Method Editor) input when switching fields using the Tab key. \",(0,e.jsx)(t.a,{href:\"https://github.com/nextui-org/nextui/pull/2709\",children:\"PR\"}),\" - \",(0,e.jsx)(t.a,{href:\"https://github.com/ryo-manba\",children:\"@ryo-manba\"})]}),`\n`,(0,e.jsxs)(t.li,{children:[\"Enhanced accessibility by handling Tab key press event in the \",(0,e.jsx)(t.code,{children:\"ModalContent\"}),\" component. \",(0,e.jsx)(t.a,{href:\"https://github.com/nextui-org/nextui/pull/2709\",children:\"PR\"}),\" - \",(0,e.jsx)(t.a,{href:\"https://github.com/ryo-manba\",children:\"@ryo-manba\"})]}),`\n`,(0,e.jsxs)(t.li,{children:[\"Fixed an issue where disabled select components could still be changed using blur and keyboard shortcuts. \",(0,e.jsx)(t.a,{href:\"https://github.com/nextui-org/nextui/pull/2649\",children:\"PR\"}),\" - \",(0,e.jsx)(t.a,{href:\"https://github.com/wingkwong\",children:\"@wingkwong\"})]}),`\n`,(0,e.jsxs)(t.li,{children:['Patched issues in \"@nextui-org/use-aria-multiselect\" and \"@nextui-org/stories-utils\" packages to fix a warning about ',(0,e.jsx)(t.code,{children:\"SELECT defaultSelectedKeys\"}),\". \",(0,e.jsx)(t.a,{href:\"https://github.com/nextui-org/nextui/pull/2648\",children:\"PR\"}),\" - \",(0,e.jsx)(t.a,{href:\"https://github.com/wingkwong\",children:\"@wingkwong\"})]}),`\n`,(0,e.jsxs)(t.li,{children:[\"Fixed an issue with incorrect \",(0,e.jsx)(t.code,{children:\"onChange\"}),\" typing in Checkbox Group, ensuring it now correctly handles an array of strings as values. \",(0,e.jsx)(t.a,{href:\"https://github.com/nextui-org/nextui/pull/2595\",children:\"PR\"}),\" - \",(0,e.jsx)(t.a,{href:\"https://github.com/wingkwong\",children:\"@wingkwong\"})]}),`\n`,(0,e.jsxs)(t.li,{children:[\"Fixed the \",(0,e.jsx)(t.code,{children:\"label\"}),\" placement issue in \",(0,e.jsx)(t.code,{children:\"Select\"}),\" component if a \",(0,e.jsx)(t.code,{children:\"description\"}),\" prop is used \",(0,e.jsx)(t.a,{href:\"https://github.com/nextui-org/nextui/pull/2553\",children:\"PR\"}),\" - \",(0,e.jsx)(t.a,{href:\"https://github.com/novsource\",children:\"@novsource\"})]}),`\n`,(0,e.jsxs)(t.li,{children:[\"Fixed the \",(0,e.jsx)(t.code,{children:\"originalProps\"}),\" spread issue in the \",(0,e.jsx)(t.code,{children:\"Dropdown\"}),\" component. \",(0,e.jsx)(t.a,{href:\"https://github.com/nextui-org/nextui/pull/2450\",children:\"PR\"}),\" - \",(0,e.jsx)(t.a,{href:\"https://github.com/wingkwong\",children:\"@wingkwong\"})]}),`\n`]}),`\n`,(0,e.jsx)(t.p,{children:(0,e.jsx)(t.strong,{children:\"Improvements\"})}),`\n`,(0,e.jsxs)(t.ul,{children:[`\n`,(0,e.jsxs)(t.li,{children:[\"Framer Motion was updated to the latest version, improving performance and reducing bundle size. \",(0,e.jsx)(t.a,{href:\"https://www.framer.com/motion/guide-reduce-bundle-size/\",children:\"Docs\"}),\" \",(0,e.jsx)(t.a,{href:\"https://github.com/nextui-org/nextui/pull/2464\",children:\"PR\"}),\" - \",(0,e.jsx)(t.a,{href:\"https://github.com/mezotv\",children:\"@mezotv\"})]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.code,{children:\"LazyMotion\"}),\" was added to all components that use Framer Motion, improving performance by only loading the required motion components.\"]}),`\n`,(0,e.jsxs)(t.li,{children:[\"We removed the custom \",(0,e.jsx)(t.code,{children:\"units\"}),\" creation from the \",(0,e.jsx)(t.code,{children:\"nextui\"}),\" plugin, it is no longer needed with TailwindCSS v3.4 and above. \",(0,e.jsx)(t.a,{href:\"https://github.com/nextui-org/nextui/pull/2713\",children:\"PR\"}),\" - \",(0,e.jsx)(t.a,{href:\"https://github.com/jrgarciadev\",children:\"@jrgarciadev\"})]}),`\n`,(0,e.jsxs)(t.li,{children:[\"Updated \",(0,e.jsx)(t.code,{children:\"framer-motion\"}),\" package across various components and utilities to version \",(0,e.jsx)(t.code,{children:\"11.0.22\"}),\" for enhanced performance and consistency. \",(0,e.jsx)(t.a,{href:\"https://github.com/nextui-org/nextui/pull/2596\",children:\"PR\"}),\" - \",(0,e.jsx)(t.a,{href:\"https://github.com/wingkwong\",children:\"@wingkwong\"})]}),`\n`,(0,e.jsxs)(t.li,{children:[\"Ensured compatibility with \",(0,e.jsx)(t.code,{children:\"react@18.2.0\"}),\" and \",(0,e.jsx)(t.code,{children:\"react-dom@18.2.0\"}),\" across the board. \",(0,e.jsx)(t.a,{href:\"https://github.com/nextui-org/nextui/pull/2596\",children:\"PR\"}),\" - \",(0,e.jsx)(t.a,{href:\"https://github.com/wingkwong\",children:\"@wingkwong\"})]}),`\n`,(0,e.jsxs)(t.li,{children:[\"Introduced patches for NextUI components to improve animations, including support for keyframes with spring and inertia animations. \",(0,e.jsx)(t.a,{href:\"https://github.com/nextui-org/nextui/pull/2596\",children:\"PR\"}),\" - \",(0,e.jsx)(t.a,{href:\"https://github.com/wingkwong\",children:\"@wingkwong\"})]}),`\n`,(0,e.jsxs)(t.li,{children:[\"Improved handling of numeric keys in the multi-select component to ensure consistent behavior. \",(0,e.jsx)(t.a,{href:\"https://github.com/nextui-org/nextui/pull/2589\",children:\"PR\"}),\" - \",(0,e.jsx)(t.a,{href:\"https://github.com/wingkwong\",children:\"@wingkwong\"})]}),`\n`,(0,e.jsxs)(t.li,{children:[\"Updated the version of react-aria to include the latest changes as detailed in the \",(0,e.jsx)(t.a,{href:\"https://react-spectrum.adobe.com/releases/2024-02-13.html\",children:\"2024-02-13 release\"}),\". \",(0,e.jsx)(t.a,{href:\"https://github.com/nextui-org/nextui/pull/2561\",children:\"PR\"}),\" - \",(0,e.jsx)(t.a,{href:\"https://github.com/ryo-manba\",children:\"@ryo-manba\"})]}),`\n`,(0,e.jsxs)(t.li,{children:[\"Added support for custom class names in the \",(0,e.jsx)(t.code,{children:\"AvatarGroup\"}),\" component, enhancing flexibility in styling. \",(0,e.jsx)(t.a,{href:\"https://github.com/nextui-org/nextui/pull/2669\",children:\"PR\"}),\" - \",(0,e.jsx)(t.a,{href:\"https://github.com/wingkwong\",children:\"@wingkwong\"})]}),`\n`,(0,e.jsxs)(t.li,{children:[\"Introduced a \",(0,e.jsx)(t.code,{children:\"count\"}),\" slot to the \",(0,e.jsx)(t.code,{children:\"AvatarGroup\"}),\" for more customized rendering. \",(0,e.jsx)(t.a,{href:\"https://github.com/nextui-org/nextui/pull/2669\",children:\"PR\"}),\" - \",(0,e.jsx)(t.a,{href:\"https://github.com/wingkwong\",children:\"@wingkwong\"})]}),`\n`,(0,e.jsxs)(t.li,{children:[\"Improved the \",(0,e.jsx)(t.code,{children:\"AvatarGroup\"}),\" component's count rendering logic for better performance and flexibility. \",(0,e.jsx)(t.a,{href:\"https://github.com/nextui-org/nextui/pull/2669\",children:\"PR\"}),\" - \",(0,e.jsx)(t.a,{href:\"https://github.com/wingkwong\",children:\"@wingkwong\"})]}),`\n`,(0,e.jsxs)(t.li,{children:[\"Add RTL support to the kbd component. \",(0,e.jsx)(t.a,{href:\"https://github.com/nextui-org/nextui/pull/2482\",children:\"PR\"}),\" - \",(0,e.jsx)(t.a,{href:\"https://github.com/mrbadri\",children:\"@mrbadri\"})]}),`\n`,(0,e.jsxs)(t.li,{children:[\"Add RTL support to the Select component. \",(0,e.jsx)(t.a,{href:\"https://github.com/nextui-org/nextui/pull/2485\",children:\"PR\"}),\" - \",(0,e.jsx)(t.a,{href:\"https://github.com/mrbadri\",children:\"@mrbadri\"})]}),`\n`,(0,e.jsxs)(t.li,{children:[\"Add RTL support to the avatar group componen. \",(0,e.jsx)(t.a,{href:\"https://github.com/nextui-org/nextui/pull/2498\",children:\"PR\"}),\" - \",(0,e.jsx)(t.a,{href:\"https://github.com/mrbadri\",children:\"@mrbadri\"})]}),`\n`,(0,e.jsxs)(t.li,{children:[\"Add RTL support to the Table component. \",(0,e.jsx)(t.a,{href:\"https://github.com/nextui-org/nextui/pull/2472\",children:\"PR\"}),\" - \",(0,e.jsx)(t.a,{href:\"https://github.com/mrbadri\",children:\"@mrbadri\"})]}),`\n`]}),`\n`,(0,e.jsxs)(t.p,{children:[(0,e.jsx)(t.strong,{children:\"Documentation\"}),\":\"]}),`\n`,(0,e.jsxs)(t.ul,{children:[`\n`,(0,e.jsxs)(t.li,{children:[\"Updated documentation to reflect the new features and changes in the \",(0,e.jsx)(t.code,{children:\"AvatarGroup\"}),\" component.\"]}),`\n`,(0,e.jsxs)(t.li,{children:['Added support for the \"bun\" package manager across documentation and components. ',(0,e.jsx)(t.a,{href:\"https://github.com/nextui-org/nextui/pull/2625\",children:\"PR\"}),\" - \",(0,e.jsx)(t.a,{href:\"https://github.com/sudongyuer\",children:\"@sudongyuer\"})]}),`\n`,(0,e.jsxs)(t.li,{children:[(0,e.jsx)(t.a,{href:\"https://www.kapa.ai/\",children:\"Kapa.ai\"}),\" widget was added to the documentation to provide AI support for users. \",(0,e.jsx)(t.a,{href:\"https://github.com/nextui-org/nextui/pull/2428\",children:\"PR\"}),\" - \",(0,e.jsx)(t.a,{href:\"https://github.com/sudongyuer\",children:\"@wingkwong\"})]}),`\n`,(0,e.jsxs)(t.li,{children:[\"Layout docs updated to remove the \",(0,e.jsx)(t.code,{children:\"units\"}),\" configuration from the \",(0,e.jsx)(t.code,{children:\"tailwind.config.(js|ts)\"}),\" file.\"]}),`\n`]}),`\n`,(0,e.jsxs)(t.p,{children:[\"Special thanks to NextUI Team members \",(0,e.jsx)(t.a,{href:\"https://github.com/kuri-sun\",children:\"@kuri-sun\"}),\", \",(0,e.jsx)(t.a,{href:\"https://github.com/ryo-manba\",children:\"@ryo-manba\"}),`,\n`,(0,e.jsx)(t.a,{href:\"https://github.com/sudongyuer\",children:\"@sudongyuer\"}),\", \",(0,e.jsx)(t.a,{href:\"https://github.com/winchesHe\",children:\"@winchesHe\"}),\", \",(0,e.jsx)(t.a,{href:\"https://github.com/wingkwong\",children:\"@wingkwong\"}),`,\n`,(0,e.jsx)(t.a,{href:\"https://github.com/tianenpang\",children:\"@tianenpang\"}),\", \",(0,e.jsx)(t.a,{href:\"https://github.com/smultar\",children:\"@smultar\"}),\" and contributors for their contributions to this release.\"]}),`\n`,(0,e.jsxs)(t.p,{children:[\"For a full list of changes, please refer to the \",(0,e.jsx)(t.a,{href:\"https://github.com/nextui-org/nextui/releases/tag/%40nextui-org%2Freact%402.3.0\",children:\"release notes\"}),\".\"]}),`\n`,(0,e.jsx)(n,{y:6}),`\n`,(0,e.jsx)(t.p,{children:\"We hope you enjoy these new components and the new features. We're excited to see what you build with them!\"}),`\n`,(0,e.jsx)(t.p,{children:\"Thanks for reading and happy coding! \\u{1F680}\"}),`\n`,(0,e.jsx)(t.hr,{}),`\n`,(0,e.jsx)(t.h2,{id:\"community\",children:\"Community\"}),`\n`,(0,e.jsx)(t.p,{children:`We're excited to see the community adopt NextUI, raise issues, and provide feedback.\nWhether it's a feature request, bug report, or a project to showcase, please get involved!`}),`\n`,(0,e.jsx)(r,{}),`\n`,(0,e.jsx)(t.h2,{id:\"contributing\",children:\"Contributing\"}),`\n`,(0,e.jsxs)(t.p,{children:[\"PR's on NextUI are always welcome, please see our \",(0,e.jsx)(t.a,{href:\"https://github.com/nextui-org/nextui/blob/main/CONTRIBUTING.md\",children:\"contribution guidelines\"}),\" to learn how you can contribute to this project.\"]})]})}function Ct(a={}){let{wrapper:t}=a.components||{};return t?(0,e.jsx)(t,{...a,children:(0,e.jsx)(At,{...a})}):At(a)}function l(a,t){throw new Error(\"Expected \"+(t?\"component\":\"object\")+\" `\"+a+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return Zt(xl);})();\n;return Component;"
  },
  "_id": "blog/v2.3.0.mdx",
  "_raw": {
    "sourceFilePath": "blog/v2.3.0.mdx",
    "sourceFileName": "v2.3.0.mdx",
    "sourceFileDir": "blog",
    "contentType": "mdx",
    "flattenedPath": "blog/v2.3.0"
  },
  "type": "BlogPost",
  "slug": "/blog/v2.3.0",
  "slugAsParams": "v2.3.0",
  "url": "/blog/v2.3.0",
  "formattedDate": "April 16, 2024",
  "imageAsParams": "https://nextui.org/blog/v2.3.0.jpg"
}